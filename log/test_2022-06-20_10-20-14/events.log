[0.000000] (-) TimerEvent: {}
[0.001177] (sf_pkg) JobQueued: {'identifier': 'sf_pkg', 'dependencies': OrderedDict([('sf_pkg', '/home/pi/sunflower/install/sf_pkg')])}
[0.001493] (stem_pkg) JobQueued: {'identifier': 'stem_pkg', 'dependencies': OrderedDict([('stem_pkg', '/home/pi/sunflower/install/stem_pkg')])}
[0.002291] (sunflower_interfaces) JobQueued: {'identifier': 'sunflower_interfaces', 'dependencies': OrderedDict([('sunflower_interfaces', '/home/pi/sunflower/install/sunflower_interfaces')])}
[0.003512] (test_pkg) JobQueued: {'identifier': 'test_pkg', 'dependencies': OrderedDict([('test_pkg', '/home/pi/sunflower/install/test_pkg')])}
[0.003738] (tflite_pkg) JobQueued: {'identifier': 'tflite_pkg', 'dependencies': OrderedDict([('tflite_pkg', '/home/pi/sunflower/install/tflite_pkg')])}
[0.004399] (sf_pkg) JobStarted: {'identifier': 'sf_pkg'}
[0.055934] (stem_pkg) JobStarted: {'identifier': 'stem_pkg'}
[0.089452] (sunflower_interfaces) JobStarted: {'identifier': 'sunflower_interfaces'}
[0.099898] (-) TimerEvent: {}
[0.123849] (test_pkg) JobStarted: {'identifier': 'test_pkg'}
[0.200199] (-) TimerEvent: {}
[0.301112] (-) TimerEvent: {}
[0.401845] (-) TimerEvent: {}
[0.502665] (-) TimerEvent: {}
[0.603417] (-) TimerEvent: {}
[0.704117] (-) TimerEvent: {}
[0.804817] (-) TimerEvent: {}
[0.905508] (-) TimerEvent: {}
[1.006321] (-) TimerEvent: {}
[1.107207] (-) TimerEvent: {}
[1.207968] (-) TimerEvent: {}
[1.297687] (sf_pkg) Command: {'cmd': ['/usr/bin/python3', '-m', 'pytest'], 'cwd': '/home/pi/sunflower/src/sf_pkg', 'env': {'LESSOPEN': '| /usr/bin/lesspipe %s', 'USER': 'pi', 'SSH_CLIENT': '211.217.28.227 58587 22', 'XDG_SESSION_TYPE': 'tty', 'GIT_ASKPASS': '/home/pi/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/extensions/git/dist/askpass.sh', 'SHLVL': '1', 'LD_LIBRARY_PATH': '/home/pi/sunflower/install/sunflower_interfaces/lib:/opt/ros/foxy/opt/yaml_cpp_vendor/lib:/opt/ros/foxy/opt/rviz_ogre_vendor/lib:/opt/ros/foxy/lib/aarch64-linux-gnu:/opt/ros/foxy/lib', 'BROWSER': '/home/pi/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/bin/helpers/browser.sh', 'MOTD_SHOWN': 'pam', 'HOME': '/home/pi', 'TERM_PROGRAM_VERSION': '1.68.1', 'VSCODE_IPC_HOOK_CLI': '/run/user/1000/vscode-ipc-8bde6f76-ba4e-4b4d-b68b-5b379bd0b432.sock', 'ROS_PYTHON_VERSION': '3', 'VSCODE_GIT_ASKPASS_MAIN': '/home/pi/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/extensions/git/dist/askpass-main.js', 'VSCODE_GIT_ASKPASS_NODE': '/home/pi/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/node', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/1000/bus', 'COLORTERM': 'truecolor', 'COLCON_PREFIX_PATH': '/home/pi/sunflower/install', 'ROS_DISTRO': 'foxy', 'LOGNAME': 'pi', '_': '/usr/bin/colcon', 'ROS_VERSION': '2', 'XDG_SESSION_CLASS': 'user', 'TERM': 'xterm-256color', 'XDG_SESSION_ID': '4', 'ROS_LOCALHOST_ONLY': '0', 'PATH': '/home/pi/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/bin/remote-cli:/home/pi/.local/bin:/opt/ros/foxy/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin', 'XDG_RUNTIME_DIR': '/run/user/1000', 'LANG': 'C.UTF-8', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:', 'VSCODE_GIT_IPC_HANDLE': '/run/user/1000/vscode-git-ad91e88160.sock', 'TERM_PROGRAM': 'vscode', 'AMENT_PREFIX_PATH': '/home/pi/sunflower/install/sf_pkg:/home/pi/sunflower/install/tflite_pkg:/home/pi/sunflower/install/test_pkg:/home/pi/sunflower/install/sunflower_interfaces:/opt/ros/foxy', 'SHELL': '/bin/bash', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'VSCODE_GIT_ASKPASS_EXTRA_ARGS': '', 'PWD': '/home/pi/sunflower/build/sf_pkg', 'SSH_CONNECTION': '211.217.28.227 58587 210.91.28.223 22', 'XDG_DATA_DIRS': '/usr/local/share:/usr/share:/var/lib/snapd/desktop', 'PYTHONPATH': '/home/pi/sunflower/build/sf_pkg:/home/pi/sunflower/install/sf_pkg/lib/python3.8/site-packages:/home/pi/sunflower/build/tflite_pkg:/home/pi/sunflower/install/tflite_pkg/lib/python3.8/site-packages:/home/pi/sunflower/build/test_pkg:/home/pi/sunflower/install/test_pkg/lib/python3.8/site-packages:/home/pi/sunflower/install/sunflower_interfaces/lib/python3.8/site-packages:/home/pi/sunflower/build/stem_pkg:/home/pi/sunflower/install/stem_pkg/lib/python3.8/site-packages:/opt/ros/foxy/lib/python3.8/site-packages', 'COLCON': '1', 'CMAKE_PREFIX_PATH': '/home/pi/sunflower/install/sunflower_interfaces', 'PYTEST_ADDOPTS': '--tb=short --junit-xml=/home/pi/sunflower/build/sf_pkg/pytest.xml --junit-prefix=sf_pkg -o cache_dir=/home/pi/sunflower/build/sf_pkg/.pytest_cache'}, 'shell': False}
[1.308547] (-) TimerEvent: {}
[1.414171] (-) TimerEvent: {}
[1.515477] (-) TimerEvent: {}
[1.616444] (-) TimerEvent: {}
[1.717265] (-) TimerEvent: {}
[1.818077] (-) TimerEvent: {}
[1.918904] (-) TimerEvent: {}
[2.019768] (-) TimerEvent: {}
[2.120558] (-) TimerEvent: {}
[2.221335] (-) TimerEvent: {}
[2.322160] (-) TimerEvent: {}
[2.422997] (-) TimerEvent: {}
[2.523802] (-) TimerEvent: {}
[2.624659] (-) TimerEvent: {}
[2.656670] (stem_pkg) Command: {'cmd': ['/usr/bin/python3', '-m', 'pytest'], 'cwd': '/home/pi/sunflower/src/stem_pkg', 'env': {'LESSOPEN': '| /usr/bin/lesspipe %s', 'USER': 'pi', 'SSH_CLIENT': '211.217.28.227 58587 22', 'XDG_SESSION_TYPE': 'tty', 'GIT_ASKPASS': '/home/pi/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/extensions/git/dist/askpass.sh', 'SHLVL': '1', 'LD_LIBRARY_PATH': '/home/pi/sunflower/install/sunflower_interfaces/lib:/opt/ros/foxy/opt/yaml_cpp_vendor/lib:/opt/ros/foxy/opt/rviz_ogre_vendor/lib:/opt/ros/foxy/lib/aarch64-linux-gnu:/opt/ros/foxy/lib', 'BROWSER': '/home/pi/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/bin/helpers/browser.sh', 'MOTD_SHOWN': 'pam', 'HOME': '/home/pi', 'TERM_PROGRAM_VERSION': '1.68.1', 'VSCODE_IPC_HOOK_CLI': '/run/user/1000/vscode-ipc-8bde6f76-ba4e-4b4d-b68b-5b379bd0b432.sock', 'ROS_PYTHON_VERSION': '3', 'VSCODE_GIT_ASKPASS_MAIN': '/home/pi/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/extensions/git/dist/askpass-main.js', 'VSCODE_GIT_ASKPASS_NODE': '/home/pi/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/node', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/1000/bus', 'COLORTERM': 'truecolor', 'COLCON_PREFIX_PATH': '/home/pi/sunflower/install', 'ROS_DISTRO': 'foxy', 'LOGNAME': 'pi', '_': '/usr/bin/colcon', 'ROS_VERSION': '2', 'XDG_SESSION_CLASS': 'user', 'TERM': 'xterm-256color', 'XDG_SESSION_ID': '4', 'ROS_LOCALHOST_ONLY': '0', 'PATH': '/home/pi/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/bin/remote-cli:/home/pi/.local/bin:/opt/ros/foxy/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin', 'XDG_RUNTIME_DIR': '/run/user/1000', 'LANG': 'C.UTF-8', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:', 'VSCODE_GIT_IPC_HANDLE': '/run/user/1000/vscode-git-ad91e88160.sock', 'TERM_PROGRAM': 'vscode', 'AMENT_PREFIX_PATH': '/home/pi/sunflower/install/tflite_pkg:/home/pi/sunflower/install/test_pkg:/home/pi/sunflower/install/sunflower_interfaces:/home/pi/sunflower/install/sf_pkg:/opt/ros/foxy', 'SHELL': '/bin/bash', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'VSCODE_GIT_ASKPASS_EXTRA_ARGS': '', 'PWD': '/home/pi/sunflower/build/stem_pkg', 'SSH_CONNECTION': '211.217.28.227 58587 210.91.28.223 22', 'XDG_DATA_DIRS': '/usr/local/share:/usr/share:/var/lib/snapd/desktop', 'PYTHONPATH': '/home/pi/sunflower/build/stem_pkg:/home/pi/sunflower/install/stem_pkg/lib/python3.8/site-packages:/home/pi/sunflower/build/tflite_pkg:/home/pi/sunflower/install/tflite_pkg/lib/python3.8/site-packages:/home/pi/sunflower/build/test_pkg:/home/pi/sunflower/install/test_pkg/lib/python3.8/site-packages:/home/pi/sunflower/install/sunflower_interfaces/lib/python3.8/site-packages:/home/pi/sunflower/build/sf_pkg:/home/pi/sunflower/install/sf_pkg/lib/python3.8/site-packages:/opt/ros/foxy/lib/python3.8/site-packages', 'COLCON': '1', 'CMAKE_PREFIX_PATH': '/home/pi/sunflower/install/sunflower_interfaces', 'PYTEST_ADDOPTS': '--tb=short --junit-xml=/home/pi/sunflower/build/stem_pkg/pytest.xml --junit-prefix=stem_pkg -o cache_dir=/home/pi/sunflower/build/stem_pkg/.pytest_cache'}, 'shell': False}
[2.725059] (-) TimerEvent: {}
[2.828103] (-) TimerEvent: {}
[2.928938] (-) TimerEvent: {}
[3.033060] (-) TimerEvent: {}
[3.135615] (-) TimerEvent: {}
[3.237821] (-) TimerEvent: {}
[3.340115] (-) TimerEvent: {}
[3.442031] (-) TimerEvent: {}
[3.542975] (-) TimerEvent: {}
[3.645181] (-) TimerEvent: {}
[3.748233] (-) TimerEvent: {}
[3.851856] (-) TimerEvent: {}
[3.952972] (-) TimerEvent: {}
[4.054747] (-) TimerEvent: {}
[4.159134] (-) TimerEvent: {}
[4.261892] (-) TimerEvent: {}
[4.363220] (-) TimerEvent: {}
[4.400050] (test_pkg) Command: {'cmd': ['/usr/bin/python3', '-m', 'pytest'], 'cwd': '/home/pi/sunflower/src/test_pkg', 'env': {'LESSOPEN': '| /usr/bin/lesspipe %s', 'USER': 'pi', 'SSH_CLIENT': '211.217.28.227 58587 22', 'XDG_SESSION_TYPE': 'tty', 'GIT_ASKPASS': '/home/pi/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/extensions/git/dist/askpass.sh', 'SHLVL': '1', 'LD_LIBRARY_PATH': '/home/pi/sunflower/install/sunflower_interfaces/lib:/opt/ros/foxy/opt/yaml_cpp_vendor/lib:/opt/ros/foxy/opt/rviz_ogre_vendor/lib:/opt/ros/foxy/lib/aarch64-linux-gnu:/opt/ros/foxy/lib', 'BROWSER': '/home/pi/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/bin/helpers/browser.sh', 'MOTD_SHOWN': 'pam', 'HOME': '/home/pi', 'TERM_PROGRAM_VERSION': '1.68.1', 'VSCODE_IPC_HOOK_CLI': '/run/user/1000/vscode-ipc-8bde6f76-ba4e-4b4d-b68b-5b379bd0b432.sock', 'ROS_PYTHON_VERSION': '3', 'VSCODE_GIT_ASKPASS_MAIN': '/home/pi/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/extensions/git/dist/askpass-main.js', 'VSCODE_GIT_ASKPASS_NODE': '/home/pi/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/node', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/1000/bus', 'COLORTERM': 'truecolor', 'COLCON_PREFIX_PATH': '/home/pi/sunflower/install', 'ROS_DISTRO': 'foxy', 'LOGNAME': 'pi', '_': '/usr/bin/colcon', 'ROS_VERSION': '2', 'XDG_SESSION_CLASS': 'user', 'TERM': 'xterm-256color', 'XDG_SESSION_ID': '4', 'ROS_LOCALHOST_ONLY': '0', 'PATH': '/home/pi/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/bin/remote-cli:/home/pi/.local/bin:/opt/ros/foxy/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin', 'XDG_RUNTIME_DIR': '/run/user/1000', 'LANG': 'C.UTF-8', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:', 'VSCODE_GIT_IPC_HANDLE': '/run/user/1000/vscode-git-ad91e88160.sock', 'TERM_PROGRAM': 'vscode', 'AMENT_PREFIX_PATH': '/home/pi/sunflower/install/test_pkg:/home/pi/sunflower/install/tflite_pkg:/home/pi/sunflower/install/sunflower_interfaces:/home/pi/sunflower/install/sf_pkg:/opt/ros/foxy', 'SHELL': '/bin/bash', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'VSCODE_GIT_ASKPASS_EXTRA_ARGS': '', 'PWD': '/home/pi/sunflower/build/test_pkg', 'SSH_CONNECTION': '211.217.28.227 58587 210.91.28.223 22', 'XDG_DATA_DIRS': '/usr/local/share:/usr/share:/var/lib/snapd/desktop', 'PYTHONPATH': '/home/pi/sunflower/build/test_pkg:/home/pi/sunflower/install/test_pkg/lib/python3.8/site-packages:/home/pi/sunflower/build/tflite_pkg:/home/pi/sunflower/install/tflite_pkg/lib/python3.8/site-packages:/home/pi/sunflower/install/sunflower_interfaces/lib/python3.8/site-packages:/home/pi/sunflower/build/stem_pkg:/home/pi/sunflower/install/stem_pkg/lib/python3.8/site-packages:/home/pi/sunflower/build/sf_pkg:/home/pi/sunflower/install/sf_pkg/lib/python3.8/site-packages:/opt/ros/foxy/lib/python3.8/site-packages', 'COLCON': '1', 'CMAKE_PREFIX_PATH': '/home/pi/sunflower/install/sunflower_interfaces', 'PYTEST_ADDOPTS': '--tb=short --junit-xml=/home/pi/sunflower/build/test_pkg/pytest.xml --junit-prefix=test_pkg -o cache_dir=/home/pi/sunflower/build/test_pkg/.pytest_cache'}, 'shell': False}
[4.427810] (sunflower_interfaces) JobEnded: {'identifier': 'sunflower_interfaces', 'rc': 0}
[4.433885] (tflite_pkg) JobStarted: {'identifier': 'tflite_pkg'}
[4.463991] (-) TimerEvent: {}
[4.566275] (-) TimerEvent: {}
[4.670686] (-) TimerEvent: {}
[4.765543] (sf_pkg) StdoutLine: {'line': b'\x1b[1m============================= test session starts ==============================\x1b[0m\n'}
[4.766814] (sf_pkg) StdoutLine: {'line': b'platform linux -- Python 3.8.10, pytest-7.1.2, pluggy-0.13.0\n'}
[4.770912] (-) TimerEvent: {}
[4.813165] (sf_pkg) StdoutLine: {'line': b'cachedir: /home/pi/sunflower/build/sf_pkg/.pytest_cache\n'}
[4.814912] (sf_pkg) StdoutLine: {'line': b'rootdir: /home/pi/sunflower/src/sf_pkg\n'}
[4.816626] (sf_pkg) StdoutLine: {'line': b'plugins: ament-flake8-0.9.6, ament-copyright-0.9.6, launch-testing-ros-0.11.6, ament-xmllint-0.9.6, ament-pep257-0.9.6, ament-lint-0.9.6, launch-testing-0.10.8, rerunfailures-10.2, repeat-0.9.1, colcon-core-0.8.3, cov-2.8.1\n'}
[4.871403] (-) TimerEvent: {}
[4.972350] (-) TimerEvent: {}
[5.073587] (-) TimerEvent: {}
[5.179145] (-) TimerEvent: {}
[5.266529] (sf_pkg) StdoutLine: {'line': b'\x1b[1mcollecting ... \x1b[0m\x1b[1m\n'}
[5.267392] (sf_pkg) StdoutLine: {'line': b'collected 3 items                                                              \x1b[0m\n'}
[5.271866] (sf_pkg) StdoutLine: {'line': b'\n'}
[5.279376] (-) TimerEvent: {}
[5.380524] (-) TimerEvent: {}
[5.481817] (-) TimerEvent: {}
[5.582985] (-) TimerEvent: {}
[5.641963] (sf_pkg) StdoutLine: {'line': b'test/test_copyright.py \x1b[31mF\x1b[0m\x1b[31m                                                 [ 33%]\x1b[0m\n'}
[5.683313] (-) TimerEvent: {}
[5.784443] (-) TimerEvent: {}
[5.885745] (-) TimerEvent: {}
[5.915397] (stem_pkg) StdoutLine: {'line': b'\x1b[1m============================= test session starts ==============================\x1b[0m\n'}
[5.916516] (stem_pkg) StdoutLine: {'line': b'platform linux -- Python 3.8.10, pytest-7.1.2, pluggy-0.13.0\n'}
[5.950989] (stem_pkg) StdoutLine: {'line': b'cachedir: /home/pi/sunflower/build/stem_pkg/.pytest_cache\n'}
[5.952188] (stem_pkg) StdoutLine: {'line': b'rootdir: /home/pi/sunflower/src/stem_pkg\n'}
[5.953382] (stem_pkg) StdoutLine: {'line': b'plugins: ament-flake8-0.9.6, ament-copyright-0.9.6, launch-testing-ros-0.11.6, ament-xmllint-0.9.6, ament-pep257-0.9.6, ament-lint-0.9.6, launch-testing-0.10.8, rerunfailures-10.2, repeat-0.9.1, colcon-core-0.8.3, cov-2.8.1\n'}
[5.986002] (-) TimerEvent: {}
[6.086914] (-) TimerEvent: {}
[6.187771] (-) TimerEvent: {}
[6.256895] (stem_pkg) StdoutLine: {'line': b'\x1b[1mcollecting ... \x1b[0m\x1b[1m\n'}
[6.257725] (stem_pkg) StdoutLine: {'line': b'collected 3 items                                                              \x1b[0m\n'}
[6.259478] (stem_pkg) StdoutLine: {'line': b'\n'}
[6.288052] (-) TimerEvent: {}
[6.390807] (-) TimerEvent: {}
[6.491745] (-) TimerEvent: {}
[6.596310] (-) TimerEvent: {}
[6.679098] (stem_pkg) StdoutLine: {'line': b'test/test_copyright.py \x1b[31mF\x1b[0m\x1b[31m                                                 [ 33%]\x1b[0m\n'}
[6.696533] (-) TimerEvent: {}
[6.799023] (-) TimerEvent: {}
[6.881911] (tflite_pkg) Command: {'cmd': ['/usr/bin/python3', '-m', 'pytest'], 'cwd': '/home/pi/sunflower/src/tflite_pkg', 'env': {'LESSOPEN': '| /usr/bin/lesspipe %s', 'USER': 'pi', 'SSH_CLIENT': '211.217.28.227 58587 22', 'XDG_SESSION_TYPE': 'tty', 'GIT_ASKPASS': '/home/pi/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/extensions/git/dist/askpass.sh', 'SHLVL': '1', 'LD_LIBRARY_PATH': '/home/pi/sunflower/install/sunflower_interfaces/lib:/opt/ros/foxy/opt/yaml_cpp_vendor/lib:/opt/ros/foxy/opt/rviz_ogre_vendor/lib:/opt/ros/foxy/lib/aarch64-linux-gnu:/opt/ros/foxy/lib', 'BROWSER': '/home/pi/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/bin/helpers/browser.sh', 'MOTD_SHOWN': 'pam', 'HOME': '/home/pi', 'TERM_PROGRAM_VERSION': '1.68.1', 'VSCODE_IPC_HOOK_CLI': '/run/user/1000/vscode-ipc-8bde6f76-ba4e-4b4d-b68b-5b379bd0b432.sock', 'ROS_PYTHON_VERSION': '3', 'VSCODE_GIT_ASKPASS_MAIN': '/home/pi/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/extensions/git/dist/askpass-main.js', 'VSCODE_GIT_ASKPASS_NODE': '/home/pi/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/node', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/1000/bus', 'COLORTERM': 'truecolor', 'COLCON_PREFIX_PATH': '/home/pi/sunflower/install', 'ROS_DISTRO': 'foxy', 'LOGNAME': 'pi', '_': '/usr/bin/colcon', 'ROS_VERSION': '2', 'XDG_SESSION_CLASS': 'user', 'TERM': 'xterm-256color', 'XDG_SESSION_ID': '4', 'ROS_LOCALHOST_ONLY': '0', 'PATH': '/home/pi/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/bin/remote-cli:/home/pi/.local/bin:/opt/ros/foxy/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin', 'XDG_RUNTIME_DIR': '/run/user/1000', 'LANG': 'C.UTF-8', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:', 'VSCODE_GIT_IPC_HANDLE': '/run/user/1000/vscode-git-ad91e88160.sock', 'TERM_PROGRAM': 'vscode', 'AMENT_PREFIX_PATH': '/home/pi/sunflower/install/tflite_pkg:/home/pi/sunflower/install/test_pkg:/home/pi/sunflower/install/sunflower_interfaces:/home/pi/sunflower/install/sf_pkg:/opt/ros/foxy', 'SHELL': '/bin/bash', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'VSCODE_GIT_ASKPASS_EXTRA_ARGS': '', 'PWD': '/home/pi/sunflower/build/tflite_pkg', 'SSH_CONNECTION': '211.217.28.227 58587 210.91.28.223 22', 'XDG_DATA_DIRS': '/usr/local/share:/usr/share:/var/lib/snapd/desktop', 'PYTHONPATH': '/home/pi/sunflower/build/tflite_pkg:/home/pi/sunflower/install/tflite_pkg/lib/python3.8/site-packages:/home/pi/sunflower/build/test_pkg:/home/pi/sunflower/install/test_pkg/lib/python3.8/site-packages:/home/pi/sunflower/install/sunflower_interfaces/lib/python3.8/site-packages:/home/pi/sunflower/build/stem_pkg:/home/pi/sunflower/install/stem_pkg/lib/python3.8/site-packages:/home/pi/sunflower/build/sf_pkg:/home/pi/sunflower/install/sf_pkg/lib/python3.8/site-packages:/opt/ros/foxy/lib/python3.8/site-packages', 'COLCON': '1', 'CMAKE_PREFIX_PATH': '/home/pi/sunflower/install/sunflower_interfaces', 'PYTEST_ADDOPTS': '--tb=short --junit-xml=/home/pi/sunflower/build/tflite_pkg/pytest.xml --junit-prefix=tflite_pkg -o cache_dir=/home/pi/sunflower/build/tflite_pkg/.pytest_cache'}, 'shell': False}
[6.914482] (-) TimerEvent: {}
[7.015826] (-) TimerEvent: {}
[7.107960] (sf_pkg) StdoutLine: {'line': b'test/test_flake8.py \x1b[31mF\x1b[0m\x1b[31m                                                    [ 66%]\x1b[0m\n'}
[7.116017] (-) TimerEvent: {}
[7.217130] (-) TimerEvent: {}
[7.318239] (-) TimerEvent: {}
[7.351435] (sf_pkg) StdoutLine: {'line': b'test/test_pep257.py \x1b[32m.\x1b[0m\x1b[31m                                                    [100%]\x1b[0m\n'}
[7.352871] (sf_pkg) StdoutLine: {'line': b'\n'}
[7.354095] (sf_pkg) StdoutLine: {'line': b'=================================== FAILURES ===================================\n'}
[7.354818] (sf_pkg) StdoutLine: {'line': b'\x1b[31m\x1b[1m________________________________ test_copyright ________________________________\x1b[0m\n'}
[7.355482] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_copyright.py\x1b[0m:23: in test_copyright\n'}
[7.418505] (-) TimerEvent: {}
[7.521195] (-) TimerEvent: {}
[7.571581] (sf_pkg) StdoutLine: {'line': b"    \x1b[34;01massert\x1b[39;49;00m rc == \x1b[34;01m0\x1b[39;49;00m, \x1b[33m'\x1b[39;49;00m\x1b[33mFound errors\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m\n"}
[7.572838] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found errors\x1b[0m\n'}
[7.574618] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[7.577630] (sf_pkg) StdoutLine: {'line': b'----------------------------- Captured stderr call -----------------------------\n'}
[7.578903] (sf_pkg) StdoutLine: {'line': b'launch/sf.launch.py: could not find copyright notice\n'}
[7.580264] (sf_pkg) StdoutLine: {'line': b'sf_pkg/calculator.py: could not find copyright notice\n'}
[7.581762] (sf_pkg) StdoutLine: {'line': b'sf_pkg/cmd_selector.py: could not find copyright notice\n'}
[7.583145] (sf_pkg) StdoutLine: {'line': b'sf_pkg/serial_talker.py: could not find copyright notice\n'}
[7.587626] (sf_pkg) StdoutLine: {'line': b'sf_pkg/tensor.py: could not find copyright notice\n'}
[7.589881] (sf_pkg) StdoutLine: {'line': b'sf_pkg/tensor_publisher.py: could not find copyright notice\n'}
[7.595481] (sf_pkg) StdoutLine: {'line': b'6 errors, checked 10 files\n'}
[7.597178] (sf_pkg) StdoutLine: {'line': b'\x1b[31m\x1b[1m_________________________________ test_flake8 __________________________________\x1b[0m\n'}
[7.598722] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_flake8.py\x1b[0m:23: in test_flake8\n'}
[7.600217] (sf_pkg) StdoutLine: {'line': b'    \x1b[34;01massert\x1b[39;49;00m rc == \x1b[34;01m0\x1b[39;49;00m, \\\n'}
[7.601373] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found 114 code style errors / warnings:\x1b[0m\n'}
[7.608699] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./setup.py:2:1: I100 Import statements are in the wrong order. 'import os' should be before 'from setuptools import setup' and in a different group.\x1b[0m\n"}
[7.610112] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./setup.py:2:1: I201 Missing newline between import groups. 'import os' is identified as Stdlib and 'from setuptools import setup' is identified as Third Party.\x1b[0m\n"}
[7.611609] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./setup.py:3:1: I100 Import statements are in the wrong order. 'from glob import glob' should be before 'import os'\x1b[0m\n"}
[7.613289] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./setup.py:26:13: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[7.615090] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./setup.py:27:13: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[7.627346] (-) TimerEvent: {}
[7.628251] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./setup.py:28:13: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[7.632817] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./setup.py:29:13: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[7.634601] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/sf.launch.py:4:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[7.636952] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/sf.launch.py:10:13: E265 block comment should start with '# '\x1b[0m\n"}
[7.638464] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/sf.launch.py:21:32: E202 whitespace before ')'\x1b[0m\n"}
[7.641628] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/sf.launch.py:27:20: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[7.642931] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/sf.launch.py:27:29: E202 whitespace before ')'\x1b[0m\n"}
[7.644866] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/sf.launch.py:28:7: W292 no newline at end of file\x1b[0m\n'}
[7.655281] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/serial_talker.py:5:1: I100 Import statements are in the wrong order. 'import serial' should be before 'from std_msgs.msg import String'\x1b[0m\n"}
[7.668770] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/serial_talker.py:5:14: W291 trailing whitespace\x1b[0m\n'}
[7.671415] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/serial_talker.py:11:5: E301 expected 1 blank line, found 0\x1b[0m\n'}
[7.673100] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/serial_talker.py:19:32: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[7.675240] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/serial_talker.py:22:9: E265 block comment should start with '# '\x1b[0m\n"}
[7.676838] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/serial_talker.py:23:9: E265 block comment should start with '# '\x1b[0m\n"}
[7.678515] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/serial_talker.py:40:1: E305 expected 2 blank lines after class or function definition, found 1\x1b[0m\n'}
[7.680392] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/serial_talker.py:40:26: E203 whitespace before ':'\x1b[0m\n"}
[7.682106] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/serial_talker.py:41:11: W292 no newline at end of file\x1b[0m\n'}
[7.689655] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/cmd_selector.py:6:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[7.691356] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/cmd_selector.py:8:5: E301 expected 1 blank line, found 0\x1b[0m\n'}
[7.692830] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/cmd_selector.py:43:1: E303 too many blank lines (3)\x1b[0m\n'}
[7.694314] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/cmd_selector.py:54:1: E305 expected 2 blank lines after class or function definition, found 1\x1b[0m\n'}
[7.695922] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/cmd_selector.py:54:26: E203 whitespace before ':'\x1b[0m\n"}
[7.697517] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/cmd_selector.py:55:11: W292 no newline at end of file\x1b[0m\n'}
[7.712283] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/calculator.py:5:1: I100 Import statements are in the wrong order. 'import math' should be before 'from std_msgs.msg import String' and in a different group.\x1b[0m\n"}
[7.713759] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/calculator.py:5:1: I201 Missing newline between import groups. 'import math' is identified as Stdlib and 'from std_msgs.msg import String' is identified as Third Party.\x1b[0m\n"}
[7.715342] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/calculator.py:7:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[7.716892] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/calculator.py:7:23: E203 whitespace before ':'\x1b[0m\n"}
[7.718881] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/calculator.py:8:1: CNL100 Class definition does not have a new line.\x1b[0m\n'}
[7.722320] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/calculator.py:21:35: E203 whitespace before ':'\x1b[0m\n"}
[7.724531] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/calculator.py:33:30: E201 whitespace after '('\x1b[0m\n"}
[7.726213] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/calculator.py:33:31: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[7.729189] (-) TimerEvent: {}
[7.730280] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/calculator.py:36:61: C417 Unnecessary use of map - use a generator expression instead.\x1b[0m\n'}
[7.734319] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/calculator.py:62:1: W293 blank line contains whitespace\x1b[0m\n'}
[7.735879] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/calculator.py:65:10: E203 whitespace before ','\x1b[0m\n"}
[7.746130] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/calculator.py:65:39: C417 Unnecessary use of map - use a generator expression instead.\x1b[0m\n'}
[7.749384] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/calculator.py:74:31: E272 multiple spaces before keyword\x1b[0m\n'}
[7.752680] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/calculator.py:82:1: W293 blank line contains whitespace\x1b[0m\n'}
[7.755802] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/calculator.py:83:28: E203 whitespace before ':'\x1b[0m\n"}
[7.761014] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/calculator.py:84:40: C417 Unnecessary use of map - use a generator expression instead.\x1b[0m\n'}
[7.762868] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/calculator.py:84:52: E203 whitespace before ':'\x1b[0m\n"}
[7.768183] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/calculator.py:86:9: E115 expected an indented block (comment)\x1b[0m\n'}
[7.769546] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/calculator.py:88:13: E203 whitespace before ':'\x1b[0m\n"}
[7.770824] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/calculator.py:92:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[7.772337] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/calculator.py:92:20: E203 whitespace before ':'\x1b[0m\n"}
[7.780920] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/calculator.py:103:1: E305 expected 2 blank lines after class or function definition, found 1\x1b[0m\n'}
[7.784164] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/calculator.py:103:26: E203 whitespace before ':'\x1b[0m\n"}
[7.787495] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/calculator.py:104:11: W292 no newline at end of file\x1b[0m\n'}
[7.799473] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/tensor.py:5:1: I100 Import statements are in the wrong order. 'import cv2' should be before 'from sunflower_interfaces.msg import TfliteResult'\x1b[0m\n"}
[7.801166] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/tensor.py:7:1: I100 Import statements are in the wrong order. 'import numpy' should be before 'import tensorflow'\x1b[0m\n"}
[7.802612] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/tensor.py:9:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[7.804466] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/tensor.py:9:19: E203 whitespace before ':'\x1b[0m\n"}
[7.806039] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/tensor.py:10:1: CNL100 Class definition does not have a new line.\x1b[0m\n'}
[7.807834] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/tensor.py:20:46: E203 whitespace before ':'\x1b[0m\n"}
[7.810632] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/tensor.py:41:9: F841 local variable 'data' is assigned to but never used\x1b[0m\n"}
[7.813552] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/tensor.py:41:16: C408 Unnecessary list call - rewrite as a literal.\x1b[0m\n'}
[7.827953] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/tensor.py:53:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[7.829570] (-) TimerEvent: {}
[7.830545] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/tensor.py:53:20: E203 whitespace before ':'\x1b[0m\n"}
[7.836146] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/tensor.py:55:50: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[7.838949] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/tensor.py:55:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[7.840616] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/tensor.py:67:1: E305 expected 2 blank lines after class or function definition, found 1\x1b[0m\n'}
[7.842571] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/tensor.py:67:26: E203 whitespace before ':'\x1b[0m\n"}
[7.844660] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/tensor.py:70:1: E265 block comment should start with '# '\x1b[0m\n"}
[7.846163] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/tensor.py:70:29: W292 no newline at end of file\x1b[0m\n'}
[7.847764] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/tensor.py:70:29: W292 no newline at end of file\x1b[0m\n'}
[7.870156] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/tensor.py:70:29: W292 no newline at end of file\x1b[0m\n'}
[7.882470] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:5:1: I100 Import statements are in the wrong order. 'import cv2' should be before 'from std_msgs.msg import String'\x1b[0m\n"}
[7.886010] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:7:1: I100 Import statements are in the wrong order. 'import numpy' should be before 'import tensorflow'\x1b[0m\n"}
[7.890444] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:8:1: I100 Import statements are in the wrong order. 'import time' should be before 'import numpy' and in a different group.\x1b[0m\n"}
[7.892145] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:8:1: I201 Missing newline between import groups. 'import time' is identified as Stdlib and 'import numpy' is identified as Third Party.\x1b[0m\n"}
[7.894414] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:9:1: I201 Missing newline between import groups. 'import I2C_LCD_driver' is identified as Third Party and 'import time' is identified as Stdlib.\x1b[0m\n"}
[7.899981] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:13:28: E203 whitespace before ':'\x1b[0m\n"}
[7.901754] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:14:1: CNL100 Class definition does not have a new line.\x1b[0m\n'}
[7.904611] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:18:34: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[7.908530] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:18:36: E231 missing whitespace after ','\x1b[0m\n"}
[7.916466] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:25:16: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[7.918783] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:25:19: E225 missing whitespace around operator\x1b[0m\n'}
[7.924219] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:25:80: E225 missing whitespace around operator\x1b[0m\n'}
[7.927026] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:25:80: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[7.935462] (-) TimerEvent: {}
[7.936403] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:27:34: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[7.951928] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:27:36: E231 missing whitespace after ','\x1b[0m\n"}
[7.953735] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:28:34: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[7.955252] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:28:43: E231 missing whitespace after ','\x1b[0m\n"}
[7.956966] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:33:50: E203 whitespace before ':'\x1b[0m\n"}
[7.964945] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:37:16: F821 undefined name 'now'\x1b[0m\n"}
[7.974073] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:37:44: E203 whitespace before ':'\x1b[0m\n"}
[7.977071] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:40:38: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[7.989482] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:40:40: E231 missing whitespace after ','\x1b[0m\n"}
[7.999302] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:41:61: E231 missing whitespace after ','\x1b[0m\n"}
[8.003332] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:58:20: C408 Unnecessary list call - rewrite as a literal.\x1b[0m\n'}
[8.004929] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:60:32: E203 whitespace before ':'\x1b[0m\n"}
[8.006576] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:62:44: C417 Unnecessary use of map - use a generator expression instead.\x1b[0m\n'}
[8.008085] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:62:56: E203 whitespace before ':'\x1b[0m\n"}
[8.009392] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:64:13: E115 expected an indented block (comment)\x1b[0m\n'}
[8.011494] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:68:13: E203 whitespace before ':'\x1b[0m\n"}
[8.016231] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:71:46: E203 whitespace before ':'\x1b[0m\n"}
[8.032558] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:92:16: C408 Unnecessary list call - rewrite as a literal.\x1b[0m\n'}
[8.041303] (-) TimerEvent: {}
[8.043026] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:94:28: E203 whitespace before ':'\x1b[0m\n"}
[8.048843] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:97:20: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[8.051152] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:101:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[8.052974] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:101:20: E203 whitespace before ':'\x1b[0m\n"}
[8.054643] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:103:50: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[8.061468] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:103:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[8.064211] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:106:5: F841 local variable 'mylcd' is assigned to but never used\x1b[0m\n"}
[8.068454] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:117:1: E305 expected 2 blank lines after class or function definition, found 1\x1b[0m\n'}
[8.070417] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:117:26: E203 whitespace before ':'\x1b[0m\n"}
[8.075064] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:120:1: E265 block comment should start with '# '\x1b[0m\n"}
[8.081062] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:120:29: W292 no newline at end of file\x1b[0m\n'}
[8.083706] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:120:29: W292 no newline at end of file\x1b[0m\n'}
[8.087510] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:120:29: W292 no newline at end of file\x1b[0m\n'}
[8.089102] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[8.099879] (sf_pkg) StdoutLine: {'line': b'----------------------------- Captured stdout call -----------------------------\n'}
[8.103051] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.106591] (sf_pkg) StdoutLine: {'line': b"./setup.py:2:1: I100 Import statements are in the wrong order. 'import os' should be before 'from setuptools import setup' and in a different group.\n"}
[8.112315] (sf_pkg) StdoutLine: {'line': b'import os\n'}
[8.113936] (sf_pkg) StdoutLine: {'line': b'^\n'}
[8.115454] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.124828] (sf_pkg) StdoutLine: {'line': b"./setup.py:2:1: I201 Missing newline between import groups. 'import os' is identified as Stdlib and 'from setuptools import setup' is identified as Third Party.\n"}
[8.127144] (sf_pkg) StdoutLine: {'line': b'import os\n'}
[8.129506] (sf_pkg) StdoutLine: {'line': b'^\n'}
[8.131790] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.133492] (sf_pkg) StdoutLine: {'line': b"./setup.py:3:1: I100 Import statements are in the wrong order. 'from glob import glob' should be before 'import os'\n"}
[8.136717] (sf_pkg) StdoutLine: {'line': b'from glob import glob\n'}
[8.141926] (-) TimerEvent: {}
[8.145827] (sf_pkg) StdoutLine: {'line': b'^\n'}
[8.152939] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.154360] (sf_pkg) StdoutLine: {'line': b'./setup.py:26:13: Q000 Double quotes found but single quotes preferred\n'}
[8.160209] (sf_pkg) StdoutLine: {'line': b'            "serial_talker=sf_pkg.serial_talker:main",\n'}
[8.162524] (sf_pkg) StdoutLine: {'line': b'            ^\n'}
[8.164919] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.168701] (sf_pkg) StdoutLine: {'line': b'./setup.py:27:13: Q000 Double quotes found but single quotes preferred\n'}
[8.172878] (sf_pkg) StdoutLine: {'line': b'            "cmd_selector=sf_pkg.cmd_selector:main",\n'}
[8.175950] (sf_pkg) StdoutLine: {'line': b'            ^\n'}
[8.179565] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.181261] (sf_pkg) StdoutLine: {'line': b'./setup.py:28:13: Q000 Double quotes found but single quotes preferred\n'}
[8.183571] (sf_pkg) StdoutLine: {'line': b'            "calculator=sf_pkg.calculator:main",\n'}
[8.193321] (sf_pkg) StdoutLine: {'line': b'            ^\n'}
[8.195559] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.197895] (sf_pkg) StdoutLine: {'line': b'./setup.py:29:13: Q000 Double quotes found but single quotes preferred\n'}
[8.200352] (sf_pkg) StdoutLine: {'line': b'            "tensor_publisher=sf_pkg.tensor_publisher:main",\n'}
[8.213533] (sf_pkg) StdoutLine: {'line': b'            ^\n'}
[8.227974] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.229484] (sf_pkg) StdoutLine: {'line': b'./launch/sf.launch.py:4:1: E302 expected 2 blank lines, found 1\n'}
[8.230900] (sf_pkg) StdoutLine: {'line': b'def generate_launch_description():\n'}
[8.241312] (sf_pkg) StdoutLine: {'line': b'^\n'}
[8.243974] (-) TimerEvent: {}
[8.244803] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.248687] (sf_pkg) StdoutLine: {'line': b"./launch/sf.launch.py:10:13: E265 block comment should start with '# '\n"}
[8.256770] (sf_pkg) StdoutLine: {'line': b"            #output= 'screen'\n"}
[8.258230] (sf_pkg) StdoutLine: {'line': b'            ^\n'}
[8.266147] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.268255] (sf_pkg) StdoutLine: {'line': b"./launch/sf.launch.py:21:32: E202 whitespace before ')'\n"}
[8.269737] (sf_pkg) StdoutLine: {'line': b"            name='cmd_selector' ),\n"}
[8.280072] (sf_pkg) StdoutLine: {'line': b'                               ^\n'}
[8.284669] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.286256] (sf_pkg) StdoutLine: {'line': b'./launch/sf.launch.py:27:20: E251 unexpected spaces around keyword / parameter equals\n'}
[8.289277] (sf_pkg) StdoutLine: {'line': b"            output= 'screen' )\n"}
[8.290965] (sf_pkg) StdoutLine: {'line': b'                   ^\n'}
[8.293770] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.300484] (sf_pkg) StdoutLine: {'line': b"./launch/sf.launch.py:27:29: E202 whitespace before ')'\n"}
[8.304869] (sf_pkg) StdoutLine: {'line': b"            output= 'screen' )\n"}
[8.316302] (sf_pkg) StdoutLine: {'line': b'                            ^\n'}
[8.317660] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.318983] (sf_pkg) StdoutLine: {'line': b'./launch/sf.launch.py:28:7: W292 no newline at end of file\n'}
[8.320510] (sf_pkg) StdoutLine: {'line': b'    ])      ^\n'}
[8.328938] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.334744] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/serial_talker.py:5:1: I100 Import statements are in the wrong order. 'import serial' should be before 'from std_msgs.msg import String'\n"}
[8.343385] (sf_pkg) StdoutLine: {'line': b'import serial \n'}
[8.345030] (-) TimerEvent: {}
[8.359707] (sf_pkg) StdoutLine: {'line': b'^\n'}
[8.372223] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.373694] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/serial_talker.py:5:14: W291 trailing whitespace\n'}
[8.375116] (sf_pkg) StdoutLine: {'line': b'import serial \n'}
[8.380023] (sf_pkg) StdoutLine: {'line': b'             ^\n'}
[8.381625] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.383320] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/serial_talker.py:11:5: E301 expected 1 blank line, found 0\n'}
[8.400018] (sf_pkg) StdoutLine: {'line': b'    def __init__(self):\n'}
[8.400951] (sf_pkg) StdoutLine: {'line': b'    ^\n'}
[8.402019] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.403154] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/serial_talker.py:19:32: Q000 Double quotes found but single quotes preferred\n'}
[8.404135] (sf_pkg) StdoutLine: {'line': b'        self.get_logger().info("Serial connection started")\n'}
[8.404785] (sf_pkg) StdoutLine: {'line': b'                               ^\n'}
[8.405432] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.406049] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/serial_talker.py:22:9: E265 block comment should start with '# '\n"}
[8.406658] (sf_pkg) StdoutLine: {'line': b'        #self.ser.write("^1*2*3*4*5*6*7*8*8".encode())\n'}
[8.412046] (sf_pkg) StdoutLine: {'line': b'        ^\n'}
[8.412781] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.413294] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/serial_talker.py:23:9: E265 block comment should start with '# '\n"}
[8.413752] (sf_pkg) StdoutLine: {'line': b"        #self.get_logger().info('Transmitted')\n"}
[8.414172] (sf_pkg) StdoutLine: {'line': b'        ^\n'}
[8.414606] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.415127] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/serial_talker.py:40:1: E305 expected 2 blank lines after class or function definition, found 1\n'}
[8.415743] (sf_pkg) StdoutLine: {'line': b"if __name__ == '__main__' :\n"}
[8.416187] (sf_pkg) StdoutLine: {'line': b'^\n'}
[8.416688] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.417286] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/serial_talker.py:40:26: E203 whitespace before ':'\n"}
[8.418016] (sf_pkg) StdoutLine: {'line': b"if __name__ == '__main__' :\n"}
[8.418651] (sf_pkg) StdoutLine: {'line': b'                         ^\n'}
[8.419240] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.419871] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/serial_talker.py:41:11: W292 no newline at end of file\n'}
[8.420458] (sf_pkg) StdoutLine: {'line': b'    main()          ^\n'}
[8.421003] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.421514] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/cmd_selector.py:6:1: E302 expected 2 blank lines, found 1\n'}
[8.422118] (sf_pkg) StdoutLine: {'line': b'class CommandSelector(Node):\n'}
[8.435890] (sf_pkg) StdoutLine: {'line': b'^\n'}
[8.436564] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.437243] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/cmd_selector.py:8:5: E301 expected 1 blank line, found 0\n'}
[8.437846] (sf_pkg) StdoutLine: {'line': b'    def __init__(self):\n'}
[8.438587] (sf_pkg) StdoutLine: {'line': b'    ^\n'}
[8.439242] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.439891] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/cmd_selector.py:43:1: E303 too many blank lines (3)\n'}
[8.440490] (sf_pkg) StdoutLine: {'line': b'def main(args=None):\n'}
[8.441073] (sf_pkg) StdoutLine: {'line': b'^\n'}
[8.441737] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.442471] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/cmd_selector.py:54:1: E305 expected 2 blank lines after class or function definition, found 1\n'}
[8.443119] (sf_pkg) StdoutLine: {'line': b"if __name__ == '__main__' :\n"}
[8.452251] (-) TimerEvent: {}
[8.453096] (sf_pkg) StdoutLine: {'line': b'^\n'}
[8.454222] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.455088] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/cmd_selector.py:54:26: E203 whitespace before ':'\n"}
[8.456150] (sf_pkg) StdoutLine: {'line': b"if __name__ == '__main__' :\n"}
[8.457158] (sf_pkg) StdoutLine: {'line': b'                         ^\n'}
[8.458240] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.471511] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/cmd_selector.py:55:11: W292 no newline at end of file\n'}
[8.472969] (sf_pkg) StdoutLine: {'line': b'    main()          ^\n'}
[8.474214] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.475245] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/calculator.py:5:1: I100 Import statements are in the wrong order. 'import math' should be before 'from std_msgs.msg import String' and in a different group.\n"}
[8.476121] (sf_pkg) StdoutLine: {'line': b'import math\n'}
[8.476790] (sf_pkg) StdoutLine: {'line': b'^\n'}
[8.477414] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.478023] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/calculator.py:5:1: I201 Missing newline between import groups. 'import math' is identified as Stdlib and 'from std_msgs.msg import String' is identified as Third Party.\n"}
[8.478679] (sf_pkg) StdoutLine: {'line': b'import math\n'}
[8.479352] (sf_pkg) StdoutLine: {'line': b'^\n'}
[8.480032] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.480714] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/calculator.py:7:1: E302 expected 2 blank lines, found 1\n'}
[8.481458] (sf_pkg) StdoutLine: {'line': b'class Calculator(Node) :\n'}
[8.482125] (sf_pkg) StdoutLine: {'line': b'^\n'}
[8.482747] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.486104] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/calculator.py:7:23: E203 whitespace before ':'\n"}
[8.487083] (sf_pkg) StdoutLine: {'line': b'class Calculator(Node) :\n'}
[8.498260] (sf_pkg) StdoutLine: {'line': b'                      ^\n'}
[8.499213] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.499968] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/calculator.py:8:1: CNL100 Class definition does not have a new line.\n'}
[8.500659] (sf_pkg) StdoutLine: {'line': b'    def __init__(self):\n'}
[8.501259] (sf_pkg) StdoutLine: {'line': b'^\n'}
[8.502631] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.504089] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/calculator.py:21:35: E203 whitespace before ':'\n"}
[8.505564] (sf_pkg) StdoutLine: {'line': b'    def publish_command(self, cmd) :\n'}
[8.507094] (sf_pkg) StdoutLine: {'line': b'                                  ^\n'}
[8.509204] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.528003] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/calculator.py:33:30: E201 whitespace after '('\n"}
[8.529878] (sf_pkg) StdoutLine: {'line': b'        self.publish_command( "*" + f\'{cmd}\')\n'}
[8.532154] (sf_pkg) StdoutLine: {'line': b'                             ^\n'}
[8.534149] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.535809] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/calculator.py:33:31: Q000 Double quotes found but single quotes preferred\n'}
[8.537429] (sf_pkg) StdoutLine: {'line': b'        self.publish_command( "*" + f\'{cmd}\')\n'}
[8.547489] (sf_pkg) StdoutLine: {'line': b'                              ^\n'}
[8.549291] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.550870] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/calculator.py:36:61: C417 Unnecessary use of map - use a generator expression instead.\n'}
[8.552518] (-) TimerEvent: {}
[8.553433] (sf_pkg) StdoutLine: {'line': b'        n_x, n_y, n_con, l_x, l_y, l_con, r_x, r_y, r_con = map(lambda x: int(x), tensor)\n'}
[8.555761] (sf_pkg) StdoutLine: {'line': b'                                                            ^\n'}
[8.557562] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.559084] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/calculator.py:62:1: W293 blank line contains whitespace\n'}
[8.560804] (sf_pkg) StdoutLine: {'line': b'    \n'}
[8.568119] (sf_pkg) StdoutLine: {'line': b'^\n'}
[8.569771] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.572318] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/calculator.py:65:10: E203 whitespace before ','\n"}
[8.580770] (sf_pkg) StdoutLine: {'line': b'        _ , nose_x, nose_confidence = map(lambda x: int(x), nose)\n'}
[8.582486] (sf_pkg) StdoutLine: {'line': b'         ^\n'}
[8.584104] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.585754] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/calculator.py:65:39: C417 Unnecessary use of map - use a generator expression instead.\n'}
[8.587524] (sf_pkg) StdoutLine: {'line': b'        _ , nose_x, nose_confidence = map(lambda x: int(x), nose)\n'}
[8.589302] (sf_pkg) StdoutLine: {'line': b'                                      ^\n'}
[8.599296] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.601054] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/calculator.py:74:31: E272 multiple spaces before keyword\n'}
[8.602596] (sf_pkg) StdoutLine: {'line': b'            elif (nose_x == 2)  or (nose_x == 3) or (nose_x == 4):\n'}
[8.604316] (sf_pkg) StdoutLine: {'line': b'                              ^\n'}
[8.605733] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.607070] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/calculator.py:82:1: W293 blank line contains whitespace\n'}
[8.608594] (sf_pkg) StdoutLine: {'line': b'    \n'}
[8.610038] (sf_pkg) StdoutLine: {'line': b'^\n'}
[8.624767] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.626723] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/calculator.py:83:28: E203 whitespace before ':'\n"}
[8.628496] (sf_pkg) StdoutLine: {'line': b'    def eye_dist(self, eye) :\n'}
[8.630910] (sf_pkg) StdoutLine: {'line': b'                           ^\n'}
[8.633148] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.635550] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/calculator.py:84:40: C417 Unnecessary use of map - use a generator expression instead.\n'}
[8.637197] (sf_pkg) StdoutLine: {'line': b'        l_x, l_y, l_c, r_x, r_y, r_c = map(lambda x : x, eye)\n'}
[8.638773] (sf_pkg) StdoutLine: {'line': b'                                       ^\n'}
[8.640524] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.642309] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/calculator.py:84:52: E203 whitespace before ':'\n"}
[8.643944] (sf_pkg) StdoutLine: {'line': b'        l_x, l_y, l_c, r_x, r_y, r_c = map(lambda x : x, eye)\n'}
[8.655513] (-) TimerEvent: {}
[8.656781] (sf_pkg) StdoutLine: {'line': b'                                                   ^\n'}
[8.664604] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.666637] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/calculator.py:86:9: E115 expected an indented block (comment)\n'}
[8.669079] (sf_pkg) StdoutLine: {'line': b'        # length\xeb\xa5\xbc float\xec\x9c\xbc\xeb\xa1\x9c \xeb\xb3\xb4\xeb\x82\xb4\xeb\x8f\x84 \xeb\x90\x98\xec\xa5\xac?\n'}
[8.670978] (sf_pkg) StdoutLine: {'line': b'        ^\n'}
[8.672961] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.674947] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/calculator.py:88:13: E203 whitespace before ':'\n"}
[8.676896] (sf_pkg) StdoutLine: {'line': b'        else :\n'}
[8.678554] (sf_pkg) StdoutLine: {'line': b'            ^\n'}
[8.680273] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.681929] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/calculator.py:92:1: E302 expected 2 blank lines, found 1\n'}
[8.683471] (sf_pkg) StdoutLine: {'line': b'def main(args=None) :\n'}
[8.684923] (sf_pkg) StdoutLine: {'line': b'^\n'}
[8.686527] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.688051] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/calculator.py:92:20: E203 whitespace before ':'\n"}
[8.689517] (sf_pkg) StdoutLine: {'line': b'def main(args=None) :\n'}
[8.690979] (sf_pkg) StdoutLine: {'line': b'                   ^\n'}
[8.693157] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.695106] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/calculator.py:103:1: E305 expected 2 blank lines after class or function definition, found 1\n'}
[8.697152] (sf_pkg) StdoutLine: {'line': b"if __name__ == '__main__' :\n"}
[8.699095] (sf_pkg) StdoutLine: {'line': b'^\n'}
[8.701180] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.703110] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/calculator.py:103:26: E203 whitespace before ':'\n"}
[8.705317] (sf_pkg) StdoutLine: {'line': b"if __name__ == '__main__' :\n"}
[8.706918] (sf_pkg) StdoutLine: {'line': b'                         ^\n'}
[8.708439] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.709986] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/calculator.py:104:11: W292 no newline at end of file\n'}
[8.711617] (sf_pkg) StdoutLine: {'line': b'    main()          ^\n'}
[8.713323] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.714842] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/tensor.py:5:1: I100 Import statements are in the wrong order. 'import cv2' should be before 'from sunflower_interfaces.msg import TfliteResult'\n"}
[8.716607] (sf_pkg) StdoutLine: {'line': b'import cv2\n'}
[8.718193] (sf_pkg) StdoutLine: {'line': b'^\n'}
[8.719797] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.721597] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/tensor.py:7:1: I100 Import statements are in the wrong order. 'import numpy' should be before 'import tensorflow'\n"}
[8.724300] (sf_pkg) StdoutLine: {'line': b'import numpy as np\n'}
[8.726311] (sf_pkg) StdoutLine: {'line': b'^\n'}
[8.727967] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.729707] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/tensor.py:9:1: E302 expected 2 blank lines, found 1\n'}
[8.731447] (sf_pkg) StdoutLine: {'line': b'class Tensor(Node) :\n'}
[8.732933] (sf_pkg) StdoutLine: {'line': b'^\n'}
[8.734368] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.735890] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/tensor.py:9:19: E203 whitespace before ':'\n"}
[8.737374] (sf_pkg) StdoutLine: {'line': b'class Tensor(Node) :\n'}
[8.738875] (sf_pkg) StdoutLine: {'line': b'                  ^\n'}
[8.740542] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.741986] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/tensor.py:10:1: CNL100 Class definition does not have a new line.\n'}
[8.743483] (sf_pkg) StdoutLine: {'line': b'    def __init__(self, interpreter, cap):\n'}
[8.745042] (sf_pkg) StdoutLine: {'line': b'^\n'}
[8.746683] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.748348] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/tensor.py:20:46: E203 whitespace before ':'\n"}
[8.749956] (sf_pkg) StdoutLine: {'line': b'    def tensor_result(self, interpreter, cap) :\n'}
[8.751656] (sf_pkg) StdoutLine: {'line': b'                                             ^\n'}
[8.753287] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.754984] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/tensor.py:41:9: F841 local variable 'data' is assigned to but never used\n"}
[8.756519] (-) TimerEvent: {}
[8.757379] (sf_pkg) StdoutLine: {'line': b'        data = list()\n'}
[8.759111] (sf_pkg) StdoutLine: {'line': b'        ^\n'}
[8.760863] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.762430] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/tensor.py:41:16: C408 Unnecessary list call - rewrite as a literal.\n'}
[8.763958] (sf_pkg) StdoutLine: {'line': b'        data = list()\n'}
[8.765431] (sf_pkg) StdoutLine: {'line': b'               ^\n'}
[8.767034] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.768782] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/tensor.py:53:1: E302 expected 2 blank lines, found 1\n'}
[8.770604] (sf_pkg) StdoutLine: {'line': b'def main(args=None) :\n'}
[8.772345] (sf_pkg) StdoutLine: {'line': b'^\n'}
[8.774117] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.784174] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/tensor.py:53:20: E203 whitespace before ':'\n"}
[8.785881] (sf_pkg) StdoutLine: {'line': b'def main(args=None) :\n'}
[8.787627] (sf_pkg) StdoutLine: {'line': b'                   ^\n'}
[8.789401] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.791086] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/tensor.py:55:50: Q000 Double quotes found but single quotes preferred\n'}
[8.792923] (sf_pkg) StdoutLine: {'line': b'    interpreter = tf.lite.Interpreter(model_path="lite-model_movenet_singlepose_lightning_3.tflite")\n'}
[8.794721] (sf_pkg) StdoutLine: {'line': b'                                                 ^\n'}
[8.796471] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.798225] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/tensor.py:55:100: E501 line too long (100 > 99 characters)\n'}
[8.799981] (sf_pkg) StdoutLine: {'line': b'    interpreter = tf.lite.Interpreter(model_path="lite-model_movenet_singlepose_lightning_3.tflite")\n'}
[8.801697] (sf_pkg) StdoutLine: {'line': b'                                                                                                   ^\n'}
[8.803516] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.805272] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/tensor.py:67:1: E305 expected 2 blank lines after class or function definition, found 1\n'}
[8.806916] (sf_pkg) StdoutLine: {'line': b"if __name__ == '__main__' :\n"}
[8.808758] (sf_pkg) StdoutLine: {'line': b'^\n'}
[8.810456] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.812178] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/tensor.py:67:26: E203 whitespace before ':'\n"}
[8.813802] (sf_pkg) StdoutLine: {'line': b"if __name__ == '__main__' :\n"}
[8.815505] (sf_pkg) StdoutLine: {'line': b'                         ^\n'}
[8.817114] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.818671] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/tensor.py:70:1: E265 block comment should start with '# '\n"}
[8.820289] (sf_pkg) StdoutLine: {'line': b'#\xec\xbd\x94, \xec\x99\xbc\xeb\x88\x88, \xec\x98\xa4\xeb\x88\x88, \xec\x99\xbc\xea\xb7\x80, \xec\x98\xa4\xea\xb7\x80, \xec\x99\xbc\xec\x96\xb4\xea\xb9\xa8, \xec\x98\xa4\xec\x96\xb4\xea\xb9\xa8^\n'}
[8.821893] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.823724] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/tensor.py:70:29: W292 no newline at end of file\n'}
[8.826063] (sf_pkg) StdoutLine: {'line': b'#\xec\xbd\x94, \xec\x99\xbc\xeb\x88\x88, \xec\x98\xa4\xeb\x88\x88, \xec\x99\xbc\xea\xb7\x80, \xec\x98\xa4\xea\xb7\x80, \xec\x99\xbc\xec\x96\xb4\xea\xb9\xa8, \xec\x98\xa4\xec\x96\xb4\xea\xb9\xa8                            ^\n'}
[8.827981] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.829603] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/tensor.py:70:29: W292 no newline at end of file\n'}
[8.831113] (sf_pkg) StdoutLine: {'line': b'#\xec\xbd\x94, \xec\x99\xbc\xeb\x88\x88, \xec\x98\xa4\xeb\x88\x88, \xec\x99\xbc\xea\xb7\x80, \xec\x98\xa4\xea\xb7\x80, \xec\x99\xbc\xec\x96\xb4\xea\xb9\xa8, \xec\x98\xa4\xec\x96\xb4\xea\xb9\xa8                            ^\n'}
[8.832694] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.834226] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/tensor.py:70:29: W292 no newline at end of file\n'}
[8.835573] (sf_pkg) StdoutLine: {'line': b'#\xec\xbd\x94, \xec\x99\xbc\xeb\x88\x88, \xec\x98\xa4\xeb\x88\x88, \xec\x99\xbc\xea\xb7\x80, \xec\x98\xa4\xea\xb7\x80, \xec\x99\xbc\xec\x96\xb4\xea\xb9\xa8, \xec\x98\xa4\xec\x96\xb4\xea\xb9\xa8                            ^\n'}
[8.837070] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.838453] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/tensor_publisher.py:5:1: I100 Import statements are in the wrong order. 'import cv2' should be before 'from std_msgs.msg import String'\n"}
[8.839930] (sf_pkg) StdoutLine: {'line': b'import cv2\n'}
[8.841240] (sf_pkg) StdoutLine: {'line': b'^\n'}
[8.842265] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.843528] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/tensor_publisher.py:7:1: I100 Import statements are in the wrong order. 'import numpy' should be before 'import tensorflow'\n"}
[8.844724] (sf_pkg) StdoutLine: {'line': b'import numpy as np\n'}
[8.846168] (sf_pkg) StdoutLine: {'line': b'^\n'}
[8.847811] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.849125] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/tensor_publisher.py:8:1: I100 Import statements are in the wrong order. 'import time' should be before 'import numpy' and in a different group.\n"}
[8.850545] (sf_pkg) StdoutLine: {'line': b'import time\n'}
[8.852111] (sf_pkg) StdoutLine: {'line': b'^\n'}
[8.853763] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.855482] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/tensor_publisher.py:8:1: I201 Missing newline between import groups. 'import time' is identified as Stdlib and 'import numpy' is identified as Third Party.\n"}
[8.857198] (-) TimerEvent: {}
[8.858160] (sf_pkg) StdoutLine: {'line': b'import time\n'}
[8.859888] (sf_pkg) StdoutLine: {'line': b'^\n'}
[8.861576] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.863114] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/tensor_publisher.py:9:1: I201 Missing newline between import groups. 'import I2C_LCD_driver' is identified as Third Party and 'import time' is identified as Stdlib.\n"}
[8.865121] (sf_pkg) StdoutLine: {'line': b'import I2C_LCD_driver\n'}
[8.867458] (sf_pkg) StdoutLine: {'line': b'^\n'}
[8.868938] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.870469] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/tensor_publisher.py:13:28: E203 whitespace before ':'\n"}
[8.872048] (sf_pkg) StdoutLine: {'line': b'class TensorPublisher(Node) :\n'}
[8.873668] (sf_pkg) StdoutLine: {'line': b'                           ^\n'}
[8.875296] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.876798] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/tensor_publisher.py:14:1: CNL100 Class definition does not have a new line.\n'}
[8.878679] (sf_pkg) StdoutLine: {'line': b'    def __init__(self, interpreter, cap, mylcd):\n'}
[8.880375] (sf_pkg) StdoutLine: {'line': b'^\n'}
[8.881876] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.883580] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/tensor_publisher.py:18:34: Q000 Double quotes found but single quotes preferred\n'}
[8.885063] (sf_pkg) StdoutLine: {'line': b'        mylcd.lcd_display_string("",2)\n'}
[8.886670] (sf_pkg) StdoutLine: {'line': b'                                 ^\n'}
[8.888324] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.890964] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/tensor_publisher.py:18:36: E231 missing whitespace after ','\n"}
[8.893254] (sf_pkg) StdoutLine: {'line': b'        mylcd.lcd_display_string("",2)\n'}
[8.894767] (sf_pkg) StdoutLine: {'line': b'                                   ^\n'}
[8.896393] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.897984] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/tensor_publisher.py:25:16: Q000 Double quotes found but single quotes preferred\n'}
[8.899490] (sf_pkg) StdoutLine: {'line': b'        data = "!"+ \'{0:0^3}\'.format(f\'{small}\') + \'{0:0^3}\'.format(f\'{big}\') +"!"\n'}
[8.900960] (sf_pkg) StdoutLine: {'line': b'               ^\n'}
[8.902489] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.903972] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/tensor_publisher.py:25:19: E225 missing whitespace around operator\n'}
[8.905916] (sf_pkg) StdoutLine: {'line': b'        data = "!"+ \'{0:0^3}\'.format(f\'{small}\') + \'{0:0^3}\'.format(f\'{big}\') +"!"\n'}
[8.908216] (sf_pkg) StdoutLine: {'line': b'                  ^\n'}
[8.910365] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.912277] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/tensor_publisher.py:25:80: E225 missing whitespace around operator\n'}
[8.914083] (sf_pkg) StdoutLine: {'line': b'        data = "!"+ \'{0:0^3}\'.format(f\'{small}\') + \'{0:0^3}\'.format(f\'{big}\') +"!"\n'}
[8.916063] (sf_pkg) StdoutLine: {'line': b'                                                                               ^\n'}
[8.917777] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.919223] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/tensor_publisher.py:25:80: Q000 Double quotes found but single quotes preferred\n'}
[8.921087] (sf_pkg) StdoutLine: {'line': b'        data = "!"+ \'{0:0^3}\'.format(f\'{small}\') + \'{0:0^3}\'.format(f\'{big}\') +"!"\n'}
[8.922954] (sf_pkg) StdoutLine: {'line': b'                                                                               ^\n'}
[8.924759] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.926535] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/tensor_publisher.py:27:34: Q000 Double quotes found but single quotes preferred\n'}
[8.928351] (sf_pkg) StdoutLine: {'line': b'        mylcd.lcd_display_string("",2)\n'}
[8.930234] (sf_pkg) StdoutLine: {'line': b'                                 ^\n'}
[8.932019] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.933739] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/tensor_publisher.py:27:36: E231 missing whitespace after ','\n"}
[8.935715] (sf_pkg) StdoutLine: {'line': b'        mylcd.lcd_display_string("",2)\n'}
[8.938092] (sf_pkg) StdoutLine: {'line': b'                                   ^\n'}
[8.939927] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.941911] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/tensor_publisher.py:28:34: Q000 Double quotes found but single quotes preferred\n'}
[8.943450] (sf_pkg) StdoutLine: {'line': b'        mylcd.lcd_display_string("Started",2)\n'}
[8.944994] (sf_pkg) StdoutLine: {'line': b'                                 ^\n'}
[8.946570] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.948279] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/tensor_publisher.py:28:43: E231 missing whitespace after ','\n"}
[8.949956] (sf_pkg) StdoutLine: {'line': b'        mylcd.lcd_display_string("Started",2)\n'}
[8.951514] (sf_pkg) StdoutLine: {'line': b'                                          ^\n'}
[8.953367] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.955149] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/tensor_publisher.py:33:50: E203 whitespace before ':'\n"}
[8.957089] (sf_pkg) StdoutLine: {'line': b'    def max_tensor(self, interpreter, cap, mylcd) :\n'}
[8.958882] (-) TimerEvent: {}
[8.959920] (sf_pkg) StdoutLine: {'line': b'                                                 ^\n'}
[8.961917] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.963749] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/tensor_publisher.py:37:16: F821 undefined name 'now'\n"}
[8.965522] (sf_pkg) StdoutLine: {'line': b'        while (now <= 5) and cap.isOpened() :\n'}
[8.967115] (sf_pkg) StdoutLine: {'line': b'               ^\n'}
[8.968551] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.970178] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/tensor_publisher.py:37:44: E203 whitespace before ':'\n"}
[8.971737] (sf_pkg) StdoutLine: {'line': b'        while (now <= 5) and cap.isOpened() :\n'}
[8.973370] (sf_pkg) StdoutLine: {'line': b'                                           ^\n'}
[8.974914] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.977230] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/tensor_publisher.py:40:38: Q000 Double quotes found but single quotes preferred\n'}
[8.978725] (sf_pkg) StdoutLine: {'line': b'            mylcd.lcd_display_string("",2)\n'}
[8.980435] (sf_pkg) StdoutLine: {'line': b'                                     ^\n'}
[8.981926] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.983511] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/tensor_publisher.py:40:40: E231 missing whitespace after ','\n"}
[8.985095] (sf_pkg) StdoutLine: {'line': b'            mylcd.lcd_display_string("",2)\n'}
[8.986513] (sf_pkg) StdoutLine: {'line': b'                                       ^\n'}
[8.988279] (sf_pkg) StdoutLine: {'line': b'\n'}
[8.990308] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/tensor_publisher.py:41:61: E231 missing whitespace after ','\n"}
[8.992028] (sf_pkg) StderrLine: {'line': b'\x1b[33m=============================== warnings summary ===============================\x1b[0m\n'}
[8.994780] (sf_pkg) StderrLine: {'line': b'../../../.local/lib/python3.8/site-packages/_pytest/nodes.py:633\n'}
[8.996795] (sf_pkg) StdoutLine: {'line': b"            mylcd.lcd_display_string(f'Started in {now} sec',2)\n"}
[8.999211] (sf_pkg) StdoutLine: {'line': b'                                                            ^\n'}
[9.000743] (sf_pkg) StdoutLine: {'line': b'\n'}
[9.002535] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/tensor_publisher.py:58:20: C408 Unnecessary list call - rewrite as a literal.\n'}
[9.004725] (sf_pkg) StdoutLine: {'line': b'            data = list()\n'}
[9.006387] (sf_pkg) StdoutLine: {'line': b'                   ^\n'}
[9.008226] (sf_pkg) StdoutLine: {'line': b'\n'}
[9.010103] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/tensor_publisher.py:60:32: E203 whitespace before ':'\n"}
[9.011861] (sf_pkg) StdoutLine: {'line': b'            for shape in shaped :\n'}
[9.014142] (sf_pkg) StdoutLine: {'line': b'                               ^\n'}
[9.016067] (sf_pkg) StdoutLine: {'line': b'\n'}
[9.017473] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/tensor_publisher.py:62:44: C417 Unnecessary use of map - use a generator expression instead.\n'}
[9.018933] (sf_pkg) StdoutLine: {'line': b'            l_x, l_y, l_c, r_x, r_y, r_c = map(lambda x : x, data)\n'}
[9.020423] (sf_pkg) StdoutLine: {'line': b'                                           ^\n'}
[9.021926] (sf_pkg) StdoutLine: {'line': b'\n'}
[9.023458] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/tensor_publisher.py:62:56: E203 whitespace before ':'\n"}
[9.025836] (sf_pkg) StdoutLine: {'line': b'            l_x, l_y, l_c, r_x, r_y, r_c = map(lambda x : x, data)\n'}
[9.027657] (sf_pkg) StdoutLine: {'line': b'                                                       ^\n'}
[9.029235] (sf_pkg) StdoutLine: {'line': b'\n'}
[9.031085] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/tensor_publisher.py:64:13: E115 expected an indented block (comment)\n'}
[9.044930] (sf_pkg) StdoutLine: {'line': b'            # length\xeb\xa5\xbc float\xec\x9c\xbc\xeb\xa1\x9c \xeb\xb3\xb4\xeb\x82\xb4\xeb\x8f\x84 \xeb\x90\x98\xec\xa5\xac?\n'}
[9.047089] (sf_pkg) StdoutLine: {'line': b'            ^\n'}
[9.049050] (sf_pkg) StdoutLine: {'line': b'\n'}
[9.050968] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/tensor_publisher.py:68:13: E203 whitespace before ':'\n"}
[9.052827] (sf_pkg) StdoutLine: {'line': b'        else :\n'}
[9.055005] (sf_pkg) StdoutLine: {'line': b'            ^\n'}
[9.057079] (sf_pkg) StdoutLine: {'line': b'\n'}
[9.059616] (-) TimerEvent: {}
[9.060495] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/tensor_publisher.py:71:46: E203 whitespace before ':'\n"}
[9.062221] (sf_pkg) StdoutLine: {'line': b'    def tensor_result(self, interpreter, cap) :\n'}
[9.064099] (sf_pkg) StdoutLine: {'line': b'                                             ^\n'}
[9.065973] (sf_pkg) StdoutLine: {'line': b'\n'}
[9.067870] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/tensor_publisher.py:92:16: C408 Unnecessary list call - rewrite as a literal.\n'}
[9.069444] (sf_pkg) StdoutLine: {'line': b'        data = list()\n'}
[9.071192] (sf_pkg) StdoutLine: {'line': b'               ^\n'}
[9.072735] (sf_pkg) StdoutLine: {'line': b'\n'}
[9.074622] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/tensor_publisher.py:94:28: E203 whitespace before ':'\n"}
[9.076693] (sf_pkg) StdoutLine: {'line': b'        for shape in shaped :\n'}
[9.079254] (sf_pkg) StdoutLine: {'line': b'                           ^\n'}
[9.081008] (sf_pkg) StdoutLine: {'line': b'\n'}
[9.082772] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/tensor_publisher.py:97:20: Q000 Double quotes found but single quotes preferred\n'}
[9.084829] (sf_pkg) StdoutLine: {'line': b'        msg.data = "*".join(datastr)\n'}
[9.086546] (sf_pkg) StdoutLine: {'line': b'                   ^\n'}
[9.088383] (sf_pkg) StdoutLine: {'line': b'\n'}
[9.090251] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/tensor_publisher.py:101:1: E302 expected 2 blank lines, found 1\n'}
[9.092940] (sf_pkg) StdoutLine: {'line': b'def main(args=None) :\n'}
[9.094570] (sf_pkg) StdoutLine: {'line': b'^\n'}
[9.096159] (sf_pkg) StdoutLine: {'line': b'\n'}
[9.097835] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/tensor_publisher.py:101:20: E203 whitespace before ':'\n"}
[9.099777] (sf_pkg) StdoutLine: {'line': b'def main(args=None) :\n'}
[9.101731] (sf_pkg) StdoutLine: {'line': b'                   ^\n'}
[9.104141] (sf_pkg) StdoutLine: {'line': b'\n'}
[9.106114] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/tensor_publisher.py:103:50: Q000 Double quotes found but single quotes preferred\n'}
[9.108278] (sf_pkg) StdoutLine: {'line': b'    interpreter = tf.lite.Interpreter(model_path="lite-model_movenet_singlepose_lightning_3.tflite")\n'}
[9.112226] (sf_pkg) StdoutLine: {'line': b'                                                 ^\n'}
[9.115599] (sf_pkg) StdoutLine: {'line': b'\n'}
[9.118451] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/tensor_publisher.py:103:100: E501 line too long (100 > 99 characters)\n'}
[9.120349] (sf_pkg) StdoutLine: {'line': b'    interpreter = tf.lite.Interpreter(model_path="lite-model_movenet_singlepose_lightning_3.tflite")\n'}
[9.122084] (sf_pkg) StdoutLine: {'line': b'                                                                                                   ^\n'}
[9.123828] (sf_pkg) StdoutLine: {'line': b'\n'}
[9.125769] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/tensor_publisher.py:106:5: F841 local variable 'mylcd' is assigned to but never used\n"}
[9.128347] (sf_pkg) StdoutLine: {'line': b'    mylcd = I2C_LCD_driver.lcd()\n'}
[9.130126] (sf_pkg) StdoutLine: {'line': b'    ^\n'}
[9.132020] (sf_pkg) StdoutLine: {'line': b'\n'}
[9.133777] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/tensor_publisher.py:117:1: E305 expected 2 blank lines after class or function definition, found 1\n'}
[9.135885] (sf_pkg) StdoutLine: {'line': b"if __name__ == '__main__' :\n"}
[9.137562] (sf_pkg) StdoutLine: {'line': b'^\n'}
[9.139089] (sf_pkg) StdoutLine: {'line': b'\n'}
[9.140627] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/tensor_publisher.py:117:26: E203 whitespace before ':'\n"}
[9.142290] (sf_pkg) StdoutLine: {'line': b"if __name__ == '__main__' :\n"}
[9.144138] (sf_pkg) StdoutLine: {'line': b'                         ^\n'}
[9.145552] (sf_pkg) StdoutLine: {'line': b'\n'}
[9.147029] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/tensor_publisher.py:120:1: E265 block comment should start with '# '\n"}
[9.148666] (sf_pkg) StdoutLine: {'line': b'#\xec\xbd\x94, \xec\x99\xbc\xeb\x88\x88, \xec\x98\xa4\xeb\x88\x88, \xec\x99\xbc\xea\xb7\x80, \xec\x98\xa4\xea\xb7\x80, \xec\x99\xbc\xec\x96\xb4\xea\xb9\xa8, \xec\x98\xa4\xec\x96\xb4\xea\xb9\xa8^\n'}
[9.150265] (sf_pkg) StdoutLine: {'line': b'\n'}
[9.151799] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/tensor_publisher.py:120:29: W292 no newline at end of file\n'}
[9.153475] (sf_pkg) StdoutLine: {'line': b'#\xec\xbd\x94, \xec\x99\xbc\xeb\x88\x88, \xec\x98\xa4\xeb\x88\x88, \xec\x99\xbc\xea\xb7\x80, \xec\x98\xa4\xea\xb7\x80, \xec\x99\xbc\xec\x96\xb4\xea\xb9\xa8, \xec\x98\xa4\xec\x96\xb4\xea\xb9\xa8                            ^\n'}
[9.155546] (sf_pkg) StdoutLine: {'line': b'\n'}
[9.157476] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/tensor_publisher.py:120:29: W292 no newline at end of file\n'}
[9.158819] (sf_pkg) StdoutLine: {'line': b'#\xec\xbd\x94, \xec\x99\xbc\xeb\x88\x88, \xec\x98\xa4\xeb\x88\x88, \xec\x99\xbc\xea\xb7\x80, \xec\x98\xa4\xea\xb7\x80, \xec\x99\xbc\xec\x96\xb4\xea\xb9\xa8, \xec\x98\xa4\xec\x96\xb4\xea\xb9\xa8                            ^\n'}
[9.164690] (-) TimerEvent: {}
[9.165577] (sf_pkg) StdoutLine: {'line': b'\n'}
[9.167021] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/tensor_publisher.py:120:29: W292 no newline at end of file\n'}
[9.168536] (sf_pkg) StdoutLine: {'line': b'#\xec\xbd\x94, \xec\x99\xbc\xeb\x88\x88, \xec\x98\xa4\xeb\x88\x88, \xec\x99\xbc\xea\xb7\x80, \xec\x98\xa4\xea\xb7\x80, \xec\x99\xbc\xec\x96\xb4\xea\xb9\xa8, \xec\x98\xa4\xec\x96\xb4\xea\xb9\xa8                            ^\n'}
[9.172552] (sf_pkg) StdoutLine: {'line': b'\n'}
[9.174071] (sf_pkg) StdoutLine: {'line': b'3     C408 Unnecessary list call - rewrite as a literal.\n'}
[9.179211] (sf_pkg) StdoutLine: {'line': b'4     C417 Unnecessary use of map - use a generator expression instead.\n'}
[9.180748] (sf_pkg) StdoutLine: {'line': b'3     CNL100 Class definition does not have a new line.\n'}
[9.182567] (sf_pkg) StdoutLine: {'line': b'2     E115 expected an indented block (comment)\n'}
[9.184220] (sf_pkg) StdoutLine: {'line': b"1     E201 whitespace after '('\n"}
[9.185618] (sf_pkg) StdoutLine: {'line': b"2     E202 whitespace before ')'\n"}
[9.187122] (sf_pkg) StdoutLine: {'line': b"24    E203 whitespace before ':'\n"}
[9.188870] (sf_pkg) StdoutLine: {'line': b'2     E225 missing whitespace around operator\n'}
[9.191387] (sf_pkg) StdoutLine: {'line': b"5     E231 missing whitespace after ','\n"}
[9.193448] (sf_pkg) StdoutLine: {'line': b'1     E251 unexpected spaces around keyword / parameter equals\n'}
[9.195394] (sf_pkg) StdoutLine: {'line': b"5     E265 block comment should start with '# '\n"}
[9.196940] (sf_pkg) StdoutLine: {'line': b'1     E272 multiple spaces before keyword\n'}
[9.198842] (sf_pkg) StdoutLine: {'line': b'2     E301 expected 1 blank line, found 0\n'}
[9.200428] (sf_pkg) StdoutLine: {'line': b'7     E302 expected 2 blank lines, found 1\n'}
[9.201813] (sf_pkg) StdoutLine: {'line': b'1     E303 too many blank lines (3)\n'}
[9.208159] (sf_pkg) StdoutLine: {'line': b'5     E305 expected 2 blank lines after class or function definition, found 1\n'}
[9.209556] (sf_pkg) StdoutLine: {'line': b'2     E501 line too long (100 > 99 characters)\n'}
[9.211104] (sf_pkg) StdoutLine: {'line': b"1     F821 undefined name 'now'\n"}
[9.212585] (sf_pkg) StdoutLine: {'line': b"2     F841 local variable 'data' is assigned to but never used\n"}
[9.214154] (sf_pkg) StdoutLine: {'line': b"9     I100 Import statements are in the wrong order. 'import os' should be before 'from setuptools import setup' and in a different group.\n"}
[9.215782] (sf_pkg) StdoutLine: {'line': b"4     I201 Missing newline between import groups. 'import os' is identified as Stdlib and 'from setuptools import setup' is identified as Third Party.\n"}
[9.226111] (sf_pkg) StdoutLine: {'line': b'15    Q000 Double quotes found but single quotes preferred\n'}
[9.227849] (sf_pkg) StdoutLine: {'line': b'1     W291 trailing whitespace\n'}
[9.229260] (sf_pkg) StdoutLine: {'line': b'10    W292 no newline at end of file\n'}
[9.230619] (sf_pkg) StdoutLine: {'line': b'2     W293 blank line contains whitespace\n'}
[9.232008] (sf_pkg) StdoutLine: {'line': b'\n'}
[9.233389] (sf_pkg) StdoutLine: {'line': b'11 files checked\n'}
[9.234707] (sf_pkg) StdoutLine: {'line': b'114 errors\n'}
[9.236300] (sf_pkg) StdoutLine: {'line': b'\n'}
[9.237783] (sf_pkg) StdoutLine: {'line': b"'C'-type errors: 10\n"}
[9.239481] (sf_pkg) StdoutLine: {'line': b"'E'-type errors: 60\n"}
[9.246618] (sf_pkg) StdoutLine: {'line': b"'F'-type errors: 3\n"}
[9.247871] (sf_pkg) StdoutLine: {'line': b"'I'-type errors: 13\n"}
[9.248761] (sf_pkg) StdoutLine: {'line': b"'Q'-type errors: 15\n"}
[9.250787] (sf_pkg) StdoutLine: {'line': b"'W'-type errors: 13\n"}
[9.253035] (sf_pkg) StdoutLine: {'line': b'\n'}
[9.254533] (sf_pkg) StdoutLine: {'line': b'Checked files:\n'}
[9.265289] (-) TimerEvent: {}
[9.266119] (sf_pkg) StdoutLine: {'line': b'\n'}
[9.267799] (sf_pkg) StdoutLine: {'line': b'* ./setup.py\n'}
[9.269245] (sf_pkg) StdoutLine: {'line': b'* ./launch/sf.launch.py\n'}
[9.270508] (sf_pkg) StdoutLine: {'line': b'* ./sf_pkg/serial_talker.py\n'}
[9.272121] (sf_pkg) StdoutLine: {'line': b'* ./sf_pkg/__init__.py\n'}
[9.273427] (sf_pkg) StdoutLine: {'line': b'* ./sf_pkg/cmd_selector.py\n'}
[9.274877] (sf_pkg) StdoutLine: {'line': b'* ./sf_pkg/calculator.py\n'}
[9.276258] (sf_pkg) StdoutLine: {'line': b'* ./sf_pkg/tensor.py\n'}
[9.277707] (sf_pkg) StdoutLine: {'line': b'* ./sf_pkg/tensor_publisher.py\n'}
[9.282284] (sf_pkg) StdoutLine: {'line': b'* ./test/test_flake8.py\n'}
[9.283982] (sf_pkg) StdoutLine: {'line': b'* ./test/test_copyright.py\n'}
[9.285338] (sf_pkg) StdoutLine: {'line': b'* ./test/test_pep257.py\n'}
[9.286640] (sf_pkg) StderrLine: {'line': b'  Warning: The (fspath: py.path.local) argument to Package is deprecated. Please use the (path: pathlib.Path) argument instead.\n'}
[9.296460] (sf_pkg) StderrLine: {'line': b'  See https://docs.pytest.org/en/latest/deprecations.html#fspath-argument-for-node-constructors-replaced-with-pathlib-path\n'}
[9.297662] (sf_pkg) StderrLine: {'line': b'\n'}
[9.298691] (sf_pkg) StderrLine: {'line': b'../../../../../opt/ros/foxy/lib/python3.8/site-packages/launch_testing/pytest/hooks.py:179\n'}
[9.300257] (sf_pkg) StderrLine: {'line': b'../../../../../opt/ros/foxy/lib/python3.8/site-packages/launch_testing/pytest/hooks.py:179\n'}
[9.301873] (sf_pkg) StderrLine: {'line': b'../../../../../opt/ros/foxy/lib/python3.8/site-packages/launch_testing/pytest/hooks.py:179\n'}
[9.303276] (sf_pkg) StderrLine: {'line': b'  Warning: The (fspath: py.path.local) argument to Module is deprecated. Please use the (path: pathlib.Path) argument instead.\n'}
[9.304650] (sf_pkg) StderrLine: {'line': b'  See https://docs.pytest.org/en/latest/deprecations.html#fspath-argument-for-node-constructors-replaced-with-pathlib-path\n'}
[9.306372] (sf_pkg) StderrLine: {'line': b'\n'}
[9.307987] (sf_pkg) StderrLine: {'line': b'../../../../../usr/lib/python3/dist-packages/pydocstyle/config.py:6\n'}
[9.311550] (sf_pkg) StderrLine: {'line': b"  Warning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3, and in 3.10 it will stop working\n"}
[9.313441] (sf_pkg) StderrLine: {'line': b'\n'}
[9.315075] (sf_pkg) StderrLine: {'line': b'-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n'}
[9.316563] (sf_pkg) StdoutLine: {'line': b'-------- generated xml file: /home/pi/sunflower/build/sf_pkg/pytest.xml --------\n'}
[9.318142] (sf_pkg) StdoutLine: {'line': b'=========================== short test summary info ============================\n'}
[9.320204] (sf_pkg) StdoutLine: {'line': b'FAILED test/test_copyright.py::test_copyright - AssertionError: Found errors\n'}
[9.321664] (sf_pkg) StdoutLine: {'line': b'FAILED test/test_flake8.py::test_flake8 - AssertionError: Found 114 code styl...\n'}
[9.322942] (sf_pkg) StdoutLine: {'line': b'\x1b[31m=================== \x1b[31m\x1b[1m2 failed\x1b[0m, \x1b[32m1 passed\x1b[0m, \x1b[33m5 warnings\x1b[0m\x1b[31m in 2.90s\x1b[0m\x1b[31m ====================\x1b[0m\n'}
[9.324319] (sf_pkg) CommandEnded: {'returncode': 1}
[9.326983] (sf_pkg) TestFailure: {'identifier': 'sf_pkg'}
[9.327553] (sf_pkg) JobEnded: {'identifier': 'sf_pkg', 'rc': 0}
[9.330954] (test_pkg) StdoutLine: {'line': b'\x1b[1m============================= test session starts ==============================\x1b[0m\n'}
[9.333104] (test_pkg) StdoutLine: {'line': b'platform linux -- Python 3.8.10, pytest-7.1.2, pluggy-0.13.0\n'}
[9.334699] (stem_pkg) StdoutLine: {'line': b'test/test_flake8.py \x1b[31mF\x1b[0m\x1b[31m                                                    [ 66%]\x1b[0m\n'}
[9.345524] (test_pkg) StdoutLine: {'line': b'cachedir: /home/pi/sunflower/build/test_pkg/.pytest_cache\n'}
[9.346648] (test_pkg) StdoutLine: {'line': b'rootdir: /home/pi/sunflower/src/test_pkg\n'}
[9.347401] (test_pkg) StdoutLine: {'line': b'plugins: ament-flake8-0.9.6, ament-copyright-0.9.6, launch-testing-ros-0.11.6, ament-xmllint-0.9.6, ament-pep257-0.9.6, ament-lint-0.9.6, launch-testing-0.10.8, rerunfailures-10.2, repeat-0.9.1, colcon-core-0.8.3, cov-2.8.1\n'}
[9.365502] (-) TimerEvent: {}
[9.466388] (-) TimerEvent: {}
[9.567560] (-) TimerEvent: {}
[9.630532] (test_pkg) StdoutLine: {'line': b'\x1b[1mcollecting ... \x1b[0m\x1b[1m\n'}
[9.631373] (test_pkg) StdoutLine: {'line': b'collected 3 items                                                              \x1b[0m\n'}
[9.634088] (test_pkg) StdoutLine: {'line': b'\n'}
[9.658270] (stem_pkg) StdoutLine: {'line': b'test/test_pep257.py \x1b[32m.\x1b[0m\x1b[31m                                                    [100%]\x1b[0m\n'}
[9.659220] (stem_pkg) StdoutLine: {'line': b'\n'}
[9.659951] (stem_pkg) StdoutLine: {'line': b'=================================== FAILURES ===================================\n'}
[9.660551] (stem_pkg) StdoutLine: {'line': b'\x1b[31m\x1b[1m________________________________ test_copyright ________________________________\x1b[0m\n'}
[9.661106] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_copyright.py\x1b[0m:23: in test_copyright\n'}
[9.667752] (-) TimerEvent: {}
[9.748124] (stem_pkg) StdoutLine: {'line': b"    \x1b[34;01massert\x1b[39;49;00m rc == \x1b[34;01m0\x1b[39;49;00m, \x1b[33m'\x1b[39;49;00m\x1b[33mFound errors\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m\n"}
[9.749056] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found errors\x1b[0m\n'}
[9.754656] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[9.757282] (stem_pkg) StdoutLine: {'line': b'----------------------------- Captured stderr call -----------------------------\n'}
[9.761876] (stem_pkg) StdoutLine: {'line': b'launch/stem.launch.py: could not find copyright notice\n'}
[9.764568] (stem_pkg) StdoutLine: {'line': b'stem_pkg/I2C_LCD_driver.py: could not find copyright notice\n'}
[9.765120] (stem_pkg) StdoutLine: {'line': b'stem_pkg/async_serial_talker.py: could not find copyright notice\n'}
[9.765459] (stem_pkg) StdoutLine: {'line': b'stem_pkg/calculator.py: could not find copyright notice\n'}
[9.765764] (stem_pkg) StdoutLine: {'line': b'stem_pkg/cmd_selector.py: could not find copyright notice\n'}
[9.766067] (stem_pkg) StdoutLine: {'line': b'stem_pkg/controller.py: could not find copyright notice\n'}
[9.766361] (stem_pkg) StdoutLine: {'line': b'stem_pkg/serial_talker.py: could not find copyright notice\n'}
[9.766676] (stem_pkg) StdoutLine: {'line': b'stem_pkg/tensor.py: could not find copyright notice\n'}
[9.767040] (stem_pkg) StdoutLine: {'line': b'stem_pkg/tensor_publisher.py: could not find copyright notice\n'}
[9.767590] (stem_pkg) StdoutLine: {'line': b'stem_pkg/tester.py: could not find copyright notice\n'}
[9.773195] (-) TimerEvent: {}
[9.778728] (stem_pkg) StdoutLine: {'line': b'10 errors, checked 14 files\n'}
[9.779610] (stem_pkg) StdoutLine: {'line': b'\x1b[31m\x1b[1m_________________________________ test_flake8 __________________________________\x1b[0m\n'}
[9.780381] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_flake8.py\x1b[0m:23: in test_flake8\n'}
[9.781011] (stem_pkg) StdoutLine: {'line': b'    \x1b[34;01massert\x1b[39;49;00m rc == \x1b[34;01m0\x1b[39;49;00m, \\\n'}
[9.781598] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found 323 code style errors / warnings:\x1b[0m\n'}
[9.782192] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./setup.py:2:1: I100 Import statements are in the wrong order. 'import os' should be before 'from setuptools import setup' and in a different group.\x1b[0m\n"}
[9.782794] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./setup.py:2:1: I201 Missing newline between import groups. 'import os' is identified as Stdlib and 'from setuptools import setup' is identified as Third Party.\x1b[0m\n"}
[9.783470] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./setup.py:3:1: I100 Import statements are in the wrong order. 'from glob import glob' should be before 'import os'\x1b[0m\n"}
[9.784033] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./setup.py:26:13: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[9.784564] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./setup.py:27:13: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[9.791666] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./setup.py:28:13: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[9.821815] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./setup.py:29:13: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[9.825090] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./setup.py:30:13: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[9.825816] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./setup.py:31:13: E265 block comment should start with '# '\x1b[0m\n"}
[9.826536] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./setup.py:32:13: E265 block comment should start with '# '\x1b[0m\n"}
[9.827148] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./setup.py:35:2: W292 no newline at end of file\x1b[0m\n'}
[9.829587] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/stem.launch.py:4:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[9.831828] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/stem.launch.py:10:20: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[9.832401] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/stem.launch.py:20:32: E202 whitespace before ')'\x1b[0m\n"}
[9.832935] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/stem.launch.py:26:20: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[9.833477] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/stem.launch.py:26:29: E202 whitespace before ')'\x1b[0m\n"}
[9.834001] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/stem.launch.py:27:7: W292 no newline at end of file\x1b[0m\n'}
[9.834531] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/serial_talker.py:5:1: I100 Import statements are in the wrong order. 'import serial' should be before 'from std_msgs.msg import String'\x1b[0m\n"}
[9.835207] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/serial_talker.py:5:14: W291 trailing whitespace\x1b[0m\n'}
[9.836964] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/serial_talker.py:11:5: E301 expected 1 blank line, found 0\x1b[0m\n'}
[9.839037] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/serial_talker.py:19:32: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[9.842063] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/serial_talker.py:22:9: E265 block comment should start with '# '\x1b[0m\n"}
[9.845311] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/serial_talker.py:23:9: E265 block comment should start with '# '\x1b[0m\n"}
[9.848586] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/serial_talker.py:40:1: E305 expected 2 blank lines after class or function definition, found 1\x1b[0m\n'}
[9.851799] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/serial_talker.py:40:26: E203 whitespace before ':'\x1b[0m\n"}
[9.854711] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/serial_talker.py:41:11: W292 no newline at end of file\x1b[0m\n'}
[9.857608] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:5:1: E402 module level import not at top of file\x1b[0m\n'}
[9.860517] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:6:1: E402 module level import not at top of file\x1b[0m\n'}
[9.863541] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:6:1: I100 Import statements are in the wrong order. 'from time import sleep' should be before 'import smbus' and in a different group.\x1b[0m\n"}
[9.866308] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:6:1: I201 Missing newline between import groups. 'from time import sleep' is identified as Stdlib and 'import smbus' is identified as Third Party.\x1b[0m\n"}
[9.868876] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:7:1: E302 expected 2 blank lines, found 0\x1b[0m\n'}
[9.871955] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:8:1: CNL100 Class definition does not have a new line.\x1b[0m\n'}
[9.874824] (-) TimerEvent: {}
[9.876218] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:8:4: E111 indentation is not a multiple of four\x1b[0m\n'}
[9.878018] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:9:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[9.879708] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:10:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[9.881765] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:12:4: E301 expected 1 blank line, found 0\x1b[0m\n'}
[9.883834] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:12:4: E111 indentation is not a multiple of four\x1b[0m\n'}
[9.885660] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:13:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[9.887524] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:14:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[9.890250] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:16:4: E301 expected 1 blank line, found 0\x1b[0m\n'}
[9.893293] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:16:4: E111 indentation is not a multiple of four\x1b[0m\n'}
[9.897346] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:17:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[9.900367] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:18:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[9.902640] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:20:4: E301 expected 1 blank line, found 0\x1b[0m\n'}
[9.904919] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:20:4: E111 indentation is not a multiple of four\x1b[0m\n'}
[9.907274] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:21:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[9.909291] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:22:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[9.912116] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:24:4: E301 expected 1 blank line, found 0\x1b[0m\n'}
[9.915086] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:24:4: E111 indentation is not a multiple of four\x1b[0m\n'}
[9.918077] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:25:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[9.921218] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:27:4: E301 expected 1 blank line, found 0\x1b[0m\n'}
[9.924385] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:27:4: E111 indentation is not a multiple of four\x1b[0m\n'}
[9.927440] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:28:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[9.930374] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:30:4: E301 expected 1 blank line, found 0\x1b[0m\n'}
[9.932984] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:30:4: E111 indentation is not a multiple of four\x1b[0m\n'}
[9.935488] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:31:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[9.938225] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:33:1: E305 expected 2 blank lines after class or function definition, found 0\x1b[0m\n'}
[9.940923] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:68:16: E261 at least two spaces before inline comment\x1b[0m\n'}
[9.943907] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:69:16: E261 at least two spaces before inline comment\x1b[0m\n'}
[9.946943] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:70:16: E261 at least two spaces before inline comment\x1b[0m\n'}
[9.949391] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:71:1: E302 expected 2 blank lines, found 0\x1b[0m\n'}
[9.952020] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:72:4: E114 indentation is not a multiple of four (comment)\x1b[0m\n'}
[9.954988] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:72:4: E265 block comment should start with '# '\x1b[0m\n"}
[9.958291] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:73:4: E111 indentation is not a multiple of four\x1b[0m\n'}
[9.961427] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:74:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[9.964483] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:75:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[9.967659] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:76:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[9.970740] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:77:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[9.973845] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:78:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[9.976914] (-) TimerEvent: {}
[9.978258] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:79:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[9.980049] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:80:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[9.981746] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:81:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[9.984051] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:82:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[9.986196] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:83:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[9.988834] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:84:4: E114 indentation is not a multiple of four (comment)\x1b[0m\n'}
[9.991794] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:85:4: E301 expected 1 blank line, found 0\x1b[0m\n'}
[9.994336] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:85:4: E111 indentation is not a multiple of four\x1b[0m\n'}
[9.997349] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:86:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[10.000163] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:87:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[10.002323] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:88:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[10.004698] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:89:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[10.007723] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:90:4: E301 expected 1 blank line, found 0\x1b[0m\n'}
[10.010586] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:90:4: E111 indentation is not a multiple of four\x1b[0m\n'}
[10.013654] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:91:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[10.016803] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:92:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[10.019737] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:93:4: E114 indentation is not a multiple of four (comment)\x1b[0m\n'}
[10.021574] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:94:4: E301 expected 1 blank line, found 0\x1b[0m\n'}
[10.023440] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:94:4: E111 indentation is not a multiple of four\x1b[0m\n'}
[10.025072] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:95:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[10.027309] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:96:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[10.028939] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:97:4: E114 indentation is not a multiple of four (comment)\x1b[0m\n'}
[10.032045] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:98:4: E114 indentation is not a multiple of four (comment)\x1b[0m\n'}
[10.034894] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:99:4: E301 expected 1 blank line, found 0\x1b[0m\n'}
[10.037196] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:99:4: E111 indentation is not a multiple of four\x1b[0m\n'}
[10.038668] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:100:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[10.040851] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:101:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[10.042728] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:102:1: W293 blank line contains whitespace\x1b[0m\n'}
[10.044791] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:103:4: E114 indentation is not a multiple of four (comment)\x1b[0m\n'}
[10.046747] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:104:4: E111 indentation is not a multiple of four\x1b[0m\n'}
[10.048931] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:106:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[10.050799] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:108:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[10.052986] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:110:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[10.054920] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:112:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[10.057014] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:115:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[10.058840] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:116:4: E114 indentation is not a multiple of four (comment)\x1b[0m\n'}
[10.060806] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:117:4: E301 expected 1 blank line, found 0\x1b[0m\n'}
[10.063335] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:117:4: E111 indentation is not a multiple of four\x1b[0m\n'}
[10.065404] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:118:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[10.068199] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:119:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[10.070194] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:120:4: E114 indentation is not a multiple of four (comment)\x1b[0m\n'}
[10.072483] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:121:4: E301 expected 1 blank line, found 0\x1b[0m\n'}
[10.074522] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:121:4: E111 indentation is not a multiple of four\x1b[0m\n'}
[10.076684] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:121:31: E261 at least two spaces before inline comment\x1b[0m\n'}
[10.078391] (-) TimerEvent: {}
[10.079376] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:122:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[10.081177] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:123:10: E111 indentation is not a multiple of four\x1b[0m\n'}
[10.082958] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:124:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[10.084599] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:125:10: E111 indentation is not a multiple of four\x1b[0m\n'}
[10.086770] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:126:4: E114 indentation is not a multiple of four (comment)\x1b[0m\n'}
[10.088995] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:127:4: E301 expected 1 blank line, found 0\x1b[0m\n'}
[10.091255] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:127:4: E111 indentation is not a multiple of four\x1b[0m\n'}
[10.094082] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:128:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[10.096902] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:128:27: E703 statement ends with a semicolon\x1b[0m\n'}
[10.100234] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:129:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[10.103693] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:130:10: E111 indentation is not a multiple of four\x1b[0m\n'}
[10.107009] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:131:41: W292 no newline at end of file\x1b[0m\n'}
[10.110493] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:5:1: I100 Import statements are in the wrong order. 'import RPi.GPIO' should be before 'from std_msgs.msg import String'\x1b[0m\n"}
[10.114000] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:7:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[10.117234] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:7:23: E203 whitespace before ':'\x1b[0m\n"}
[10.120070] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:8:1: CNL100 Class definition does not have a new line.\x1b[0m\n'}
[10.122514] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:15:1: W293 blank line contains whitespace\x1b[0m\n'}
[10.125500] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:19:60: E261 at least two spaces before inline comment\x1b[0m\n'}
[10.128215] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:19:61: E262 inline comment should start with '# '\x1b[0m\n"}
[10.130931] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:20:60: E261 at least two spaces before inline comment\x1b[0m\n'}
[10.133954] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:20:61: E262 inline comment should start with '# '\x1b[0m\n"}
[10.136604] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:22:60: E261 at least two spaces before inline comment\x1b[0m\n'}
[10.139023] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:22:61: E262 inline comment should start with '# '\x1b[0m\n"}
[10.141628] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:23:60: E261 at least two spaces before inline comment\x1b[0m\n'}
[10.144715] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:23:61: E262 inline comment should start with '# '\x1b[0m\n"}
[10.147270] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:25:60: E261 at least two spaces before inline comment\x1b[0m\n'}
[10.149851] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:25:61: E262 inline comment should start with '# '\x1b[0m\n"}
[10.152924] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:26:60: E261 at least two spaces before inline comment\x1b[0m\n'}
[10.156225] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:26:61: E262 inline comment should start with '# '\x1b[0m\n"}
[10.159677] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:28:60: E261 at least two spaces before inline comment\x1b[0m\n'}
[10.162951] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:28:61: E262 inline comment should start with '# '\x1b[0m\n"}
[10.166183] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:30:9: E265 block comment should start with '# '\x1b[0m\n"}
[10.168377] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:31:9: E265 block comment should start with '# '\x1b[0m\n"}
[10.170839] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:33:57: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[10.173020] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:33:59: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[10.175070] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:34:57: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[10.177056] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:34:59: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[10.178902] (-) TimerEvent: {}
[10.180143] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:36:57: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[10.181977] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:36:59: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[10.183946] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:37:57: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[10.185968] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:37:59: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[10.187768] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:39:57: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[10.189639] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:39:59: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[10.191450] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:40:57: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[10.193440] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:40:59: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[10.195203] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:42:57: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[10.197272] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:42:59: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[10.199569] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:46:9: E265 block comment should start with '# '\x1b[0m\n"}
[10.201696] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:48:43: E203 whitespace before ':'\x1b[0m\n"}
[10.203933] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:55:32: E203 whitespace before ':'\x1b[0m\n"}
[10.206059] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:60:19: E203 whitespace before ':'\x1b[0m\n"}
[10.208391] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:61:17: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[10.210330] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:62:21: E203 whitespace before ':'\x1b[0m\n"}
[10.212430] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:63:17: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[10.214938] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:64:21: E203 whitespace before ':'\x1b[0m\n"}
[10.217056] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:65:17: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[10.218855] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:66:21: E203 whitespace before ':'\x1b[0m\n"}
[10.220789] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:67:17: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[10.223298] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:68:21: E203 whitespace before ':'\x1b[0m\n"}
[10.225632] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:69:17: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[10.227409] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:70:21: E203 whitespace before ':'\x1b[0m\n"}
[10.229258] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:71:17: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[10.230876] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:72:21: E203 whitespace before ':'\x1b[0m\n"}
[10.232692] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:73:17: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[10.234419] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:74:21: E203 whitespace before ':'\x1b[0m\n"}
[10.236178] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:75:17: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[10.238502] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:76:21: E203 whitespace before ':'\x1b[0m\n"}
[10.240715] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:77:17: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[10.242937] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:78:13: E203 whitespace before ':'\x1b[0m\n"}
[10.244614] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:83:20: E203 whitespace before ':'\x1b[0m\n"}
[10.248777] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:95:1: E305 expected 2 blank lines after class or function definition, found 1\x1b[0m\n'}
[10.249842] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:95:26: E203 whitespace before ':'\x1b[0m\n"}
[10.251278] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:96:11: W292 no newline at end of file\x1b[0m\n'}
[10.252548] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/async_serial_talker.py:5:1: I100 Import statements are in the wrong order. 'import asyncio' should be before 'from std_msgs.msg import String' and in a different group.\x1b[0m\n"}
[10.253741] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/async_serial_talker.py:5:1: I201 Missing newline between import groups. 'import asyncio' is identified as Stdlib and 'from std_msgs.msg import String' is identified as Third Party.\x1b[0m\n"}
[10.254909] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/async_serial_talker.py:6:1: I201 Missing newline between import groups. 'import serial_asyncio' is identified as Third Party and 'import asyncio' is identified as Stdlib.\x1b[0m\n"}
[10.256170] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/async_serial_talker.py:11:5: E301 expected 1 blank line, found 0\x1b[0m\n'}
[10.257597] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/async_serial_talker.py:20:32: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[10.258793] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/async_serial_talker.py:29:100: E501 line too long (102 > 99 characters)\x1b[0m\n'}
[10.260299] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/async_serial_talker.py:38:38: E203 whitespace before ':'\x1b[0m\n"}
[10.261774] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/async_serial_talker.py:39:21: E203 whitespace before ':'\x1b[0m\n"}
[10.263030] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/async_serial_talker.py:42:9: E265 block comment should start with '# '\x1b[0m\n"}
[10.264344] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/async_serial_talker.py:57:1: E305 expected 2 blank lines after class or function definition, found 1\x1b[0m\n'}
[10.265515] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/async_serial_talker.py:57:26: E203 whitespace before ':'\x1b[0m\n"}
[10.266689] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/async_serial_talker.py:58:11: W292 no newline at end of file\x1b[0m\n'}
[10.267542] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/cmd_selector.py:6:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[10.268131] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/cmd_selector.py:8:5: E301 expected 1 blank line, found 0\x1b[0m\n'}
[10.268706] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/cmd_selector.py:44:1: E303 too many blank lines (3)\x1b[0m\n'}
[10.269258] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/cmd_selector.py:55:1: E305 expected 2 blank lines after class or function definition, found 1\x1b[0m\n'}
[10.269837] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/cmd_selector.py:55:26: E203 whitespace before ':'\x1b[0m\n"}
[10.270490] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/cmd_selector.py:56:11: W292 no newline at end of file\x1b[0m\n'}
[10.271054] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/calculator.py:1:1: F401 'socket.NI_NUMERICHOST' imported but unused\x1b[0m\n"}
[10.271734] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/calculator.py:2:1: I201 Missing newline between import groups. 'import rclpy' is identified as Third Party and 'from socket import NI_NUMERICHOST' is identified as Stdlib.\x1b[0m\n"}
[10.272311] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/calculator.py:7:1: I100 Import statements are in the wrong order. 'import math' should be before 'from sunflower_interfaces.msg import TfliteResult' and in a different group.\x1b[0m\n"}
[10.272795] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/calculator.py:7:1: I201 Missing newline between import groups. 'import math' is identified as Stdlib and 'from sunflower_interfaces.msg import TfliteResult' is identified as Third Party.\x1b[0m\n"}
[10.273380] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/calculator.py:9:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[10.274036] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/calculator.py:9:23: E203 whitespace before ':'\x1b[0m\n"}
[10.274713] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/calculator.py:10:1: CNL100 Class definition does not have a new line.\x1b[0m\n'}
[10.275488] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/calculator.py:23:35: E203 whitespace before ':'\x1b[0m\n"}
[10.276128] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/calculator.py:31:30: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[10.276940] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/calculator.py:34:27: C417 Unnecessary use of map - use a generator expression instead.\x1b[0m\n'}
[10.277503] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/calculator.py:35:27: C417 Unnecessary use of map - use a generator expression instead.\x1b[0m\n'}
[10.278069] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/calculator.py:36:27: C417 Unnecessary use of map - use a generator expression instead.\x1b[0m\n'}
[10.278596] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/calculator.py:62:1: W293 blank line contains whitespace\x1b[0m\n'}
[10.279083] (-) TimerEvent: {}
[10.279707] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/calculator.py:65:10: E203 whitespace before ','\x1b[0m\n"}
[10.281184] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/calculator.py:65:39: C417 Unnecessary use of map - use a generator expression instead.\x1b[0m\n'}
[10.282825] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/calculator.py:83:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[10.283654] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/calculator.py:83:20: E203 whitespace before ':'\x1b[0m\n"}
[10.284280] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/calculator.py:94:1: E305 expected 2 blank lines after class or function definition, found 1\x1b[0m\n'}
[10.284881] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/calculator.py:94:26: E203 whitespace before ':'\x1b[0m\n"}
[10.285417] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/calculator.py:95:11: W292 no newline at end of file\x1b[0m\n'}
[10.286041] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tensor.py:5:1: I100 Import statements are in the wrong order. 'import cv2' should be before 'from sunflower_interfaces.msg import TfliteResult'\x1b[0m\n"}
[10.286638] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tensor.py:7:1: I100 Import statements are in the wrong order. 'import numpy' should be before 'import tensorflow'\x1b[0m\n"}
[10.287155] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tensor.py:9:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[10.287847] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tensor.py:9:19: E203 whitespace before ':'\x1b[0m\n"}
[10.288420] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tensor.py:10:1: CNL100 Class definition does not have a new line.\x1b[0m\n'}
[10.288989] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tensor.py:20:46: E203 whitespace before ':'\x1b[0m\n"}
[10.289522] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tensor.py:41:9: F841 local variable 'data' is assigned to but never used\x1b[0m\n"}
[10.290044] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tensor.py:41:16: C408 Unnecessary list call - rewrite as a literal.\x1b[0m\n'}
[10.290631] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tensor.py:53:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[10.291409] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tensor.py:53:20: E203 whitespace before ':'\x1b[0m\n"}
[10.292068] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tensor.py:55:50: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[10.292569] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tensor.py:55:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[10.293063] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tensor.py:67:1: E305 expected 2 blank lines after class or function definition, found 1\x1b[0m\n'}
[10.293646] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tensor.py:67:26: E203 whitespace before ':'\x1b[0m\n"}
[10.294233] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tensor.py:70:1: E265 block comment should start with '# '\x1b[0m\n"}
[10.294745] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tensor.py:70:29: W292 no newline at end of file\x1b[0m\n'}
[10.295344] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tensor.py:70:29: W292 no newline at end of file\x1b[0m\n'}
[10.296007] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tensor.py:70:29: W292 no newline at end of file\x1b[0m\n'}
[10.296628] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:5:1: I100 Import statements are in the wrong order. 'from pynput import keyboard' should be before 'from std_msgs.msg import String'\x1b[0m\n"}
[10.297111] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:7:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[10.297589] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:7:19: E203 whitespace before ':'\x1b[0m\n"}
[10.298054] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:8:1: CNL100 Class definition does not have a new line.\x1b[0m\n'}
[10.298486] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:16:21: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[10.298910] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:16:23: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[10.299369] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:17:23: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[10.299877] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:17:25: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[10.300396] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:21:43: E203 whitespace before ':'\x1b[0m\n"}
[10.300833] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:29:1: B901 blind except: statement\x1b[0m\n'}
[10.301276] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:29:9: E722 do not use bare 'except'\x1b[0m\n"}
[10.301699] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:32:32: E203 whitespace before ':'\x1b[0m\n"}
[10.302221] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:37:17: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[10.302678] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:37:20: E203 whitespace before ':'\x1b[0m\n"}
[10.303197] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:38:17: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[10.303709] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:39:19: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[10.304222] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:39:22: E203 whitespace before ':'\x1b[0m\n"}
[10.304833] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:40:17: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[10.305346] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:41:19: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[10.305985] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:41:22: E203 whitespace before ':'\x1b[0m\n"}
[10.306544] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:42:17: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[10.307028] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:43:19: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[10.307628] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:43:22: E203 whitespace before ':'\x1b[0m\n"}
[10.308307] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:44:17: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[10.308901] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:45:19: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[10.309487] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:45:22: E203 whitespace before ':'\x1b[0m\n"}
[10.310064] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:46:17: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[10.310694] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:47:19: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[10.311415] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:47:22: E203 whitespace before ':'\x1b[0m\n"}
[10.312006] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:48:17: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[10.312566] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:49:13: E203 whitespace before ':'\x1b[0m\n"}
[10.313124] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:57:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[10.313763] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:57:20: E203 whitespace before ':'\x1b[0m\n"}
[10.314362] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:68:1: E305 expected 2 blank lines after class or function definition, found 1\x1b[0m\n'}
[10.314958] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:68:26: E203 whitespace before ':'\x1b[0m\n"}
[10.315652] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:69:11: W292 no newline at end of file\x1b[0m\n'}
[10.316266] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:5:1: I100 Import statements are in the wrong order. 'import cv2' should be before 'from std_msgs.msg import String'\x1b[0m\n"}
[10.316841] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:7:1: I100 Import statements are in the wrong order. 'import numpy' should be before 'import tensorflow'\x1b[0m\n"}
[10.317474] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:8:1: I100 Import statements are in the wrong order. 'import time' should be before 'import numpy' and in a different group.\x1b[0m\n"}
[10.318095] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:8:1: I201 Missing newline between import groups. 'import time' is identified as Stdlib and 'import numpy' is identified as Third Party.\x1b[0m\n"}
[10.319008] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:9:1: I201 Missing newline between import groups. 'import I2C_LCD_driver' is identified as Third Party and 'import time' is identified as Stdlib.\x1b[0m\n"}
[10.320045] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:12:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[10.320839] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:12:28: E203 whitespace before ':'\x1b[0m\n"}
[10.321432] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:13:1: CNL100 Class definition does not have a new line.\x1b[0m\n'}
[10.322003] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:17:34: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[10.322637] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:17:36: E231 missing whitespace after ','\x1b[0m\n"}
[10.323248] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:23:16: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[10.323921] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:23:19: E225 missing whitespace around operator\x1b[0m\n'}
[10.324447] (test_pkg) StdoutLine: {'line': b'test/test_copyright.py \x1b[32m.\x1b[0m\x1b[33m                                                 [ 33%]\x1b[0m\n'}
[10.324979] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:23:80: E225 missing whitespace around operator\x1b[0m\n'}
[10.325610] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:23:80: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[10.326195] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:25:34: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[10.326755] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:25:36: E231 missing whitespace after ','\x1b[0m\n"}
[10.327350] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:26:34: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[10.327937] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:26:43: E231 missing whitespace after ','\x1b[0m\n"}
[10.328547] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:31:50: E203 whitespace before ':'\x1b[0m\n"}
[10.329119] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:35:16: F821 undefined name 'now'\x1b[0m\n"}
[10.329628] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:35:44: E203 whitespace before ':'\x1b[0m\n"}
[10.330162] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:38:38: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[10.330787] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:38:40: E231 missing whitespace after ','\x1b[0m\n"}
[10.331404] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:39:61: E231 missing whitespace after ','\x1b[0m\n"}
[10.332029] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:56:20: C408 Unnecessary list call - rewrite as a literal.\x1b[0m\n'}
[10.332534] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:58:32: E203 whitespace before ':'\x1b[0m\n"}
[10.333106] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:60:44: C417 Unnecessary use of map - use a generator expression instead.\x1b[0m\n'}
[10.333824] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:60:56: E203 whitespace before ':'\x1b[0m\n"}
[10.334386] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:62:13: E115 expected an indented block (comment)\x1b[0m\n'}
[10.334847] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:66:13: E203 whitespace before ':'\x1b[0m\n"}
[10.335474] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:69:46: E203 whitespace before ':'\x1b[0m\n"}
[10.336106] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:90:16: C408 Unnecessary list call - rewrite as a literal.\x1b[0m\n'}
[10.336720] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:92:28: E203 whitespace before ':'\x1b[0m\n"}
[10.337304] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:95:20: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[10.337877] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:96:20: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[10.338390] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:100:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[10.338916] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:100:20: E203 whitespace before ':'\x1b[0m\n"}
[10.339796] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:102:50: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[10.340392] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:102:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[10.340958] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:116:1: E305 expected 2 blank lines after class or function definition, found 1\x1b[0m\n'}
[10.341508] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:116:26: E203 whitespace before ':'\x1b[0m\n"}
[10.342109] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:119:1: E265 block comment should start with '# '\x1b[0m\n"}
[10.343021] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:119:29: W292 no newline at end of file\x1b[0m\n'}
[10.343830] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:119:29: W292 no newline at end of file\x1b[0m\n'}
[10.344372] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:119:29: W292 no newline at end of file\x1b[0m\n'}
[10.344948] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[10.345611] (stem_pkg) StdoutLine: {'line': b'----------------------------- Captured stdout call -----------------------------\n'}
[10.346259] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.346862] (stem_pkg) StdoutLine: {'line': b"./setup.py:2:1: I100 Import statements are in the wrong order. 'import os' should be before 'from setuptools import setup' and in a different group.\n"}
[10.347467] (stem_pkg) StdoutLine: {'line': b'import os\n'}
[10.348006] (stem_pkg) StdoutLine: {'line': b'^\n'}
[10.348529] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.349025] (stem_pkg) StdoutLine: {'line': b"./setup.py:2:1: I201 Missing newline between import groups. 'import os' is identified as Stdlib and 'from setuptools import setup' is identified as Third Party.\n"}
[10.349507] (stem_pkg) StdoutLine: {'line': b'import os\n'}
[10.350069] (stem_pkg) StdoutLine: {'line': b'^\n'}
[10.350587] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.351110] (stem_pkg) StdoutLine: {'line': b"./setup.py:3:1: I100 Import statements are in the wrong order. 'from glob import glob' should be before 'import os'\n"}
[10.351826] (stem_pkg) StdoutLine: {'line': b'from glob import glob\n'}
[10.352552] (stem_pkg) StdoutLine: {'line': b'^\n'}
[10.353115] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.353666] (stem_pkg) StdoutLine: {'line': b'./setup.py:26:13: Q000 Double quotes found but single quotes preferred\n'}
[10.354394] (stem_pkg) StdoutLine: {'line': b'            "serial_talker=stem_pkg.serial_talker:main",\n'}
[10.355047] (stem_pkg) StdoutLine: {'line': b'            ^\n'}
[10.355682] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.356232] (stem_pkg) StdoutLine: {'line': b'./setup.py:27:13: Q000 Double quotes found but single quotes preferred\n'}
[10.356769] (stem_pkg) StdoutLine: {'line': b'            "cmd_selector=stem_pkg.cmd_selector:main",\n'}
[10.357413] (stem_pkg) StdoutLine: {'line': b'            ^\n'}
[10.357978] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.358599] (stem_pkg) StdoutLine: {'line': b'./setup.py:28:13: Q000 Double quotes found but single quotes preferred\n'}
[10.359193] (stem_pkg) StdoutLine: {'line': b'            "calculator=stem_pkg.calculator:main",\n'}
[10.359842] (stem_pkg) StdoutLine: {'line': b'            ^\n'}
[10.360403] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.360945] (stem_pkg) StdoutLine: {'line': b'./setup.py:29:13: Q000 Double quotes found but single quotes preferred\n'}
[10.361496] (stem_pkg) StdoutLine: {'line': b'            "tensor_publisher=stem_pkg.tensor_publisher:main",\n'}
[10.362027] (stem_pkg) StdoutLine: {'line': b'            ^\n'}
[10.362593] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.363190] (stem_pkg) StdoutLine: {'line': b'./setup.py:30:13: Q000 Double quotes found but single quotes preferred\n'}
[10.363799] (stem_pkg) StdoutLine: {'line': b'            "tensor=stem_pkg.tensor:main"\n'}
[10.364385] (stem_pkg) StdoutLine: {'line': b'            ^\n'}
[10.364955] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.365502] (stem_pkg) StdoutLine: {'line': b"./setup.py:31:13: E265 block comment should start with '# '\n"}
[10.366039] (stem_pkg) StdoutLine: {'line': b'            #"tester=stem_pkg.tester:main",\n'}
[10.366573] (stem_pkg) StdoutLine: {'line': b'            ^\n'}
[10.367074] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.367742] (stem_pkg) StdoutLine: {'line': b"./setup.py:32:13: E265 block comment should start with '# '\n"}
[10.368393] (stem_pkg) StdoutLine: {'line': b'            #"controller=stem_pkg.controller:main"\n'}
[10.368949] (stem_pkg) StdoutLine: {'line': b'            ^\n'}
[10.369500] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.370106] (stem_pkg) StdoutLine: {'line': b'./setup.py:35:2: W292 no newline at end of file\n'}
[10.370654] (stem_pkg) StdoutLine: {'line': b') ^\n'}
[10.371267] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.371884] (stem_pkg) StdoutLine: {'line': b'./launch/stem.launch.py:4:1: E302 expected 2 blank lines, found 1\n'}
[10.372509] (stem_pkg) StdoutLine: {'line': b'def generate_launch_description():\n'}
[10.373063] (stem_pkg) StdoutLine: {'line': b'^\n'}
[10.373584] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.374100] (stem_pkg) StdoutLine: {'line': b'./launch/stem.launch.py:10:20: E251 unexpected spaces around keyword / parameter equals\n'}
[10.374649] (stem_pkg) StdoutLine: {'line': b"            output= 'screen'),\n"}
[10.375155] (stem_pkg) StdoutLine: {'line': b'                   ^\n'}
[10.375740] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.376270] (stem_pkg) StdoutLine: {'line': b"./launch/stem.launch.py:20:32: E202 whitespace before ')'\n"}
[10.376843] (stem_pkg) StdoutLine: {'line': b"            name='cmd_selector' ),\n"}
[10.377364] (stem_pkg) StdoutLine: {'line': b'                               ^\n'}
[10.377918] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.378475] (stem_pkg) StdoutLine: {'line': b'./launch/stem.launch.py:26:20: E251 unexpected spaces around keyword / parameter equals\n'}
[10.378981] (stem_pkg) StdoutLine: {'line': b"            output= 'screen' )\n"}
[10.379546] (-) TimerEvent: {}
[10.380043] (stem_pkg) StdoutLine: {'line': b'                   ^\n'}
[10.381523] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.383217] (stem_pkg) StdoutLine: {'line': b"./launch/stem.launch.py:26:29: E202 whitespace before ')'\n"}
[10.383925] (stem_pkg) StdoutLine: {'line': b"            output= 'screen' )\n"}
[10.384491] (stem_pkg) StdoutLine: {'line': b'                            ^\n'}
[10.385107] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.385671] (stem_pkg) StdoutLine: {'line': b'./launch/stem.launch.py:27:7: W292 no newline at end of file\n'}
[10.386361] (stem_pkg) StdoutLine: {'line': b'    ])      ^\n'}
[10.386944] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.387642] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/serial_talker.py:5:1: I100 Import statements are in the wrong order. 'import serial' should be before 'from std_msgs.msg import String'\n"}
[10.388466] (stem_pkg) StdoutLine: {'line': b'import serial \n'}
[10.389009] (stem_pkg) StdoutLine: {'line': b'^\n'}
[10.389547] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.390118] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/serial_talker.py:5:14: W291 trailing whitespace\n'}
[10.390666] (stem_pkg) StdoutLine: {'line': b'import serial \n'}
[10.391144] (stem_pkg) StdoutLine: {'line': b'             ^\n'}
[10.391725] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.392356] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/serial_talker.py:11:5: E301 expected 1 blank line, found 0\n'}
[10.392958] (stem_pkg) StdoutLine: {'line': b'    def __init__(self):\n'}
[10.393523] (stem_pkg) StdoutLine: {'line': b'    ^\n'}
[10.394154] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.394692] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/serial_talker.py:19:32: Q000 Double quotes found but single quotes preferred\n'}
[10.395298] (stem_pkg) StdoutLine: {'line': b'        self.get_logger().info("Serial connection started")\n'}
[10.395890] (stem_pkg) StdoutLine: {'line': b'                               ^\n'}
[10.396440] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.396976] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/serial_talker.py:22:9: E265 block comment should start with '# '\n"}
[10.397522] (stem_pkg) StdoutLine: {'line': b'        #self.ser.write("^1*2*3*4*5*6*7*8*8".encode())\n'}
[10.398085] (stem_pkg) StdoutLine: {'line': b'        ^\n'}
[10.398637] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.399460] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/serial_talker.py:23:9: E265 block comment should start with '# '\n"}
[10.400142] (stem_pkg) StdoutLine: {'line': b"        #self.get_logger().info('Transmitted')\n"}
[10.400847] (stem_pkg) StdoutLine: {'line': b'        ^\n'}
[10.401614] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.402579] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/serial_talker.py:40:1: E305 expected 2 blank lines after class or function definition, found 1\n'}
[10.403548] (stem_pkg) StdoutLine: {'line': b"if __name__ == '__main__' :\n"}
[10.404451] (stem_pkg) StdoutLine: {'line': b'^\n'}
[10.405421] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.406474] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/serial_talker.py:40:26: E203 whitespace before ':'\n"}
[10.407429] (stem_pkg) StdoutLine: {'line': b"if __name__ == '__main__' :\n"}
[10.408289] (stem_pkg) StdoutLine: {'line': b'                         ^\n'}
[10.409344] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.410284] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/serial_talker.py:41:11: W292 no newline at end of file\n'}
[10.411244] (stem_pkg) StdoutLine: {'line': b'    main()          ^\n'}
[10.412093] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.413074] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:5:1: E402 module level import not at top of file\n'}
[10.414134] (stem_pkg) StdoutLine: {'line': b'import smbus\n'}
[10.415230] (stem_pkg) StdoutLine: {'line': b'^\n'}
[10.416093] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.419616] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:6:1: E402 module level import not at top of file\n'}
[10.422305] (stem_pkg) StdoutLine: {'line': b'from time import sleep\n'}
[10.424423] (stem_pkg) StdoutLine: {'line': b'^\n'}
[10.425421] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.426448] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/I2C_LCD_driver.py:6:1: I100 Import statements are in the wrong order. 'from time import sleep' should be before 'import smbus' and in a different group.\n"}
[10.427615] (stem_pkg) StdoutLine: {'line': b'from time import sleep\n'}
[10.428561] (stem_pkg) StdoutLine: {'line': b'^\n'}
[10.429439] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.430398] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/I2C_LCD_driver.py:6:1: I201 Missing newline between import groups. 'from time import sleep' is identified as Stdlib and 'import smbus' is identified as Third Party.\n"}
[10.431414] (stem_pkg) StdoutLine: {'line': b'from time import sleep\n'}
[10.432289] (stem_pkg) StdoutLine: {'line': b'^\n'}
[10.433140] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.434166] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:7:1: E302 expected 2 blank lines, found 0\n'}
[10.434749] (stem_pkg) StdoutLine: {'line': b'class i2c_device:\n'}
[10.435644] (stem_pkg) StdoutLine: {'line': b'^\n'}
[10.436377] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.437093] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:8:1: CNL100 Class definition does not have a new line.\n'}
[10.437832] (stem_pkg) StdoutLine: {'line': b'   def __init__(self, addr, port=I2CBUS):\n'}
[10.438582] (stem_pkg) StdoutLine: {'line': b'^\n'}
[10.439590] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.440578] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:8:4: E111 indentation is not a multiple of four\n'}
[10.441584] (stem_pkg) StdoutLine: {'line': b'   def __init__(self, addr, port=I2CBUS):\n'}
[10.443753] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[10.444821] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.445762] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:9:7: E111 indentation is not a multiple of four\n'}
[10.446698] (stem_pkg) StdoutLine: {'line': b'      self.addr = addr\n'}
[10.447658] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[10.448583] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.449493] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:10:7: E111 indentation is not a multiple of four\n'}
[10.450278] (stem_pkg) StdoutLine: {'line': b'      self.bus = smbus.SMBus(port)\n'}
[10.451064] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[10.452041] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.452996] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:12:4: E301 expected 1 blank line, found 0\n'}
[10.454017] (stem_pkg) StdoutLine: {'line': b'   def write_cmd(self, cmd):\n'}
[10.454945] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[10.455876] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.456846] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:12:4: E111 indentation is not a multiple of four\n'}
[10.457787] (stem_pkg) StdoutLine: {'line': b'   def write_cmd(self, cmd):\n'}
[10.458556] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[10.459399] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.460761] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:13:7: E111 indentation is not a multiple of four\n'}
[10.461724] (stem_pkg) StdoutLine: {'line': b'      self.bus.write_byte(self.addr, cmd)\n'}
[10.462423] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[10.463061] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.463953] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:14:7: E111 indentation is not a multiple of four\n'}
[10.464636] (stem_pkg) StdoutLine: {'line': b'      sleep(0.0001)\n'}
[10.465352] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[10.466017] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.466656] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:16:4: E301 expected 1 blank line, found 0\n'}
[10.467330] (stem_pkg) StdoutLine: {'line': b'   def write_cmd_arg(self, cmd, data):\n'}
[10.469676] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[10.470466] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.471303] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:16:4: E111 indentation is not a multiple of four\n'}
[10.473042] (stem_pkg) StdoutLine: {'line': b'   def write_cmd_arg(self, cmd, data):\n'}
[10.474749] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[10.476470] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.478373] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:17:7: E111 indentation is not a multiple of four\n'}
[10.480293] (-) TimerEvent: {}
[10.482628] (stem_pkg) StdoutLine: {'line': b'      self.bus.write_byte_data(self.addr, cmd, data)\n'}
[10.485309] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[10.487570] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.489535] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:18:7: E111 indentation is not a multiple of four\n'}
[10.491148] (stem_pkg) StdoutLine: {'line': b'      sleep(0.0001)\n'}
[10.493023] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[10.494593] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.496755] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:20:4: E301 expected 1 blank line, found 0\n'}
[10.498408] (stem_pkg) StdoutLine: {'line': b'   def write_block_data(self, cmd, data):\n'}
[10.499828] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[10.501536] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.503518] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:20:4: E111 indentation is not a multiple of four\n'}
[10.505390] (stem_pkg) StdoutLine: {'line': b'   def write_block_data(self, cmd, data):\n'}
[10.507381] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[10.509198] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.510677] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:21:7: E111 indentation is not a multiple of four\n'}
[10.512705] (stem_pkg) StdoutLine: {'line': b'      self.bus.write_block_data(self.addr, cmd, data)\n'}
[10.514113] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[10.515800] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.517623] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:22:7: E111 indentation is not a multiple of four\n'}
[10.519012] (stem_pkg) StdoutLine: {'line': b'      sleep(0.0001)\n'}
[10.521179] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[10.523275] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.525046] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:24:4: E301 expected 1 blank line, found 0\n'}
[10.526789] (stem_pkg) StdoutLine: {'line': b'   def read(self):\n'}
[10.529565] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[10.531342] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.533725] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:24:4: E111 indentation is not a multiple of four\n'}
[10.535409] (stem_pkg) StdoutLine: {'line': b'   def read(self):\n'}
[10.537781] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[10.541209] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.544087] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:25:7: E111 indentation is not a multiple of four\n'}
[10.545915] (stem_pkg) StdoutLine: {'line': b'      return self.bus.read_byte(self.addr)\n'}
[10.548214] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[10.549956] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.551876] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:27:4: E301 expected 1 blank line, found 0\n'}
[10.553866] (stem_pkg) StdoutLine: {'line': b'   def read_data(self, cmd):\n'}
[10.555960] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[10.557490] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.558981] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:27:4: E111 indentation is not a multiple of four\n'}
[10.560923] (stem_pkg) StdoutLine: {'line': b'   def read_data(self, cmd):\n'}
[10.562547] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[10.564648] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.566631] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:28:7: E111 indentation is not a multiple of four\n'}
[10.568700] (stem_pkg) StdoutLine: {'line': b'      return self.bus.read_byte_data(self.addr, cmd)\n'}
[10.570958] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[10.573049] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.575145] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:30:4: E301 expected 1 blank line, found 0\n'}
[10.576918] (stem_pkg) StdoutLine: {'line': b'   def read_block_data(self, cmd):\n'}
[10.578729] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[10.580571] (-) TimerEvent: {}
[10.582924] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.585452] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:30:4: E111 indentation is not a multiple of four\n'}
[10.587713] (stem_pkg) StdoutLine: {'line': b'   def read_block_data(self, cmd):\n'}
[10.590354] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[10.592194] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.594834] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:31:7: E111 indentation is not a multiple of four\n'}
[10.597509] (stem_pkg) StdoutLine: {'line': b'      return self.bus.read_block_data(self.addr, cmd)\n'}
[10.599685] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[10.601249] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.602918] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:33:1: E305 expected 2 blank lines after class or function definition, found 0\n'}
[10.604487] (stem_pkg) StdoutLine: {'line': b'LCD_CLEARDISPLAY = 0x01\n'}
[10.605350] (stem_pkg) StdoutLine: {'line': b'^\n'}
[10.606227] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.607033] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:68:16: E261 at least two spaces before inline comment\n'}
[10.608000] (stem_pkg) StdoutLine: {'line': b'En = 0b00000100 # Enable bit\n'}
[10.608779] (stem_pkg) StdoutLine: {'line': b'               ^\n'}
[10.609577] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.610703] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:69:16: E261 at least two spaces before inline comment\n'}
[10.611592] (stem_pkg) StdoutLine: {'line': b'Rw = 0b00000010 # Read/Write bit\n'}
[10.612713] (stem_pkg) StdoutLine: {'line': b'               ^\n'}
[10.613957] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.616251] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:70:16: E261 at least two spaces before inline comment\n'}
[10.619300] (stem_pkg) StdoutLine: {'line': b'Rs = 0b00000001 # Register select bit\n'}
[10.621368] (stem_pkg) StdoutLine: {'line': b'               ^\n'}
[10.623467] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.625610] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:71:1: E302 expected 2 blank lines, found 0\n'}
[10.626376] (stem_pkg) StdoutLine: {'line': b'class lcd:\n'}
[10.627131] (stem_pkg) StdoutLine: {'line': b'^\n'}
[10.628143] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.629268] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:72:4: E114 indentation is not a multiple of four (comment)\n'}
[10.631492] (stem_pkg) StdoutLine: {'line': b'   #initializes objects and lcd\n'}
[10.632313] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[10.632890] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.633457] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/I2C_LCD_driver.py:72:4: E265 block comment should start with '# '\n"}
[10.634056] (stem_pkg) StdoutLine: {'line': b'   #initializes objects and lcd\n'}
[10.634592] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[10.635153] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.635722] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:73:4: E111 indentation is not a multiple of four\n'}
[10.636254] (stem_pkg) StdoutLine: {'line': b'   def __init__(self):\n'}
[10.636817] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[10.637431] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.638080] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:74:7: E111 indentation is not a multiple of four\n'}
[10.638716] (stem_pkg) StdoutLine: {'line': b'      self.lcd_device = i2c_device(ADDRESS)\n'}
[10.639323] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[10.639991] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.640607] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:75:7: E111 indentation is not a multiple of four\n'}
[10.641217] (stem_pkg) StdoutLine: {'line': b'      self.lcd_write(0x03)\n'}
[10.641803] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[10.643297] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.645018] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:76:7: E111 indentation is not a multiple of four\n'}
[10.646395] (stem_pkg) StdoutLine: {'line': b'      self.lcd_write(0x03)\n'}
[10.646973] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[10.647583] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.648146] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:77:7: E111 indentation is not a multiple of four\n'}
[10.648666] (stem_pkg) StdoutLine: {'line': b'      self.lcd_write(0x03)\n'}
[10.652929] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[10.653758] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.654449] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:78:7: E111 indentation is not a multiple of four\n'}
[10.655028] (stem_pkg) StdoutLine: {'line': b'      self.lcd_write(0x02)\n'}
[10.655818] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[10.656545] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.657167] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:79:7: E111 indentation is not a multiple of four\n'}
[10.657810] (stem_pkg) StdoutLine: {'line': b'      self.lcd_write(LCD_FUNCTIONSET | LCD_2LINE | LCD_5x8DOTS | LCD_4BITMODE)\n'}
[10.658509] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[10.659118] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.659809] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:80:7: E111 indentation is not a multiple of four\n'}
[10.660334] (stem_pkg) StdoutLine: {'line': b'      self.lcd_write(LCD_DISPLAYCONTROL | LCD_DISPLAYON)\n'}
[10.660921] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[10.661545] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.662116] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:81:7: E111 indentation is not a multiple of four\n'}
[10.662603] (stem_pkg) StdoutLine: {'line': b'      self.lcd_write(LCD_CLEARDISPLAY)\n'}
[10.663213] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[10.663794] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.664358] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:82:7: E111 indentation is not a multiple of four\n'}
[10.664881] (stem_pkg) StdoutLine: {'line': b'      self.lcd_write(LCD_ENTRYMODESET | LCD_ENTRYLEFT)\n'}
[10.665409] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[10.666081] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.666776] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:83:7: E111 indentation is not a multiple of four\n'}
[10.667404] (stem_pkg) StdoutLine: {'line': b'      sleep(0.2)\n'}
[10.669925] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[10.670599] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.671123] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:84:4: E114 indentation is not a multiple of four (comment)\n'}
[10.671620] (stem_pkg) StdoutLine: {'line': b'   # clocks EN to latch command\n'}
[10.672039] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[10.672432] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.672807] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:85:4: E301 expected 1 blank line, found 0\n'}
[10.673233] (stem_pkg) StdoutLine: {'line': b'   def lcd_strobe(self, data):\n'}
[10.673611] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[10.673990] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.674366] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:85:4: E111 indentation is not a multiple of four\n'}
[10.674757] (stem_pkg) StdoutLine: {'line': b'   def lcd_strobe(self, data):\n'}
[10.675147] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[10.675625] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.676018] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:86:7: E111 indentation is not a multiple of four\n'}
[10.676406] (stem_pkg) StdoutLine: {'line': b'      self.lcd_device.write_cmd(data | En | LCD_BACKLIGHT)\n'}
[10.676795] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[10.677300] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.677872] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:87:7: E111 indentation is not a multiple of four\n'}
[10.678266] (stem_pkg) StdoutLine: {'line': b'      sleep(.0005)\n'}
[10.678706] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[10.679083] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.679546] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:88:7: E111 indentation is not a multiple of four\n'}
[10.680039] (stem_pkg) StdoutLine: {'line': b'      self.lcd_device.write_cmd(((data & ~En) | LCD_BACKLIGHT))\n'}
[10.680446] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[10.680787] (-) TimerEvent: {}
[10.681231] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.681851] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:89:7: E111 indentation is not a multiple of four\n'}
[10.682404] (stem_pkg) StdoutLine: {'line': b'      sleep(.0001)\n'}
[10.682921] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[10.683423] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.684032] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:90:4: E301 expected 1 blank line, found 0\n'}
[10.684703] (stem_pkg) StdoutLine: {'line': b'   def lcd_write_four_bits(self, data):\n'}
[10.685264] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[10.685827] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.686363] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:90:4: E111 indentation is not a multiple of four\n'}
[10.686951] (stem_pkg) StdoutLine: {'line': b'   def lcd_write_four_bits(self, data):\n'}
[10.687781] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[10.688334] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.688887] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:91:7: E111 indentation is not a multiple of four\n'}
[10.689381] (stem_pkg) StdoutLine: {'line': b'      self.lcd_device.write_cmd(data | LCD_BACKLIGHT)\n'}
[10.689943] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[10.690627] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.691113] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:92:7: E111 indentation is not a multiple of four\n'}
[10.691656] (stem_pkg) StdoutLine: {'line': b'      self.lcd_strobe(data)\n'}
[10.692097] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[10.692556] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.692959] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:93:4: E114 indentation is not a multiple of four (comment)\n'}
[10.693438] (stem_pkg) StdoutLine: {'line': b'   # write a command to lcd\n'}
[10.693935] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[10.694568] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.695106] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:94:4: E301 expected 1 blank line, found 0\n'}
[10.695649] (stem_pkg) StdoutLine: {'line': b'   def lcd_write(self, cmd, mode=0):\n'}
[10.696146] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[10.696557] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.696961] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:94:4: E111 indentation is not a multiple of four\n'}
[10.697364] (stem_pkg) StdoutLine: {'line': b'   def lcd_write(self, cmd, mode=0):\n'}
[10.697855] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[10.698251] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.698665] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:95:7: E111 indentation is not a multiple of four\n'}
[10.699113] (stem_pkg) StdoutLine: {'line': b'      self.lcd_write_four_bits(mode | (cmd & 0xF0))\n'}
[10.699685] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[10.700161] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.700680] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:96:7: E111 indentation is not a multiple of four\n'}
[10.701107] (stem_pkg) StdoutLine: {'line': b'      self.lcd_write_four_bits(mode | ((cmd << 4) & 0xF0))\n'}
[10.701563] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[10.702076] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.702608] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:97:4: E114 indentation is not a multiple of four (comment)\n'}
[10.703109] (stem_pkg) StdoutLine: {'line': b'   # write a character to lcd (or character rom) 0x09: backlight | RS=DR<\n'}
[10.703700] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[10.704283] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.704974] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:98:4: E114 indentation is not a multiple of four (comment)\n'}
[10.705484] (stem_pkg) StdoutLine: {'line': b'   # works!\n'}
[10.706075] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[10.706651] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.707256] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:99:4: E301 expected 1 blank line, found 0\n'}
[10.707858] (stem_pkg) StdoutLine: {'line': b'   def lcd_write_char(self, charvalue, mode=1):\n'}
[10.708382] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[10.708941] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.709528] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:99:4: E111 indentation is not a multiple of four\n'}
[10.709954] (stem_pkg) StdoutLine: {'line': b'   def lcd_write_char(self, charvalue, mode=1):\n'}
[10.710401] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[10.710922] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.711531] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:100:7: E111 indentation is not a multiple of four\n'}
[10.712049] (stem_pkg) StdoutLine: {'line': b'      self.lcd_write_four_bits(mode | (charvalue & 0xF0))\n'}
[10.712619] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[10.713120] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.713637] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:101:7: E111 indentation is not a multiple of four\n'}
[10.714113] (stem_pkg) StdoutLine: {'line': b'      self.lcd_write_four_bits(mode | ((charvalue << 4) & 0xF0))\n'}
[10.714631] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[10.715065] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.715716] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:102:1: W293 blank line contains whitespace\n'}
[10.716225] (stem_pkg) StdoutLine: {'line': b'  \n'}
[10.716733] (stem_pkg) StdoutLine: {'line': b'^\n'}
[10.717264] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.717776] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:103:4: E114 indentation is not a multiple of four (comment)\n'}
[10.718322] (stem_pkg) StdoutLine: {'line': b'   # put string function with optional char positioning\n'}
[10.718902] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[10.719469] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.720016] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:104:4: E111 indentation is not a multiple of four\n'}
[10.720564] (stem_pkg) StdoutLine: {'line': b'   def lcd_display_string(self, string, line=1, pos=0):\n'}
[10.721055] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[10.721561] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.722060] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:106:7: E111 indentation is not a multiple of four\n'}
[10.722539] (stem_pkg) StdoutLine: {'line': b'      pos_new = pos\n'}
[10.723090] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[10.723660] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.724160] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:108:7: E111 indentation is not a multiple of four\n'}
[10.724847] (stem_pkg) StdoutLine: {'line': b'      pos_new = 0x40 + pos\n'}
[10.725532] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[10.725972] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.726450] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:110:7: E111 indentation is not a multiple of four\n'}
[10.727033] (stem_pkg) StdoutLine: {'line': b'      pos_new = 0x14 + pos\n'}
[10.727668] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[10.728397] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.728976] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:112:7: E111 indentation is not a multiple of four\n'}
[10.729598] (stem_pkg) StdoutLine: {'line': b'      pos_new = 0x54 + pos\n'}
[10.730176] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[10.730816] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.731418] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:115:7: E111 indentation is not a multiple of four\n'}
[10.732042] (stem_pkg) StdoutLine: {'line': b'      self.lcd_write(ord(char), Rs)\n'}
[10.732695] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[10.733283] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.733834] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:116:4: E114 indentation is not a multiple of four (comment)\n'}
[10.734594] (stem_pkg) StdoutLine: {'line': b'   # clear lcd and set to home\n'}
[10.736051] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[10.737650] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.739445] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:117:4: E301 expected 1 blank line, found 0\n'}
[10.740555] (stem_pkg) StdoutLine: {'line': b'   def lcd_clear(self):\n'}
[10.741409] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[10.742300] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.742912] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:117:4: E111 indentation is not a multiple of four\n'}
[10.743595] (stem_pkg) StdoutLine: {'line': b'   def lcd_clear(self):\n'}
[10.744484] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[10.745311] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.746083] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:118:7: E111 indentation is not a multiple of four\n'}
[10.747006] (stem_pkg) StdoutLine: {'line': b'      self.lcd_write(LCD_CLEARDISPLAY)\n'}
[10.748075] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[10.748898] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.749638] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:119:7: E111 indentation is not a multiple of four\n'}
[10.750680] (stem_pkg) StdoutLine: {'line': b'      self.lcd_write(LCD_RETURNHOME)\n'}
[10.751618] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[10.752424] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.753254] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:120:4: E114 indentation is not a multiple of four (comment)\n'}
[10.754146] (stem_pkg) StdoutLine: {'line': b'   # define backlight on/off (lcd.backlight(1); off= lcd.backlight(0)\n'}
[10.755070] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[10.756703] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.758024] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:121:4: E301 expected 1 blank line, found 0\n'}
[10.759350] (stem_pkg) StdoutLine: {'line': b'   def backlight(self, state): # for state, 1 = on, 0 = off\n'}
[10.760635] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[10.762036] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.763342] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:121:4: E111 indentation is not a multiple of four\n'}
[10.764824] (stem_pkg) StdoutLine: {'line': b'   def backlight(self, state): # for state, 1 = on, 0 = off\n'}
[10.766104] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[10.767676] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.768877] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:121:31: E261 at least two spaces before inline comment\n'}
[10.770041] (stem_pkg) StdoutLine: {'line': b'   def backlight(self, state): # for state, 1 = on, 0 = off\n'}
[10.771382] (stem_pkg) StdoutLine: {'line': b'                              ^\n'}
[10.772632] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.773914] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:122:7: E111 indentation is not a multiple of four\n'}
[10.775283] (stem_pkg) StdoutLine: {'line': b'      if state == 1:\n'}
[10.776614] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[10.777933] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.779212] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:123:10: E111 indentation is not a multiple of four\n'}
[10.780720] (stem_pkg) StdoutLine: {'line': b'         self.lcd_device.write_cmd(LCD_BACKLIGHT)\n'}
[10.781907] (-) TimerEvent: {}
[10.782833] (stem_pkg) StdoutLine: {'line': b'         ^\n'}
[10.784200] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.785424] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:124:7: E111 indentation is not a multiple of four\n'}
[10.786567] (stem_pkg) StdoutLine: {'line': b'      elif state == 0:\n'}
[10.787877] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[10.789128] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.790019] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:125:10: E111 indentation is not a multiple of four\n'}
[10.790860] (stem_pkg) StdoutLine: {'line': b'         self.lcd_device.write_cmd(LCD_NOBACKLIGHT)\n'}
[10.791843] (stem_pkg) StdoutLine: {'line': b'         ^\n'}
[10.792986] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.794179] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:126:4: E114 indentation is not a multiple of four (comment)\n'}
[10.795369] (stem_pkg) StdoutLine: {'line': b'   # add custom characters (0 - 7)\n'}
[10.796637] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[10.797559] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.798501] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:127:4: E301 expected 1 blank line, found 0\n'}
[10.799632] (stem_pkg) StdoutLine: {'line': b'   def lcd_load_custom_chars(self, fontdata):\n'}
[10.800783] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[10.801780] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.802677] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:127:4: E111 indentation is not a multiple of four\n'}
[10.803653] (stem_pkg) StdoutLine: {'line': b'   def lcd_load_custom_chars(self, fontdata):\n'}
[10.804534] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[10.805448] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.806506] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:128:7: E111 indentation is not a multiple of four\n'}
[10.807796] (stem_pkg) StdoutLine: {'line': b'      self.lcd_write(0x40);\n'}
[10.809042] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[10.810318] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.811655] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:128:27: E703 statement ends with a semicolon\n'}
[10.812729] (stem_pkg) StdoutLine: {'line': b'      self.lcd_write(0x40);\n'}
[10.814129] (stem_pkg) StdoutLine: {'line': b'                          ^\n'}
[10.815635] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.816661] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:129:7: E111 indentation is not a multiple of four\n'}
[10.817496] (stem_pkg) StdoutLine: {'line': b'      for char in fontdata:\n'}
[10.818320] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[10.819205] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.820015] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:130:10: E111 indentation is not a multiple of four\n'}
[10.820991] (stem_pkg) StdoutLine: {'line': b'         for line in char:\n'}
[10.821813] (stem_pkg) StdoutLine: {'line': b'         ^\n'}
[10.822566] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.823362] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:131:41: W292 no newline at end of file\n'}
[10.824103] (stem_pkg) StdoutLine: {'line': b'            self.lcd_write_char(line)                                           ^\n'}
[10.825343] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.826499] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/controller.py:5:1: I100 Import statements are in the wrong order. 'import RPi.GPIO' should be before 'from std_msgs.msg import String'\n"}
[10.827686] (stem_pkg) StdoutLine: {'line': b'import RPi.GPIO as GPIO\n'}
[10.828891] (stem_pkg) StdoutLine: {'line': b'^\n'}
[10.830041] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.831280] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:7:1: E302 expected 2 blank lines, found 1\n'}
[10.832461] (stem_pkg) StdoutLine: {'line': b'class Controller(Node) :\n'}
[10.833714] (stem_pkg) StdoutLine: {'line': b'^\n'}
[10.835002] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.836378] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/controller.py:7:23: E203 whitespace before ':'\n"}
[10.837571] (stem_pkg) StdoutLine: {'line': b'class Controller(Node) :\n'}
[10.838824] (stem_pkg) StdoutLine: {'line': b'                      ^\n'}
[10.840274] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.841578] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:8:1: CNL100 Class definition does not have a new line.\n'}
[10.842804] (stem_pkg) StdoutLine: {'line': b'    def __init__(self):\n'}
[10.844286] (stem_pkg) StdoutLine: {'line': b'^\n'}
[10.845466] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.846662] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:15:1: W293 blank line contains whitespace\n'}
[10.848033] (stem_pkg) StdoutLine: {'line': b'        \n'}
[10.849407] (stem_pkg) StdoutLine: {'line': b'^\n'}
[10.850676] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.851908] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:19:60: E261 at least two spaces before inline comment\n'}
[10.853048] (stem_pkg) StdoutLine: {'line': b'        GPIO.setup(12, GPIO.IN, pull_up_down=GPIO.PUD_DOWN) #RED\n'}
[10.854046] (stem_pkg) StdoutLine: {'line': b'                                                           ^\n'}
[10.855669] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.856980] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/controller.py:19:61: E262 inline comment should start with '# '\n"}
[10.858024] (stem_pkg) StdoutLine: {'line': b'        GPIO.setup(12, GPIO.IN, pull_up_down=GPIO.PUD_DOWN) #RED\n'}
[10.859303] (stem_pkg) StdoutLine: {'line': b'                                                            ^\n'}
[10.860573] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.861556] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:20:60: E261 at least two spaces before inline comment\n'}
[10.862601] (stem_pkg) StdoutLine: {'line': b'        GPIO.setup(13, GPIO.IN, pull_up_down=GPIO.PUD_DOWN) #ORANGE\n'}
[10.864135] (stem_pkg) StdoutLine: {'line': b'                                                           ^\n'}
[10.865090] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.866067] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/controller.py:20:61: E262 inline comment should start with '# '\n"}
[10.867445] (stem_pkg) StdoutLine: {'line': b'        GPIO.setup(13, GPIO.IN, pull_up_down=GPIO.PUD_DOWN) #ORANGE\n'}
[10.868786] (stem_pkg) StdoutLine: {'line': b'                                                            ^\n'}
[10.870130] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.871293] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:22:60: E261 at least two spaces before inline comment\n'}
[10.872499] (stem_pkg) StdoutLine: {'line': b'        GPIO.setup(19, GPIO.IN, pull_up_down=GPIO.PUD_DOWN) #YELLOW\n'}
[10.873804] (stem_pkg) StdoutLine: {'line': b'                                                           ^\n'}
[10.875209] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.876728] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/controller.py:22:61: E262 inline comment should start with '# '\n"}
[10.877967] (stem_pkg) StdoutLine: {'line': b'        GPIO.setup(19, GPIO.IN, pull_up_down=GPIO.PUD_DOWN) #YELLOW\n'}
[10.879370] (stem_pkg) StdoutLine: {'line': b'                                                            ^\n'}
[10.880574] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.881723] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:23:60: E261 at least two spaces before inline comment\n'}
[10.882792] (-) TimerEvent: {}
[10.883882] (stem_pkg) StdoutLine: {'line': b'        GPIO.setup(16, GPIO.IN, pull_up_down=GPIO.PUD_DOWN) #GREEN\n'}
[10.885380] (stem_pkg) StdoutLine: {'line': b'                                                           ^\n'}
[10.886678] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.887612] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/controller.py:23:61: E262 inline comment should start with '# '\n"}
[10.888497] (stem_pkg) StdoutLine: {'line': b'        GPIO.setup(16, GPIO.IN, pull_up_down=GPIO.PUD_DOWN) #GREEN\n'}
[10.889386] (stem_pkg) StdoutLine: {'line': b'                                                            ^\n'}
[10.890599] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.891641] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:25:60: E261 at least two spaces before inline comment\n'}
[10.892671] (stem_pkg) StdoutLine: {'line': b'        GPIO.setup(20, GPIO.IN, pull_up_down=GPIO.PUD_DOWN) #BLUE\n'}
[10.893531] (stem_pkg) StdoutLine: {'line': b'                                                           ^\n'}
[10.894415] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.895559] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/controller.py:25:61: E262 inline comment should start with '# '\n"}
[10.896824] (stem_pkg) StdoutLine: {'line': b'        GPIO.setup(20, GPIO.IN, pull_up_down=GPIO.PUD_DOWN) #BLUE\n'}
[10.898099] (stem_pkg) StdoutLine: {'line': b'                                                            ^\n'}
[10.899211] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.900343] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:26:60: E261 at least two spaces before inline comment\n'}
[10.901432] (stem_pkg) StdoutLine: {'line': b'        GPIO.setup(26, GPIO.IN, pull_up_down=GPIO.PUD_DOWN) #VIOLET\n'}
[10.902852] (stem_pkg) StdoutLine: {'line': b'                                                           ^\n'}
[10.903874] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.904711] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/controller.py:26:61: E262 inline comment should start with '# '\n"}
[10.905427] (stem_pkg) StdoutLine: {'line': b'        GPIO.setup(26, GPIO.IN, pull_up_down=GPIO.PUD_DOWN) #VIOLET\n'}
[10.906168] (stem_pkg) StdoutLine: {'line': b'                                                            ^\n'}
[10.906874] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.907763] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:28:60: E261 at least two spaces before inline comment\n'}
[10.908557] (stem_pkg) StdoutLine: {'line': b'        GPIO.setup(21, GPIO.IN, pull_up_down=GPIO.PUD_DOWN) #BROWN\n'}
[10.909448] (stem_pkg) StdoutLine: {'line': b'                                                           ^\n'}
[10.910944] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.913029] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/controller.py:28:61: E262 inline comment should start with '# '\n"}
[10.914698] (stem_pkg) StdoutLine: {'line': b'        GPIO.setup(21, GPIO.IN, pull_up_down=GPIO.PUD_DOWN) #BROWN\n'}
[10.916200] (stem_pkg) StdoutLine: {'line': b'                                                            ^\n'}
[10.917272] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.918705] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/controller.py:30:9: E265 block comment should start with '# '\n"}
[10.920754] (stem_pkg) StdoutLine: {'line': b'        #GPIO.setup(17, GPIO.IN, GPIO.PUD_UP) #black toggle yellow\n'}
[10.923002] (stem_pkg) StdoutLine: {'line': b'        ^\n'}
[10.925253] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.927637] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/controller.py:31:9: E265 block comment should start with '# '\n"}
[10.929624] (stem_pkg) StdoutLine: {'line': b'        #GPIO.setup(18, GPIO.IN, GPIO.PUD_UP) #black toggle greeen\n'}
[10.931842] (stem_pkg) StdoutLine: {'line': b'        ^\n'}
[10.933651] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.935463] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:33:57: E251 unexpected spaces around keyword / parameter equals\n'}
[10.937243] (stem_pkg) StdoutLine: {'line': b'        GPIO.add_event_detect(12, GPIO.FALLING, callback = self.on_press, bouncetime=100)\n'}
[10.938718] (stem_pkg) StdoutLine: {'line': b'                                                        ^\n'}
[10.940533] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.942286] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:33:59: E251 unexpected spaces around keyword / parameter equals\n'}
[10.944150] (stem_pkg) StdoutLine: {'line': b'        GPIO.add_event_detect(12, GPIO.FALLING, callback = self.on_press, bouncetime=100)\n'}
[10.945825] (stem_pkg) StdoutLine: {'line': b'                                                          ^\n'}
[10.947504] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.949026] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:34:57: E251 unexpected spaces around keyword / parameter equals\n'}
[10.950635] (stem_pkg) StdoutLine: {'line': b'        GPIO.add_event_detect(13, GPIO.FALLING, callback = self.on_press, bouncetime=100)\n'}
[10.952229] (stem_pkg) StdoutLine: {'line': b'                                                        ^\n'}
[10.953979] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.955426] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:34:59: E251 unexpected spaces around keyword / parameter equals\n'}
[10.957247] (stem_pkg) StdoutLine: {'line': b'        GPIO.add_event_detect(13, GPIO.FALLING, callback = self.on_press, bouncetime=100)\n'}
[10.958798] (stem_pkg) StdoutLine: {'line': b'                                                          ^\n'}
[10.960281] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.961687] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:36:57: E251 unexpected spaces around keyword / parameter equals\n'}
[10.963126] (stem_pkg) StdoutLine: {'line': b'        GPIO.add_event_detect(19, GPIO.FALLING, callback = self.on_press, bouncetime=100)\n'}
[10.964769] (stem_pkg) StdoutLine: {'line': b'                                                        ^\n'}
[10.966893] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.968726] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:36:59: E251 unexpected spaces around keyword / parameter equals\n'}
[10.970354] (stem_pkg) StdoutLine: {'line': b'        GPIO.add_event_detect(19, GPIO.FALLING, callback = self.on_press, bouncetime=100)\n'}
[10.972022] (stem_pkg) StdoutLine: {'line': b'                                                          ^\n'}
[10.973347] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.974544] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:37:57: E251 unexpected spaces around keyword / parameter equals\n'}
[10.975770] (stem_pkg) StdoutLine: {'line': b'        GPIO.add_event_detect(16, GPIO.FALLING, callback = self.on_press, bouncetime=100)\n'}
[10.976992] (stem_pkg) StdoutLine: {'line': b'                                                        ^\n'}
[10.977928] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.978638] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:37:59: E251 unexpected spaces around keyword / parameter equals\n'}
[10.979353] (stem_pkg) StdoutLine: {'line': b'        GPIO.add_event_detect(16, GPIO.FALLING, callback = self.on_press, bouncetime=100)\n'}
[10.980064] (stem_pkg) StdoutLine: {'line': b'                                                          ^\n'}
[10.981044] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.981987] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:39:57: E251 unexpected spaces around keyword / parameter equals\n'}
[10.982712] (stem_pkg) StdoutLine: {'line': b'        GPIO.add_event_detect(20, GPIO.FALLING, callback = self.on_press, bouncetime=100)\n'}
[10.983411] (-) TimerEvent: {}
[10.984176] (stem_pkg) StdoutLine: {'line': b'                                                        ^\n'}
[10.985527] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.986607] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:39:59: E251 unexpected spaces around keyword / parameter equals\n'}
[10.987769] (stem_pkg) StdoutLine: {'line': b'        GPIO.add_event_detect(20, GPIO.FALLING, callback = self.on_press, bouncetime=100)\n'}
[10.988644] (stem_pkg) StdoutLine: {'line': b'                                                          ^\n'}
[10.989590] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.990830] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:40:57: E251 unexpected spaces around keyword / parameter equals\n'}
[10.992382] (stem_pkg) StdoutLine: {'line': b'        GPIO.add_event_detect(26, GPIO.FALLING, callback = self.on_press, bouncetime=100)\n'}
[10.993836] (stem_pkg) StdoutLine: {'line': b'                                                        ^\n'}
[10.995260] (stem_pkg) StdoutLine: {'line': b'\n'}
[10.996692] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:40:59: E251 unexpected spaces around keyword / parameter equals\n'}
[10.998151] (stem_pkg) StdoutLine: {'line': b'        GPIO.add_event_detect(26, GPIO.FALLING, callback = self.on_press, bouncetime=100)\n'}
[10.999822] (stem_pkg) StdoutLine: {'line': b'                                                          ^\n'}
[11.001250] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.002742] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:42:57: E251 unexpected spaces around keyword / parameter equals\n'}
[11.004174] (stem_pkg) StdoutLine: {'line': b'        GPIO.add_event_detect(21, GPIO.FALLING, callback = self.on_press, bouncetime=100)\n'}
[11.005571] (stem_pkg) StdoutLine: {'line': b'                                                        ^\n'}
[11.007316] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.008705] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:42:59: E251 unexpected spaces around keyword / parameter equals\n'}
[11.009980] (stem_pkg) StdoutLine: {'line': b'        GPIO.add_event_detect(21, GPIO.FALLING, callback = self.on_press, bouncetime=100)\n'}
[11.010943] (stem_pkg) StdoutLine: {'line': b'                                                          ^\n'}
[11.011864] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.012862] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/controller.py:46:9: E265 block comment should start with '# '\n"}
[11.013766] (stem_pkg) StdoutLine: {'line': b'        #GPIO.wait_for_edge(18, GPIO.RISING, bouncetime = 10)\n'}
[11.014659] (stem_pkg) StdoutLine: {'line': b'        ^\n'}
[11.015879] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.017082] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/controller.py:48:43: E203 whitespace before ':'\n"}
[11.018066] (stem_pkg) StdoutLine: {'line': b'    def publish_key_command_msg(self, msg) :\n'}
[11.018979] (stem_pkg) StdoutLine: {'line': b'                                          ^\n'}
[11.019989] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.021054] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/controller.py:55:32: E203 whitespace before ':'\n"}
[11.022148] (stem_pkg) StdoutLine: {'line': b'        if msg.data is not None :\n'}
[11.023421] (stem_pkg) StdoutLine: {'line': b'                               ^\n'}
[11.024419] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.025512] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/controller.py:60:19: E203 whitespace before ':'\n"}
[11.026476] (stem_pkg) StdoutLine: {'line': b'        if k == 12 :\n'}
[11.027494] (stem_pkg) StdoutLine: {'line': b'                  ^\n'}
[11.028466] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.029388] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:61:17: Q000 Double quotes found but single quotes preferred\n'}
[11.030496] (stem_pkg) StdoutLine: {'line': b'            c = "up"\n'}
[11.031543] (stem_pkg) StdoutLine: {'line': b'                ^\n'}
[11.032727] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.033898] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/controller.py:62:21: E203 whitespace before ':'\n"}
[11.034877] (stem_pkg) StdoutLine: {'line': b'        elif k == 13 :\n'}
[11.036039] (stem_pkg) StdoutLine: {'line': b'                    ^\n'}
[11.037115] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.038111] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:63:17: Q000 Double quotes found but single quotes preferred\n'}
[11.039420] (stem_pkg) StdoutLine: {'line': b'            c = "left"\n'}
[11.040793] (stem_pkg) StdoutLine: {'line': b'                ^\n'}
[11.042232] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.043603] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/controller.py:64:21: E203 whitespace before ':'\n"}
[11.045073] (stem_pkg) StdoutLine: {'line': b'        elif k == 19 :\n'}
[11.046440] (stem_pkg) StdoutLine: {'line': b'                    ^\n'}
[11.047788] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.049075] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:65:17: Q000 Double quotes found but single quotes preferred\n'}
[11.050411] (stem_pkg) StdoutLine: {'line': b'            c = "init"\n'}
[11.051743] (stem_pkg) StdoutLine: {'line': b'                ^\n'}
[11.052914] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.053811] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/controller.py:66:21: E203 whitespace before ':'\n"}
[11.054878] (stem_pkg) StdoutLine: {'line': b'        elif k == 16 :\n'}
[11.055831] (stem_pkg) StdoutLine: {'line': b'                    ^\n'}
[11.056743] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.057612] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:67:17: Q000 Double quotes found but single quotes preferred\n'}
[11.058469] (stem_pkg) StdoutLine: {'line': b'            c = "down"\n'}
[11.059208] (stem_pkg) StdoutLine: {'line': b'                ^\n'}
[11.059968] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.060703] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/controller.py:68:21: E203 whitespace before ':'\n"}
[11.061370] (stem_pkg) StdoutLine: {'line': b'        elif k == 20 :\n'}
[11.061999] (stem_pkg) StdoutLine: {'line': b'                    ^\n'}
[11.062653] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.063425] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:69:17: Q000 Double quotes found but single quotes preferred\n'}
[11.064213] (stem_pkg) StdoutLine: {'line': b'            c = "turn left"\n'}
[11.065080] (stem_pkg) StdoutLine: {'line': b'                ^\n'}
[11.065974] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.066865] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/controller.py:70:21: E203 whitespace before ':'\n"}
[11.067783] (stem_pkg) StdoutLine: {'line': b'        elif k == 26 :\n'}
[11.068693] (stem_pkg) StdoutLine: {'line': b'                    ^\n'}
[11.069480] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.070402] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:71:17: Q000 Double quotes found but single quotes preferred\n'}
[11.071401] (stem_pkg) StdoutLine: {'line': b'            c = "turn right"\n'}
[11.072183] (stem_pkg) StdoutLine: {'line': b'                ^\n'}
[11.072879] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.073731] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/controller.py:72:21: E203 whitespace before ':'\n"}
[11.074673] (stem_pkg) StdoutLine: {'line': b'        elif k == 21 :\n'}
[11.075698] (stem_pkg) StdoutLine: {'line': b'                    ^\n'}
[11.076538] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.077288] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:73:17: Q000 Double quotes found but single quotes preferred\n'}
[11.078055] (stem_pkg) StdoutLine: {'line': b'            c = "right"\n'}
[11.078856] (stem_pkg) StdoutLine: {'line': b'                ^\n'}
[11.080201] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.081044] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/controller.py:74:21: E203 whitespace before ':'\n"}
[11.081785] (stem_pkg) StdoutLine: {'line': b'        elif k == 18 :\n'}
[11.082541] (stem_pkg) StdoutLine: {'line': b'                    ^\n'}
[11.083237] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.083823] (-) TimerEvent: {}
[11.084372] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:75:17: Q000 Double quotes found but single quotes preferred\n'}
[11.085147] (stem_pkg) StdoutLine: {'line': b'            c = "True"\n'}
[11.085793] (stem_pkg) StdoutLine: {'line': b'                ^\n'}
[11.086492] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.087315] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/controller.py:76:21: E203 whitespace before ':'\n"}
[11.088187] (stem_pkg) StdoutLine: {'line': b'        elif k == 17 :\n'}
[11.089017] (stem_pkg) StdoutLine: {'line': b'                    ^\n'}
[11.089750] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.090570] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:77:17: Q000 Double quotes found but single quotes preferred\n'}
[11.091320] (stem_pkg) StdoutLine: {'line': b'            c = "False"\n'}
[11.092125] (stem_pkg) StdoutLine: {'line': b'                ^\n'}
[11.092846] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.093520] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/controller.py:78:13: E203 whitespace before ':'\n"}
[11.094243] (stem_pkg) StdoutLine: {'line': b'        else :\n'}
[11.094933] (stem_pkg) StdoutLine: {'line': b'            ^\n'}
[11.095701] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.096370] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/controller.py:83:20: E203 whitespace before ':'\n"}
[11.097045] (stem_pkg) StdoutLine: {'line': b'def main(args=None) :\n'}
[11.097710] (stem_pkg) StdoutLine: {'line': b'                   ^\n'}
[11.098463] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.099379] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:95:1: E305 expected 2 blank lines after class or function definition, found 1\n'}
[11.100211] (stem_pkg) StdoutLine: {'line': b"if __name__ == '__main__' :\n"}
[11.100857] (stem_pkg) StdoutLine: {'line': b'^\n'}
[11.101567] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.102289] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/controller.py:95:26: E203 whitespace before ':'\n"}
[11.103007] (stem_pkg) StdoutLine: {'line': b"if __name__ == '__main__' :\n"}
[11.103873] (stem_pkg) StdoutLine: {'line': b'                         ^\n'}
[11.104554] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.105257] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:96:11: W292 no newline at end of file\n'}
[11.106029] (stem_pkg) StdoutLine: {'line': b'    main()          ^\n'}
[11.106793] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.107577] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/async_serial_talker.py:5:1: I100 Import statements are in the wrong order. 'import asyncio' should be before 'from std_msgs.msg import String' and in a different group.\n"}
[11.108335] (stem_pkg) StdoutLine: {'line': b'import asyncio\n'}
[11.109074] (stem_pkg) StdoutLine: {'line': b'^\n'}
[11.109738] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.110738] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/async_serial_talker.py:5:1: I201 Missing newline between import groups. 'import asyncio' is identified as Stdlib and 'from std_msgs.msg import String' is identified as Third Party.\n"}
[11.111772] (stem_pkg) StdoutLine: {'line': b'import asyncio\n'}
[11.112586] (stem_pkg) StdoutLine: {'line': b'^\n'}
[11.113468] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.114087] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/async_serial_talker.py:6:1: I201 Missing newline between import groups. 'import serial_asyncio' is identified as Third Party and 'import asyncio' is identified as Stdlib.\n"}
[11.114727] (stem_pkg) StdoutLine: {'line': b'import serial_asyncio\n'}
[11.115450] (stem_pkg) StdoutLine: {'line': b'^\n'}
[11.116143] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.116871] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/async_serial_talker.py:11:5: E301 expected 1 blank line, found 0\n'}
[11.117485] (stem_pkg) StdoutLine: {'line': b'    def __init__(self):\n'}
[11.118103] (stem_pkg) StdoutLine: {'line': b'    ^\n'}
[11.118784] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.119569] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/async_serial_talker.py:20:32: Q000 Double quotes found but single quotes preferred\n'}
[11.120477] (stem_pkg) StdoutLine: {'line': b'        self.get_logger().info("Serial connection started")\n'}
[11.121265] (stem_pkg) StdoutLine: {'line': b'                               ^\n'}
[11.122016] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.122783] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/async_serial_talker.py:29:100: E501 line too long (102 > 99 characters)\n'}
[11.123549] (stem_pkg) StdoutLine: {'line': b'        _, writer = await serial_asyncio.open_serial_connection(url=self.SERIAL_PORT, baudrate=115200)\n'}
[11.124378] (stem_pkg) StdoutLine: {'line': b'                                                                                                   ^\n'}
[11.125020] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.125886] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/async_serial_talker.py:38:38: E203 whitespace before ':'\n"}
[11.127096] (stem_pkg) StdoutLine: {'line': b'    async def send(self, writer, msg) :\n'}
[11.129274] (stem_pkg) StdoutLine: {'line': b'                                     ^\n'}
[11.129765] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.130173] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/async_serial_talker.py:39:21: E203 whitespace before ':'\n"}
[11.130582] (stem_pkg) StdoutLine: {'line': b'        for c in msg :\n'}
[11.130973] (stem_pkg) StdoutLine: {'line': b'                    ^\n'}
[11.131457] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.131888] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/async_serial_talker.py:42:9: E265 block comment should start with '# '\n"}
[11.132285] (stem_pkg) StdoutLine: {'line': b"        #writer.write(b'_')\n"}
[11.132681] (stem_pkg) StdoutLine: {'line': b'        ^\n'}
[11.133191] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.133589] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/async_serial_talker.py:57:1: E305 expected 2 blank lines after class or function definition, found 1\n'}
[11.133987] (stem_pkg) StdoutLine: {'line': b"if __name__ == '__main__' :\n"}
[11.134382] (stem_pkg) StdoutLine: {'line': b'^\n'}
[11.134775] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.135213] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/async_serial_talker.py:57:26: E203 whitespace before ':'\n"}
[11.135621] (stem_pkg) StdoutLine: {'line': b"if __name__ == '__main__' :\n"}
[11.135992] (stem_pkg) StdoutLine: {'line': b'                         ^\n'}
[11.136408] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.136800] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/async_serial_talker.py:58:11: W292 no newline at end of file\n'}
[11.137192] (stem_pkg) StdoutLine: {'line': b'    main()          ^\n'}
[11.137594] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.138002] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/cmd_selector.py:6:1: E302 expected 2 blank lines, found 1\n'}
[11.138389] (stem_pkg) StdoutLine: {'line': b'class CommandSelector(Node):\n'}
[11.138760] (stem_pkg) StdoutLine: {'line': b'^\n'}
[11.139137] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.139620] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/cmd_selector.py:8:5: E301 expected 1 blank line, found 0\n'}
[11.140017] (stem_pkg) StdoutLine: {'line': b'    def __init__(self):\n'}
[11.140415] (stem_pkg) StdoutLine: {'line': b'    ^\n'}
[11.140805] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.141197] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/cmd_selector.py:44:1: E303 too many blank lines (3)\n'}
[11.141572] (stem_pkg) StdoutLine: {'line': b'def main(args=None):\n'}
[11.141994] (stem_pkg) StdoutLine: {'line': b'^\n'}
[11.142446] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.142899] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/cmd_selector.py:55:1: E305 expected 2 blank lines after class or function definition, found 1\n'}
[11.143550] (stem_pkg) StdoutLine: {'line': b"if __name__ == '__main__' :\n"}
[11.143983] (stem_pkg) StdoutLine: {'line': b'^\n'}
[11.144367] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.144747] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/cmd_selector.py:55:26: E203 whitespace before ':'\n"}
[11.145117] (stem_pkg) StdoutLine: {'line': b"if __name__ == '__main__' :\n"}
[11.145510] (stem_pkg) StdoutLine: {'line': b'                         ^\n'}
[11.145892] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.146361] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/cmd_selector.py:56:11: W292 no newline at end of file\n'}
[11.146860] (stem_pkg) StdoutLine: {'line': b'    main()          ^\n'}
[11.147288] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.147772] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/calculator.py:1:1: F401 'socket.NI_NUMERICHOST' imported but unused\n"}
[11.148209] (stem_pkg) StdoutLine: {'line': b'from socket import NI_NUMERICHOST\n'}
[11.148664] (stem_pkg) StdoutLine: {'line': b'^\n'}
[11.149095] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.149490] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/calculator.py:2:1: I201 Missing newline between import groups. 'import rclpy' is identified as Third Party and 'from socket import NI_NUMERICHOST' is identified as Stdlib.\n"}
[11.149878] (stem_pkg) StdoutLine: {'line': b'import rclpy\n'}
[11.150280] (stem_pkg) StdoutLine: {'line': b'^\n'}
[11.150656] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.151034] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/calculator.py:7:1: I100 Import statements are in the wrong order. 'import math' should be before 'from sunflower_interfaces.msg import TfliteResult' and in a different group.\n"}
[11.151498] (stem_pkg) StdoutLine: {'line': b'import math\n'}
[11.151898] (stem_pkg) StdoutLine: {'line': b'^\n'}
[11.152324] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.152756] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/calculator.py:7:1: I201 Missing newline between import groups. 'import math' is identified as Stdlib and 'from sunflower_interfaces.msg import TfliteResult' is identified as Third Party.\n"}
[11.153222] (stem_pkg) StdoutLine: {'line': b'import math\n'}
[11.153618] (stem_pkg) StdoutLine: {'line': b'^\n'}
[11.154014] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.154411] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/calculator.py:9:1: E302 expected 2 blank lines, found 1\n'}
[11.154799] (stem_pkg) StdoutLine: {'line': b'class Calculator(Node) :\n'}
[11.155222] (stem_pkg) StdoutLine: {'line': b'^\n'}
[11.155685] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.156077] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/calculator.py:9:23: E203 whitespace before ':'\n"}
[11.156481] (stem_pkg) StdoutLine: {'line': b'class Calculator(Node) :\n'}
[11.156898] (stem_pkg) StdoutLine: {'line': b'                      ^\n'}
[11.157283] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.157716] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/calculator.py:10:1: CNL100 Class definition does not have a new line.\n'}
[11.158112] (stem_pkg) StdoutLine: {'line': b'    def __init__(self):\n'}
[11.158485] (stem_pkg) StdoutLine: {'line': b'^\n'}
[11.158879] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.159311] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/calculator.py:23:35: E203 whitespace before ':'\n"}
[11.159727] (stem_pkg) StdoutLine: {'line': b'    def publish_command(self, cmd) :\n'}
[11.160138] (stem_pkg) StdoutLine: {'line': b'                                  ^\n'}
[11.160533] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.160911] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/calculator.py:31:30: Q000 Double quotes found but single quotes preferred\n'}
[11.161315] (stem_pkg) StdoutLine: {'line': b'        self.publish_command("".join(data))\n'}
[11.161695] (stem_pkg) StdoutLine: {'line': b'                             ^\n'}
[11.162092] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.162545] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/calculator.py:34:27: C417 Unnecessary use of map - use a generator expression instead.\n'}
[11.162934] (stem_pkg) StdoutLine: {'line': b'        n_x, n_y, n_con = map(lambda x: x, nose)\n'}
[11.163437] (stem_pkg) StdoutLine: {'line': b'                          ^\n'}
[11.163910] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.164330] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/calculator.py:35:27: C417 Unnecessary use of map - use a generator expression instead.\n'}
[11.164727] (stem_pkg) StdoutLine: {'line': b'        l_x, l_y, l_con = map(lambda x: x, eye_l)\n'}
[11.165128] (stem_pkg) StdoutLine: {'line': b'                          ^\n'}
[11.165533] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.165901] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/calculator.py:36:27: C417 Unnecessary use of map - use a generator expression instead.\n'}
[11.166292] (stem_pkg) StdoutLine: {'line': b'        r_x, r_y, r_con = map(lambda x: x, eye_r)\n'}
[11.166707] (stem_pkg) StdoutLine: {'line': b'                          ^\n'}
[11.167095] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.167622] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/calculator.py:62:1: W293 blank line contains whitespace\n'}
[11.168004] (stem_pkg) StdoutLine: {'line': b'    \n'}
[11.168390] (stem_pkg) StdoutLine: {'line': b'^\n'}
[11.168765] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.169145] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/calculator.py:65:10: E203 whitespace before ','\n"}
[11.169598] (stem_pkg) StdoutLine: {'line': b'        _ , nose_x, nose_confidence = map(lambda x: x, nose)\n'}
[11.170166] (stem_pkg) StdoutLine: {'line': b'         ^\n'}
[11.170580] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.171038] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/calculator.py:65:39: C417 Unnecessary use of map - use a generator expression instead.\n'}
[11.171521] (stem_pkg) StdoutLine: {'line': b'        _ , nose_x, nose_confidence = map(lambda x: x, nose)\n'}
[11.171921] (stem_pkg) StdoutLine: {'line': b'                                      ^\n'}
[11.172386] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.172807] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/calculator.py:83:1: E302 expected 2 blank lines, found 1\n'}
[11.173268] (stem_pkg) StdoutLine: {'line': b'def main(args=None) :\n'}
[11.173724] (stem_pkg) StdoutLine: {'line': b'^\n'}
[11.174144] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.174530] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/calculator.py:83:20: E203 whitespace before ':'\n"}
[11.174927] (stem_pkg) StdoutLine: {'line': b'def main(args=None) :\n'}
[11.175362] (stem_pkg) StdoutLine: {'line': b'                   ^\n'}
[11.175794] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.176182] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/calculator.py:94:1: E305 expected 2 blank lines after class or function definition, found 1\n'}
[11.176591] (stem_pkg) StdoutLine: {'line': b"if __name__ == '__main__' :\n"}
[11.177034] (stem_pkg) StdoutLine: {'line': b'^\n'}
[11.177418] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.177822] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/calculator.py:94:26: E203 whitespace before ':'\n"}
[11.178212] (stem_pkg) StdoutLine: {'line': b"if __name__ == '__main__' :\n"}
[11.178589] (stem_pkg) StdoutLine: {'line': b'                         ^\n'}
[11.178958] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.179486] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/calculator.py:95:11: W292 no newline at end of file\n'}
[11.180081] (stem_pkg) StdoutLine: {'line': b'    main()          ^\n'}
[11.180612] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.181072] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tensor.py:5:1: I100 Import statements are in the wrong order. 'import cv2' should be before 'from sunflower_interfaces.msg import TfliteResult'\n"}
[11.181557] (stem_pkg) StdoutLine: {'line': b'import cv2\n'}
[11.181930] (stem_pkg) StdoutLine: {'line': b'^\n'}
[11.182240] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.182541] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tensor.py:7:1: I100 Import statements are in the wrong order. 'import numpy' should be before 'import tensorflow'\n"}
[11.182849] (stem_pkg) StdoutLine: {'line': b'import numpy as np\n'}
[11.183232] (stem_pkg) StdoutLine: {'line': b'^\n'}
[11.183618] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.183945] (-) TimerEvent: {}
[11.184372] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tensor.py:9:1: E302 expected 2 blank lines, found 1\n'}
[11.184979] (stem_pkg) StdoutLine: {'line': b'class Tensor(Node) :\n'}
[11.185690] (stem_pkg) StdoutLine: {'line': b'^\n'}
[11.186330] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.186987] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tensor.py:9:19: E203 whitespace before ':'\n"}
[11.187677] (stem_pkg) StdoutLine: {'line': b'class Tensor(Node) :\n'}
[11.188271] (stem_pkg) StdoutLine: {'line': b'                  ^\n'}
[11.188793] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.189300] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tensor.py:10:1: CNL100 Class definition does not have a new line.\n'}
[11.189774] (stem_pkg) StdoutLine: {'line': b'    def __init__(self, interpreter, cap):\n'}
[11.190248] (stem_pkg) StdoutLine: {'line': b'^\n'}
[11.190628] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.191033] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tensor.py:20:46: E203 whitespace before ':'\n"}
[11.191677] (stem_pkg) StdoutLine: {'line': b'    def tensor_result(self, interpreter, cap) :\n'}
[11.192128] (stem_pkg) StdoutLine: {'line': b'                                             ^\n'}
[11.192535] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.192999] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tensor.py:41:9: F841 local variable 'data' is assigned to but never used\n"}
[11.193485] (stem_pkg) StdoutLine: {'line': b'        data = list()\n'}
[11.193900] (stem_pkg) StdoutLine: {'line': b'        ^\n'}
[11.194222] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.194594] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tensor.py:41:16: C408 Unnecessary list call - rewrite as a literal.\n'}
[11.195072] (stem_pkg) StdoutLine: {'line': b'        data = list()\n'}
[11.195620] (stem_pkg) StdoutLine: {'line': b'               ^\n'}
[11.196049] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.196715] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tensor.py:53:1: E302 expected 2 blank lines, found 1\n'}
[11.197217] (stem_pkg) StdoutLine: {'line': b'def main(args=None) :\n'}
[11.197703] (stem_pkg) StdoutLine: {'line': b'^\n'}
[11.198167] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.198576] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tensor.py:53:20: E203 whitespace before ':'\n"}
[11.198998] (stem_pkg) StdoutLine: {'line': b'def main(args=None) :\n'}
[11.199499] (stem_pkg) StdoutLine: {'line': b'                   ^\n'}
[11.199918] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.200359] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tensor.py:55:50: Q000 Double quotes found but single quotes preferred\n'}
[11.200804] (stem_pkg) StdoutLine: {'line': b'    interpreter = tf.lite.Interpreter(model_path="lite-model_movenet_singlepose_lightning_3.tflite")\n'}
[11.201203] (stem_pkg) StdoutLine: {'line': b'                                                 ^\n'}
[11.201636] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.202029] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tensor.py:55:100: E501 line too long (100 > 99 characters)\n'}
[11.202503] (stem_pkg) StdoutLine: {'line': b'    interpreter = tf.lite.Interpreter(model_path="lite-model_movenet_singlepose_lightning_3.tflite")\n'}
[11.202924] (stem_pkg) StdoutLine: {'line': b'                                                                                                   ^\n'}
[11.203385] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.203822] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tensor.py:67:1: E305 expected 2 blank lines after class or function definition, found 1\n'}
[11.204220] (stem_pkg) StdoutLine: {'line': b"if __name__ == '__main__' :\n"}
[11.204726] (stem_pkg) StdoutLine: {'line': b'^\n'}
[11.205590] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.206562] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tensor.py:67:26: E203 whitespace before ':'\n"}
[11.207512] (stem_pkg) StdoutLine: {'line': b"if __name__ == '__main__' :\n"}
[11.208294] (stem_pkg) StdoutLine: {'line': b'                         ^\n'}
[11.208816] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.209229] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tensor.py:70:1: E265 block comment should start with '# '\n"}
[11.209617] (stem_pkg) StdoutLine: {'line': b'#\xec\xbd\x94, \xec\x99\xbc\xeb\x88\x88, \xec\x98\xa4\xeb\x88\x88, \xec\x99\xbc\xea\xb7\x80, \xec\x98\xa4\xea\xb7\x80, \xec\x99\xbc\xec\x96\xb4\xea\xb9\xa8, \xec\x98\xa4\xec\x96\xb4\xea\xb9\xa8^\n'}
[11.210025] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.210421] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tensor.py:70:29: W292 no newline at end of file\n'}
[11.210804] (stem_pkg) StdoutLine: {'line': b'#\xec\xbd\x94, \xec\x99\xbc\xeb\x88\x88, \xec\x98\xa4\xeb\x88\x88, \xec\x99\xbc\xea\xb7\x80, \xec\x98\xa4\xea\xb7\x80, \xec\x99\xbc\xec\x96\xb4\xea\xb9\xa8, \xec\x98\xa4\xec\x96\xb4\xea\xb9\xa8                            ^\n'}
[11.211379] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.211879] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tensor.py:70:29: W292 no newline at end of file\n'}
[11.212341] (stem_pkg) StdoutLine: {'line': b'#\xec\xbd\x94, \xec\x99\xbc\xeb\x88\x88, \xec\x98\xa4\xeb\x88\x88, \xec\x99\xbc\xea\xb7\x80, \xec\x98\xa4\xea\xb7\x80, \xec\x99\xbc\xec\x96\xb4\xea\xb9\xa8, \xec\x98\xa4\xec\x96\xb4\xea\xb9\xa8                            ^\n'}
[11.212822] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.213155] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tensor.py:70:29: W292 no newline at end of file\n'}
[11.213463] (stem_pkg) StdoutLine: {'line': b'#\xec\xbd\x94, \xec\x99\xbc\xeb\x88\x88, \xec\x98\xa4\xeb\x88\x88, \xec\x99\xbc\xea\xb7\x80, \xec\x98\xa4\xea\xb7\x80, \xec\x99\xbc\xec\x96\xb4\xea\xb9\xa8, \xec\x98\xa4\xec\x96\xb4\xea\xb9\xa8                            ^\n'}
[11.213812] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.214174] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tester.py:5:1: I100 Import statements are in the wrong order. 'from pynput import keyboard' should be before 'from std_msgs.msg import String'\n"}
[11.214567] (stem_pkg) StdoutLine: {'line': b'from pynput import keyboard\n'}
[11.214981] (stem_pkg) StdoutLine: {'line': b'^\n'}
[11.215467] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.215957] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tester.py:7:1: E302 expected 2 blank lines, found 1\n'}
[11.216378] (stem_pkg) StdoutLine: {'line': b'class Tester(Node) :\n'}
[11.216762] (stem_pkg) StdoutLine: {'line': b'^\n'}
[11.217137] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.217499] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tester.py:7:19: E203 whitespace before ':'\n"}
[11.217877] (stem_pkg) StdoutLine: {'line': b'class Tester(Node) :\n'}
[11.218244] (stem_pkg) StdoutLine: {'line': b'                  ^\n'}
[11.218606] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.218976] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tester.py:8:1: CNL100 Class definition does not have a new line.\n'}
[11.219407] (stem_pkg) StdoutLine: {'line': b'    def __init__(self):\n'}
[11.219862] (stem_pkg) StdoutLine: {'line': b'^\n'}
[11.220277] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.220678] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tester.py:16:21: E251 unexpected spaces around keyword / parameter equals\n'}
[11.221165] (stem_pkg) StdoutLine: {'line': b'            on_press = self.on_press,\n'}
[11.221551] (stem_pkg) StdoutLine: {'line': b'                    ^\n'}
[11.221927] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.222322] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tester.py:16:23: E251 unexpected spaces around keyword / parameter equals\n'}
[11.222693] (stem_pkg) StdoutLine: {'line': b'            on_press = self.on_press,\n'}
[11.223133] (stem_pkg) StdoutLine: {'line': b'                      ^\n'}
[11.223625] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.224033] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tester.py:17:23: E251 unexpected spaces around keyword / parameter equals\n'}
[11.224438] (stem_pkg) StdoutLine: {'line': b'            on_release = self.on_release)\n'}
[11.224834] (stem_pkg) StdoutLine: {'line': b'                      ^\n'}
[11.225208] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.225603] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tester.py:17:25: E251 unexpected spaces around keyword / parameter equals\n'}
[11.226041] (stem_pkg) StdoutLine: {'line': b'            on_release = self.on_release)\n'}
[11.226423] (stem_pkg) StdoutLine: {'line': b'                        ^\n'}
[11.226833] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.227280] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tester.py:21:43: E203 whitespace before ':'\n"}
[11.227814] (stem_pkg) StdoutLine: {'line': b'    def publish_key_command_msg(self, msg) :\n'}
[11.228248] (stem_pkg) StdoutLine: {'line': b'                                          ^\n'}
[11.228665] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.229058] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tester.py:29:1: B901 blind except: statement\n'}
[11.229459] (stem_pkg) StdoutLine: {'line': b'        except:\n'}
[11.229874] (stem_pkg) StdoutLine: {'line': b'^\n'}
[11.230274] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.230671] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tester.py:29:9: E722 do not use bare 'except'\n"}
[11.231126] (stem_pkg) StdoutLine: {'line': b'        except:\n'}
[11.231610] (stem_pkg) StdoutLine: {'line': b'        ^\n'}
[11.232044] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.232451] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tester.py:32:32: E203 whitespace before ':'\n"}
[11.232864] (stem_pkg) StdoutLine: {'line': b'        if msg.data is not None :\n'}
[11.233267] (stem_pkg) StdoutLine: {'line': b'                               ^\n'}
[11.233679] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.234080] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tester.py:37:17: Q000 Double quotes found but single quotes preferred\n'}
[11.234482] (stem_pkg) StdoutLine: {'line': b'        if k == "w" :\n'}
[11.234889] (stem_pkg) StdoutLine: {'line': b'                ^\n'}
[11.235359] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.235842] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tester.py:37:20: E203 whitespace before ':'\n"}
[11.236325] (stem_pkg) StdoutLine: {'line': b'        if k == "w" :\n'}
[11.236828] (stem_pkg) StdoutLine: {'line': b'                   ^\n'}
[11.237246] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.237707] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tester.py:38:17: Q000 Double quotes found but single quotes preferred\n'}
[11.238088] (stem_pkg) StdoutLine: {'line': b'            c = "up"\n'}
[11.238408] (stem_pkg) StdoutLine: {'line': b'                ^\n'}
[11.238755] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.239129] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tester.py:39:19: Q000 Double quotes found but single quotes preferred\n'}
[11.239580] (stem_pkg) StdoutLine: {'line': b'        elif k == "s" :\n'}
[11.239959] (stem_pkg) StdoutLine: {'line': b'                  ^\n'}
[11.240364] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.240816] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tester.py:39:22: E203 whitespace before ':'\n"}
[11.241236] (stem_pkg) StdoutLine: {'line': b'        elif k == "s" :\n'}
[11.241640] (stem_pkg) StdoutLine: {'line': b'                     ^\n'}
[11.242037] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.242442] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tester.py:40:17: Q000 Double quotes found but single quotes preferred\n'}
[11.242850] (stem_pkg) StdoutLine: {'line': b'            c = "down"\n'}
[11.243281] (stem_pkg) StdoutLine: {'line': b'                ^\n'}
[11.243722] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.244159] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tester.py:41:19: Q000 Double quotes found but single quotes preferred\n'}
[11.244571] (stem_pkg) StdoutLine: {'line': b'        elif k == "a" :\n'}
[11.244974] (stem_pkg) StdoutLine: {'line': b'                  ^\n'}
[11.245391] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.245855] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tester.py:41:22: E203 whitespace before ':'\n"}
[11.246262] (stem_pkg) StdoutLine: {'line': b'        elif k == "a" :\n'}
[11.246647] (stem_pkg) StdoutLine: {'line': b'                     ^\n'}
[11.247021] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.247507] (stem_pkg) StderrLine: {'line': b'\x1b[33m=============================== warnings summary ===============================\x1b[0m\n'}
[11.248019] (stem_pkg) StderrLine: {'line': b'../../../.local/lib/python3.8/site-packages/_pytest/nodes.py:633\n'}
[11.248404] (stem_pkg) StderrLine: {'line': b'  Warning: The (fspath: py.path.local) argument to Package is deprecated. Please use the (path: pathlib.Path) argument instead.\n'}
[11.248731] (stem_pkg) StderrLine: {'line': b'  See https://docs.pytest.org/en/latest/deprecations.html#fspath-argument-for-node-constructors-replaced-with-pathlib-path\n'}
[11.249140] (stem_pkg) StderrLine: {'line': b'\n'}
[11.249531] (stem_pkg) StderrLine: {'line': b'../../../../../opt/ros/foxy/lib/python3.8/site-packages/launch_testing/pytest/hooks.py:179\n'}
[11.249899] (stem_pkg) StderrLine: {'line': b'../../../../../opt/ros/foxy/lib/python3.8/site-packages/launch_testing/pytest/hooks.py:179\n'}
[11.250274] (stem_pkg) StderrLine: {'line': b'../../../../../opt/ros/foxy/lib/python3.8/site-packages/launch_testing/pytest/hooks.py:179\n'}
[11.250722] (stem_pkg) StderrLine: {'line': b'  Warning: The (fspath: py.path.local) argument to Module is deprecated. Please use the (path: pathlib.Path) argument instead.\n'}
[11.251128] (stem_pkg) StderrLine: {'line': b'  See https://docs.pytest.org/en/latest/deprecations.html#fspath-argument-for-node-constructors-replaced-with-pathlib-path\n'}
[11.251583] (stem_pkg) StderrLine: {'line': b'\n'}
[11.251983] (stem_pkg) StderrLine: {'line': b'../../../../../usr/lib/python3/dist-packages/pydocstyle/config.py:6\n'}
[11.252379] (stem_pkg) StderrLine: {'line': b"  Warning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3, and in 3.10 it will stop working\n"}
[11.252745] (stem_pkg) StderrLine: {'line': b'\n'}
[11.253118] (stem_pkg) StderrLine: {'line': b'-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n'}
[11.253523] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tester.py:42:17: Q000 Double quotes found but single quotes preferred\n'}
[11.253938] (stem_pkg) StdoutLine: {'line': b'            c = "left"\n'}
[11.254398] (stem_pkg) StdoutLine: {'line': b'                ^\n'}
[11.254872] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.255364] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tester.py:43:19: Q000 Double quotes found but single quotes preferred\n'}
[11.255801] (stem_pkg) StdoutLine: {'line': b'        elif k == "d" :\n'}
[11.256202] (stem_pkg) StdoutLine: {'line': b'                  ^\n'}
[11.256615] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.257015] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tester.py:43:22: E203 whitespace before ':'\n"}
[11.257414] (stem_pkg) StdoutLine: {'line': b'        elif k == "d" :\n'}
[11.257820] (stem_pkg) StdoutLine: {'line': b'                     ^\n'}
[11.258230] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.258673] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tester.py:44:17: Q000 Double quotes found but single quotes preferred\n'}
[11.259077] (stem_pkg) StdoutLine: {'line': b'            c = "right"\n'}
[11.259562] (stem_pkg) StdoutLine: {'line': b'                ^\n'}
[11.259988] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.260454] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tester.py:45:19: Q000 Double quotes found but single quotes preferred\n'}
[11.260873] (stem_pkg) StdoutLine: {'line': b'        elif k == "," :\n'}
[11.261270] (stem_pkg) StdoutLine: {'line': b'                  ^\n'}
[11.261662] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.261998] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tester.py:45:22: E203 whitespace before ':'\n"}
[11.262340] (stem_pkg) StdoutLine: {'line': b'        elif k == "," :\n'}
[11.262732] (stem_pkg) StdoutLine: {'line': b'                     ^\n'}
[11.263113] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.263552] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tester.py:46:17: Q000 Double quotes found but single quotes preferred\n'}
[11.263968] (stem_pkg) StdoutLine: {'line': b'            c = "turn left"\n'}
[11.264384] (stem_pkg) StdoutLine: {'line': b'                ^\n'}
[11.264786] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.265300] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tester.py:47:19: Q000 Double quotes found but single quotes preferred\n'}
[11.265730] (stem_pkg) StdoutLine: {'line': b'        elif k == "." :\n'}
[11.266114] (stem_pkg) StdoutLine: {'line': b'                  ^\n'}
[11.266500] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.266909] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tester.py:47:22: E203 whitespace before ':'\n"}
[11.267373] (stem_pkg) StdoutLine: {'line': b'        elif k == "." :\n'}
[11.267806] (stem_pkg) StdoutLine: {'line': b'                     ^\n'}
[11.268195] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.268593] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tester.py:48:17: Q000 Double quotes found but single quotes preferred\n'}
[11.269003] (stem_pkg) StdoutLine: {'line': b'            c = "turn right"\n'}
[11.269385] (stem_pkg) StdoutLine: {'line': b'                ^\n'}
[11.269780] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.270207] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tester.py:49:13: E203 whitespace before ':'\n"}
[11.270601] (stem_pkg) StdoutLine: {'line': b'        else :\n'}
[11.270997] (stem_pkg) StdoutLine: {'line': b'            ^\n'}
[11.271416] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.274722] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tester.py:57:1: E302 expected 2 blank lines, found 1\n'}
[11.275352] (stem_pkg) StdoutLine: {'line': b'def main(args=None) :\n'}
[11.275830] (stem_pkg) StdoutLine: {'line': b'^\n'}
[11.276195] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.276615] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tester.py:57:20: E203 whitespace before ':'\n"}
[11.277070] (stem_pkg) StdoutLine: {'line': b'def main(args=None) :\n'}
[11.277562] (stem_pkg) StdoutLine: {'line': b'                   ^\n'}
[11.277985] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.278415] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tester.py:68:1: E305 expected 2 blank lines after class or function definition, found 1\n'}
[11.278982] (stem_pkg) StdoutLine: {'line': b"if __name__ == '__main__' :\n"}
[11.279557] (stem_pkg) StdoutLine: {'line': b'^\n'}
[11.280042] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.280461] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tester.py:68:26: E203 whitespace before ':'\n"}
[11.280866] (stem_pkg) StdoutLine: {'line': b"if __name__ == '__main__' :\n"}
[11.281274] (stem_pkg) StdoutLine: {'line': b'                         ^\n'}
[11.281666] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.282066] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tester.py:69:11: W292 no newline at end of file\n'}
[11.282471] (stem_pkg) StdoutLine: {'line': b'    main()          ^\n'}
[11.282872] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.283321] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tensor_publisher.py:5:1: I100 Import statements are in the wrong order. 'import cv2' should be before 'from std_msgs.msg import String'\n"}
[11.283768] (stem_pkg) StdoutLine: {'line': b'import cv2\n'}
[11.284153] (-) TimerEvent: {}
[11.284562] (stem_pkg) StdoutLine: {'line': b'^\n'}
[11.285215] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.285760] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tensor_publisher.py:7:1: I100 Import statements are in the wrong order. 'import numpy' should be before 'import tensorflow'\n"}
[11.286238] (stem_pkg) StdoutLine: {'line': b'import numpy as np\n'}
[11.286668] (stem_pkg) StdoutLine: {'line': b'^\n'}
[11.287225] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.287849] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tensor_publisher.py:8:1: I100 Import statements are in the wrong order. 'import time' should be before 'import numpy' and in a different group.\n"}
[11.288318] (stem_pkg) StdoutLine: {'line': b'import time\n'}
[11.288670] (stem_pkg) StdoutLine: {'line': b'^\n'}
[11.289069] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.289529] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tensor_publisher.py:8:1: I201 Missing newline between import groups. 'import time' is identified as Stdlib and 'import numpy' is identified as Third Party.\n"}
[11.290000] (stem_pkg) StdoutLine: {'line': b'import time\n'}
[11.290365] (stem_pkg) StdoutLine: {'line': b'^\n'}
[11.290730] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.291246] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tensor_publisher.py:9:1: I201 Missing newline between import groups. 'import I2C_LCD_driver' is identified as Third Party and 'import time' is identified as Stdlib.\n"}
[11.291823] (stem_pkg) StdoutLine: {'line': b'import I2C_LCD_driver\n'}
[11.292181] (stem_pkg) StdoutLine: {'line': b'^\n'}
[11.292549] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.292988] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tensor_publisher.py:12:1: E302 expected 2 blank lines, found 1\n'}
[11.293362] (stem_pkg) StdoutLine: {'line': b'class TensorPublisher(Node) :\n'}
[11.293741] (stem_pkg) StdoutLine: {'line': b'^\n'}
[11.294152] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.294615] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tensor_publisher.py:12:28: E203 whitespace before ':'\n"}
[11.295030] (stem_pkg) StdoutLine: {'line': b'class TensorPublisher(Node) :\n'}
[11.295537] (stem_pkg) StdoutLine: {'line': b'                           ^\n'}
[11.295961] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.296336] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tensor_publisher.py:13:1: CNL100 Class definition does not have a new line.\n'}
[11.296670] (stem_pkg) StdoutLine: {'line': b'    def __init__(self, interpreter, cap, mylcd):\n'}
[11.297011] (stem_pkg) StdoutLine: {'line': b'^\n'}
[11.297399] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.297832] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tensor_publisher.py:17:34: Q000 Double quotes found but single quotes preferred\n'}
[11.298237] (stem_pkg) StdoutLine: {'line': b'        mylcd.lcd_display_string("",2)\n'}
[11.298637] (stem_pkg) StdoutLine: {'line': b'                                 ^\n'}
[11.299046] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.299576] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tensor_publisher.py:17:36: E231 missing whitespace after ','\n"}
[11.300013] (stem_pkg) StdoutLine: {'line': b'        mylcd.lcd_display_string("",2)\n'}
[11.300476] (stem_pkg) StdoutLine: {'line': b'                                   ^\n'}
[11.300872] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.301251] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tensor_publisher.py:23:16: Q000 Double quotes found but single quotes preferred\n'}
[11.301649] (stem_pkg) StdoutLine: {'line': b'        data = "!"+ \'{0:0^3}\'.format(f\'{small}\') + \'{0:0^3}\'.format(f\'{big}\') +"!"\n'}
[11.302054] (stem_pkg) StdoutLine: {'line': b'               ^\n'}
[11.302450] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.302843] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tensor_publisher.py:23:19: E225 missing whitespace around operator\n'}
[11.303287] (stem_pkg) StdoutLine: {'line': b'        data = "!"+ \'{0:0^3}\'.format(f\'{small}\') + \'{0:0^3}\'.format(f\'{big}\') +"!"\n'}
[11.303734] (stem_pkg) StdoutLine: {'line': b'                  ^\n'}
[11.304137] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.304581] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tensor_publisher.py:23:80: E225 missing whitespace around operator\n'}
[11.304992] (stem_pkg) StdoutLine: {'line': b'        data = "!"+ \'{0:0^3}\'.format(f\'{small}\') + \'{0:0^3}\'.format(f\'{big}\') +"!"\n'}
[11.305399] (stem_pkg) StdoutLine: {'line': b'                                                                               ^\n'}
[11.305809] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.306211] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tensor_publisher.py:23:80: Q000 Double quotes found but single quotes preferred\n'}
[11.306602] (stem_pkg) StdoutLine: {'line': b'        data = "!"+ \'{0:0^3}\'.format(f\'{small}\') + \'{0:0^3}\'.format(f\'{big}\') +"!"\n'}
[11.307013] (stem_pkg) StdoutLine: {'line': b'                                                                               ^\n'}
[11.307482] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.307875] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tensor_publisher.py:25:34: Q000 Double quotes found but single quotes preferred\n'}
[11.308256] (stem_pkg) StdoutLine: {'line': b'        mylcd.lcd_display_string("",2)\n'}
[11.308660] (stem_pkg) StdoutLine: {'line': b'                                 ^\n'}
[11.309116] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.309668] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tensor_publisher.py:25:36: E231 missing whitespace after ','\n"}
[11.310109] (stem_pkg) StdoutLine: {'line': b'        mylcd.lcd_display_string("",2)\n'}
[11.310518] (stem_pkg) StdoutLine: {'line': b'                                   ^\n'}
[11.310927] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.311381] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tensor_publisher.py:26:34: Q000 Double quotes found but single quotes preferred\n'}
[11.311832] (stem_pkg) StdoutLine: {'line': b'        mylcd.lcd_display_string("Started",2)\n'}
[11.312206] (stem_pkg) StdoutLine: {'line': b'                                 ^\n'}
[11.312524] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.312890] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tensor_publisher.py:26:43: E231 missing whitespace after ','\n"}
[11.313277] (stem_pkg) StdoutLine: {'line': b'        mylcd.lcd_display_string("Started",2)\n'}
[11.313629] (stem_pkg) StdoutLine: {'line': b'                                          ^\n'}
[11.314075] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.314491] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tensor_publisher.py:31:50: E203 whitespace before ':'\n"}
[11.314898] (stem_pkg) StdoutLine: {'line': b'    def max_tensor(self, interpreter, cap, mylcd) :\n'}
[11.315358] (stem_pkg) StdoutLine: {'line': b'                                                 ^\n'}
[11.315796] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.316196] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tensor_publisher.py:35:16: F821 undefined name 'now'\n"}
[11.316595] (stem_pkg) StdoutLine: {'line': b'        while (now <= 5) and cap.isOpened() :\n'}
[11.316998] (stem_pkg) StdoutLine: {'line': b'               ^\n'}
[11.317400] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.317789] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tensor_publisher.py:35:44: E203 whitespace before ':'\n"}
[11.318237] (stem_pkg) StdoutLine: {'line': b'        while (now <= 5) and cap.isOpened() :\n'}
[11.318643] (stem_pkg) StdoutLine: {'line': b'                                           ^\n'}
[11.319091] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.319569] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tensor_publisher.py:38:38: Q000 Double quotes found but single quotes preferred\n'}
[11.319996] (stem_pkg) StdoutLine: {'line': b'            mylcd.lcd_display_string("",2)\n'}
[11.320393] (stem_pkg) StdoutLine: {'line': b'                                     ^\n'}
[11.320770] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.321169] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tensor_publisher.py:38:40: E231 missing whitespace after ','\n"}
[11.321580] (stem_pkg) StdoutLine: {'line': b'            mylcd.lcd_display_string("",2)\n'}
[11.321990] (stem_pkg) StdoutLine: {'line': b'                                       ^\n'}
[11.322441] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.322849] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tensor_publisher.py:39:61: E231 missing whitespace after ','\n"}
[11.323337] (stem_pkg) StdoutLine: {'line': b"            mylcd.lcd_display_string(f'Started in {now} sec',2)\n"}
[11.323837] (stem_pkg) StdoutLine: {'line': b'                                                            ^\n'}
[11.324251] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.324662] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tensor_publisher.py:56:20: C408 Unnecessary list call - rewrite as a literal.\n'}
[11.325078] (stem_pkg) StdoutLine: {'line': b'            data = list()\n'}
[11.325482] (stem_pkg) StdoutLine: {'line': b'                   ^\n'}
[11.325887] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.326293] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tensor_publisher.py:58:32: E203 whitespace before ':'\n"}
[11.326694] (stem_pkg) StdoutLine: {'line': b'            for shape in shaped :\n'}
[11.327108] (stem_pkg) StdoutLine: {'line': b'                               ^\n'}
[11.327584] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.328007] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tensor_publisher.py:60:44: C417 Unnecessary use of map - use a generator expression instead.\n'}
[11.328429] (stem_pkg) StdoutLine: {'line': b'            l_x, l_y, l_c, r_x, r_y, r_c = map(lambda x : x, data)\n'}
[11.328872] (stem_pkg) StdoutLine: {'line': b'                                           ^\n'}
[11.329273] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.329641] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tensor_publisher.py:60:56: E203 whitespace before ':'\n"}
[11.329931] (stem_pkg) StdoutLine: {'line': b'            l_x, l_y, l_c, r_x, r_y, r_c = map(lambda x : x, data)\n'}
[11.330208] (stem_pkg) StdoutLine: {'line': b'                                                       ^\n'}
[11.330478] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.330748] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tensor_publisher.py:62:13: E115 expected an indented block (comment)\n'}
[11.331021] (stem_pkg) StdoutLine: {'line': b'            # length\xeb\xa5\xbc float\xec\x9c\xbc\xeb\xa1\x9c \xeb\xb3\xb4\xeb\x82\xb4\xeb\x8f\x84 \xeb\x90\x98\xec\xa5\xac?\n'}
[11.331367] (stem_pkg) StdoutLine: {'line': b'            ^\n'}
[11.331679] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.331957] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tensor_publisher.py:66:13: E203 whitespace before ':'\n"}
[11.332230] (stem_pkg) StdoutLine: {'line': b'        else :\n'}
[11.332520] (stem_pkg) StdoutLine: {'line': b'            ^\n'}
[11.332864] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.333256] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tensor_publisher.py:69:46: E203 whitespace before ':'\n"}
[11.333700] (stem_pkg) StdoutLine: {'line': b'    def tensor_result(self, interpreter, cap) :\n'}
[11.334145] (stem_pkg) StdoutLine: {'line': b'                                             ^\n'}
[11.334538] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.334933] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tensor_publisher.py:90:16: C408 Unnecessary list call - rewrite as a literal.\n'}
[11.335485] (stem_pkg) StdoutLine: {'line': b'        data = list()\n'}
[11.335926] (stem_pkg) StdoutLine: {'line': b'               ^\n'}
[11.336335] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.336741] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tensor_publisher.py:92:28: E203 whitespace before ':'\n"}
[11.337161] (stem_pkg) StdoutLine: {'line': b'        for shape in shaped :\n'}
[11.337677] (stem_pkg) StdoutLine: {'line': b'                           ^\n'}
[11.338111] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.338573] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tensor_publisher.py:95:20: Q000 Double quotes found but single quotes preferred\n'}
[11.338988] (stem_pkg) StdoutLine: {'line': b'        datastr = ["^"] + datastr\n'}
[11.339459] (stem_pkg) StdoutLine: {'line': b'                   ^\n'}
[11.339883] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.340266] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tensor_publisher.py:96:20: Q000 Double quotes found but single quotes preferred\n'}
[11.340643] (stem_pkg) StdoutLine: {'line': b'        msg.data = "*".join(datastr)\n'}
[11.341046] (stem_pkg) StdoutLine: {'line': b'                   ^\n'}
[11.341460] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.341920] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tensor_publisher.py:100:1: E302 expected 2 blank lines, found 1\n'}
[11.342347] (stem_pkg) StdoutLine: {'line': b'def main(args=None) :\n'}
[11.342754] (stem_pkg) StdoutLine: {'line': b'^\n'}
[11.343195] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.343691] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tensor_publisher.py:100:20: E203 whitespace before ':'\n"}
[11.344100] (stem_pkg) StdoutLine: {'line': b'def main(args=None) :\n'}
[11.344501] (stem_pkg) StdoutLine: {'line': b'                   ^\n'}
[11.344923] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.345450] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tensor_publisher.py:102:50: Q000 Double quotes found but single quotes preferred\n'}
[11.346006] (stem_pkg) StdoutLine: {'line': b'    interpreter = tf.lite.Interpreter(model_path="lite-model_movenet_singlepose_lightning_3.tflite")\n'}
[11.346728] (stem_pkg) StdoutLine: {'line': b'                                                 ^\n'}
[11.347509] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.348110] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tensor_publisher.py:102:100: E501 line too long (100 > 99 characters)\n'}
[11.348590] (stem_pkg) StdoutLine: {'line': b'    interpreter = tf.lite.Interpreter(model_path="lite-model_movenet_singlepose_lightning_3.tflite")\n'}
[11.349052] (stem_pkg) StdoutLine: {'line': b'                                                                                                   ^\n'}
[11.349502] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.349911] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tensor_publisher.py:116:1: E305 expected 2 blank lines after class or function definition, found 1\n'}
[11.350309] (stem_pkg) StdoutLine: {'line': b"if __name__ == '__main__' :\n"}
[11.350712] (stem_pkg) StdoutLine: {'line': b'^\n'}
[11.351088] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.351542] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tensor_publisher.py:116:26: E203 whitespace before ':'\n"}
[11.351946] (stem_pkg) StdoutLine: {'line': b"if __name__ == '__main__' :\n"}
[11.352340] (stem_pkg) StdoutLine: {'line': b'                         ^\n'}
[11.352728] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.353172] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tensor_publisher.py:119:1: E265 block comment should start with '# '\n"}
[11.353565] (stem_pkg) StdoutLine: {'line': b'#\xec\xbd\x94, \xec\x99\xbc\xeb\x88\x88, \xec\x98\xa4\xeb\x88\x88, \xec\x99\xbc\xea\xb7\x80, \xec\x98\xa4\xea\xb7\x80, \xec\x99\xbc\xec\x96\xb4\xea\xb9\xa8, \xec\x98\xa4\xec\x96\xb4\xea\xb9\xa8^\n'}
[11.353986] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.354411] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tensor_publisher.py:119:29: W292 no newline at end of file\n'}
[11.354811] (stem_pkg) StdoutLine: {'line': b'#\xec\xbd\x94, \xec\x99\xbc\xeb\x88\x88, \xec\x98\xa4\xeb\x88\x88, \xec\x99\xbc\xea\xb7\x80, \xec\x98\xa4\xea\xb7\x80, \xec\x99\xbc\xec\x96\xb4\xea\xb9\xa8, \xec\x98\xa4\xec\x96\xb4\xea\xb9\xa8                            ^\n'}
[11.355350] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.355784] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tensor_publisher.py:119:29: W292 no newline at end of file\n'}
[11.356195] (stem_pkg) StdoutLine: {'line': b'#\xec\xbd\x94, \xec\x99\xbc\xeb\x88\x88, \xec\x98\xa4\xeb\x88\x88, \xec\x99\xbc\xea\xb7\x80, \xec\x98\xa4\xea\xb7\x80, \xec\x99\xbc\xec\x96\xb4\xea\xb9\xa8, \xec\x98\xa4\xec\x96\xb4\xea\xb9\xa8                            ^\n'}
[11.356591] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.356979] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tensor_publisher.py:119:29: W292 no newline at end of file\n'}
[11.357420] (stem_pkg) StdoutLine: {'line': b'#\xec\xbd\x94, \xec\x99\xbc\xeb\x88\x88, \xec\x98\xa4\xeb\x88\x88, \xec\x99\xbc\xea\xb7\x80, \xec\x98\xa4\xea\xb7\x80, \xec\x99\xbc\xec\x96\xb4\xea\xb9\xa8, \xec\x98\xa4\xec\x96\xb4\xea\xb9\xa8                            ^\n'}
[11.357844] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.358287] (stem_pkg) StdoutLine: {'line': b'1     B901 blind except: statement\n'}
[11.358679] (stem_pkg) StdoutLine: {'line': b'3     C408 Unnecessary list call - rewrite as a literal.\n'}
[11.359072] (stem_pkg) StdoutLine: {'line': b'5     C417 Unnecessary use of map - use a generator expression instead.\n'}
[11.359590] (stem_pkg) StdoutLine: {'line': b'6     CNL100 Class definition does not have a new line.\n'}
[11.360015] (stem_pkg) StdoutLine: {'line': b'61    E111 indentation is not a multiple of four\n'}
[11.360410] (stem_pkg) StdoutLine: {'line': b'9     E114 indentation is not a multiple of four (comment)\n'}
[11.360800] (stem_pkg) StdoutLine: {'line': b'1     E115 expected an indented block (comment)\n'}
[11.361194] (stem_pkg) StdoutLine: {'line': b"2     E202 whitespace before ')'\n"}
[11.361591] (stem_pkg) StdoutLine: {'line': b"51    E203 whitespace before ':'\n"}
[11.361995] (stem_pkg) StdoutLine: {'line': b'2     E225 missing whitespace around operator\n'}
[11.362387] (stem_pkg) StdoutLine: {'line': b"5     E231 missing whitespace after ','\n"}
[11.362781] (stem_pkg) StdoutLine: {'line': b'20    E251 unexpected spaces around keyword / parameter equals\n'}
[11.363284] (stem_pkg) StdoutLine: {'line': b'11    E261 at least two spaces before inline comment\n'}
[11.363882] (stem_pkg) StdoutLine: {'line': b"7     E262 inline comment should start with '# '\n"}
[11.364315] (stem_pkg) StdoutLine: {'line': b"11    E265 block comment should start with '# '\n"}
[11.364723] (stem_pkg) StdoutLine: {'line': b'16    E301 expected 1 blank line, found 0\n'}
[11.365130] (stem_pkg) StdoutLine: {'line': b'13    E302 expected 2 blank lines, found 1\n'}
[11.365529] (stem_pkg) StdoutLine: {'line': b'1     E303 too many blank lines (3)\n'}
[11.365932] (stem_pkg) StdoutLine: {'line': b'9     E305 expected 2 blank lines after class or function definition, found 0\n'}
[11.366333] (stem_pkg) StdoutLine: {'line': b'2     E402 module level import not at top of file\n'}
[11.366743] (stem_pkg) StdoutLine: {'line': b'3     E501 line too long (102 > 99 characters)\n'}
[11.367204] (stem_pkg) StdoutLine: {'line': b'1     E703 statement ends with a semicolon\n'}
[11.367616] (stem_pkg) StdoutLine: {'line': b"1     E722 do not use bare 'except'\n"}
[11.367992] (stem_pkg) StdoutLine: {'line': b"1     F401 'socket.NI_NUMERICHOST' imported but unused\n"}
[11.368313] (stem_pkg) StdoutLine: {'line': b"1     F821 undefined name 'now'\n"}
[11.368663] (stem_pkg) StdoutLine: {'line': b"1     F841 local variable 'data' is assigned to but never used\n"}
[11.368988] (stem_pkg) StdoutLine: {'line': b"13    I100 Import statements are in the wrong order. 'import os' should be before 'from setuptools import setup' and in a different group.\n"}
[11.369330] (stem_pkg) StdoutLine: {'line': b"8     I201 Missing newline between import groups. 'import os' is identified as Stdlib and 'from setuptools import setup' is identified as Third Party.\n"}
[11.369736] (stem_pkg) StdoutLine: {'line': b'39    Q000 Double quotes found but single quotes preferred\n'}
[11.370298] (stem_pkg) StdoutLine: {'line': b'1     W291 trailing whitespace\n'}
[11.370722] (stem_pkg) StdoutLine: {'line': b'15    W292 no newline at end of file\n'}
[11.371119] (stem_pkg) StdoutLine: {'line': b'3     W293 blank line contains whitespace\n'}
[11.371600] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.372011] (stem_pkg) StdoutLine: {'line': b'15 files checked\n'}
[11.372411] (stem_pkg) StdoutLine: {'line': b'323 errors\n'}
[11.372851] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.373246] (stem_pkg) StdoutLine: {'line': b"'B'-type errors: 1\n"}
[11.373639] (stem_pkg) StdoutLine: {'line': b"'C'-type errors: 14\n"}
[11.374027] (stem_pkg) StdoutLine: {'line': b"'E'-type errors: 226\n"}
[11.374427] (stem_pkg) StdoutLine: {'line': b"'F'-type errors: 3\n"}
[11.374821] (stem_pkg) StdoutLine: {'line': b"'I'-type errors: 21\n"}
[11.375316] (stem_pkg) StdoutLine: {'line': b"'Q'-type errors: 39\n"}
[11.375754] (stem_pkg) StdoutLine: {'line': b"'W'-type errors: 19\n"}
[11.376160] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.376554] (stem_pkg) StdoutLine: {'line': b'Checked files:\n'}
[11.376942] (stem_pkg) StdoutLine: {'line': b'\n'}
[11.377343] (stem_pkg) StdoutLine: {'line': b'* ./setup.py\n'}
[11.377781] (stem_pkg) StdoutLine: {'line': b'* ./launch/stem.launch.py\n'}
[11.378179] (stem_pkg) StdoutLine: {'line': b'* ./stem_pkg/serial_talker.py\n'}
[11.378579] (stem_pkg) StdoutLine: {'line': b'* ./stem_pkg/__init__.py\n'}
[11.378975] (stem_pkg) StdoutLine: {'line': b'* ./stem_pkg/I2C_LCD_driver.py\n'}
[11.379429] (stem_pkg) StdoutLine: {'line': b'* ./stem_pkg/controller.py\n'}
[11.379840] (stem_pkg) StdoutLine: {'line': b'* ./stem_pkg/async_serial_talker.py\n'}
[11.380238] (stem_pkg) StdoutLine: {'line': b'* ./stem_pkg/cmd_selector.py\n'}
[11.380689] (stem_pkg) StdoutLine: {'line': b'* ./stem_pkg/calculator.py\n'}
[11.381092] (stem_pkg) StdoutLine: {'line': b'* ./stem_pkg/tensor.py\n'}
[11.381492] (stem_pkg) StdoutLine: {'line': b'* ./stem_pkg/tester.py\n'}
[11.381891] (stem_pkg) StdoutLine: {'line': b'* ./stem_pkg/tensor_publisher.py\n'}
[11.382288] (stem_pkg) StdoutLine: {'line': b'* ./test/test_flake8.py\n'}
[11.382733] (stem_pkg) StdoutLine: {'line': b'* ./test/test_copyright.py\n'}
[11.383130] (stem_pkg) StdoutLine: {'line': b'* ./test/test_pep257.py\n'}
[11.383597] (stem_pkg) StdoutLine: {'line': b'------- generated xml file: /home/pi/sunflower/build/stem_pkg/pytest.xml -------\n'}
[11.384001] (stem_pkg) StdoutLine: {'line': b'=========================== short test summary info ============================\n'}
[11.384367] (-) TimerEvent: {}
[11.384781] (stem_pkg) StdoutLine: {'line': b'FAILED test/test_copyright.py::test_copyright - AssertionError: Found errors\n'}
[11.385449] (stem_pkg) StdoutLine: {'line': b'FAILED test/test_flake8.py::test_flake8 - AssertionError: Found 323 code styl...\n'}
[11.386085] (stem_pkg) StdoutLine: {'line': b'\x1b[31m=================== \x1b[31m\x1b[1m2 failed\x1b[0m, \x1b[32m1 passed\x1b[0m, \x1b[33m5 warnings\x1b[0m\x1b[31m in 3.89s\x1b[0m\x1b[31m ====================\x1b[0m\n'}
[11.386544] (stem_pkg) CommandEnded: {'returncode': 1}
[11.388065] (stem_pkg) TestFailure: {'identifier': 'stem_pkg'}
[11.388261] (stem_pkg) JobEnded: {'identifier': 'stem_pkg', 'rc': 0}
[11.390208] (test_pkg) StdoutLine: {'line': b'test/test_flake8.py \x1b[32m.\x1b[0m\x1b[33m                                                    [ 66%]\x1b[0m\n'}
[11.390888] (test_pkg) StdoutLine: {'line': b'test/test_pep257.py \x1b[32m.\x1b[0m\x1b[33m                                                    [100%]\x1b[0m\n'}
[11.391583] (test_pkg) StderrLine: {'line': b'\n'}
[11.392224] (test_pkg) StderrLine: {'line': b'\x1b[33m=============================== warnings summary ===============================\x1b[0m\n'}
[11.392820] (test_pkg) StderrLine: {'line': b'../../../../../opt/ros/foxy/lib/python3.8/site-packages/launch_testing/pytest/hooks.py:179\n'}
[11.393287] (test_pkg) StderrLine: {'line': b'../../../../../opt/ros/foxy/lib/python3.8/site-packages/launch_testing/pytest/hooks.py:179\n'}
[11.393735] (test_pkg) StderrLine: {'line': b'../../../../../opt/ros/foxy/lib/python3.8/site-packages/launch_testing/pytest/hooks.py:179\n'}
[11.394195] (test_pkg) StderrLine: {'line': b'  Warning: The (fspath: py.path.local) argument to Module is deprecated. Please use the (path: pathlib.Path) argument instead.\n'}
[11.394737] (test_pkg) StderrLine: {'line': b'  See https://docs.pytest.org/en/latest/deprecations.html#fspath-argument-for-node-constructors-replaced-with-pathlib-path\n'}
[11.395282] (test_pkg) StderrLine: {'line': b'\n'}
[11.395853] (test_pkg) StderrLine: {'line': b'../../../../../usr/lib/python3/dist-packages/pydocstyle/config.py:6\n'}
[11.396296] (test_pkg) StderrLine: {'line': b"  Warning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3, and in 3.10 it will stop working\n"}
[11.396742] (test_pkg) StderrLine: {'line': b'\n'}
[11.397361] (test_pkg) StderrLine: {'line': b'../../../.local/lib/python3.8/site-packages/_pytest/nodes.py:633\n'}
[11.397790] (test_pkg) StderrLine: {'line': b'  Warning: The (fspath: py.path.local) argument to Package is deprecated. Please use the (path: pathlib.Path) argument instead.\n'}
[11.398193] (test_pkg) StderrLine: {'line': b'  See https://docs.pytest.org/en/latest/deprecations.html#fspath-argument-for-node-constructors-replaced-with-pathlib-path\n'}
[11.398597] (test_pkg) StderrLine: {'line': b'\n'}
[11.399004] (test_pkg) StderrLine: {'line': b'-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n'}
[11.399480] (test_pkg) StdoutLine: {'line': b'------- generated xml file: /home/pi/sunflower/build/test_pkg/pytest.xml -------\n'}
[11.399922] (test_pkg) StdoutLine: {'line': b'\x1b[33m======================== \x1b[32m3 passed\x1b[0m, \x1b[33m\x1b[1m5 warnings\x1b[0m\x1b[33m in 1.45s\x1b[0m\x1b[33m =========================\x1b[0m\n'}
[11.400345] (test_pkg) CommandEnded: {'returncode': 0}
[11.401678] (test_pkg) JobEnded: {'identifier': 'test_pkg', 'rc': 0}
[11.484592] (-) TimerEvent: {}
[11.577541] (tflite_pkg) StdoutLine: {'line': b'\x1b[1m============================= test session starts ==============================\x1b[0m\n'}
[11.578324] (tflite_pkg) StdoutLine: {'line': b'platform linux -- Python 3.8.10, pytest-7.1.2, pluggy-0.13.0\n'}
[11.584715] (-) TimerEvent: {}
[11.603261] (tflite_pkg) StdoutLine: {'line': b'cachedir: /home/pi/sunflower/build/tflite_pkg/.pytest_cache\n'}
[11.603979] (tflite_pkg) StdoutLine: {'line': b'rootdir: /home/pi/sunflower/src/tflite_pkg\n'}
[11.604417] (tflite_pkg) StdoutLine: {'line': b'plugins: ament-flake8-0.9.6, ament-copyright-0.9.6, launch-testing-ros-0.11.6, ament-xmllint-0.9.6, ament-pep257-0.9.6, ament-lint-0.9.6, launch-testing-0.10.8, rerunfailures-10.2, repeat-0.9.1, colcon-core-0.8.3, cov-2.8.1\n'}
[11.684917] (-) TimerEvent: {}
[11.785725] (-) TimerEvent: {}
[11.826716] (tflite_pkg) StdoutLine: {'line': b'\x1b[1mcollecting ... \x1b[0m\x1b[1m\n'}
[11.827472] (tflite_pkg) StdoutLine: {'line': b'collected 3 items                                                              \x1b[0m\n'}
[11.828790] (tflite_pkg) StdoutLine: {'line': b'\n'}
[11.885893] (-) TimerEvent: {}
[11.952044] (tflite_pkg) StdoutLine: {'line': b'test/test_copyright.py \x1b[32m.\x1b[0m\x1b[33m                                                 [ 33%]\x1b[0m\n'}
[11.986076] (-) TimerEvent: {}
[12.086735] (-) TimerEvent: {}
[12.187462] (-) TimerEvent: {}
[12.288104] (-) TimerEvent: {}
[12.388926] (-) TimerEvent: {}
[12.420296] (tflite_pkg) StdoutLine: {'line': b'test/test_flake8.py \x1b[32m.\x1b[0m\x1b[33m                                                    [ 66%]\x1b[0m\n'}
[12.489010] (tflite_pkg) StdoutLine: {'line': b'test/test_pep257.py \x1b[32m.\x1b[0m\x1b[33m                                                    [100%]\x1b[0m\n'}
[12.489785] (-) TimerEvent: {}
[12.490198] (tflite_pkg) StderrLine: {'line': b'\n'}
[12.491192] (tflite_pkg) StderrLine: {'line': b'\x1b[33m=============================== warnings summary ===============================\x1b[0m\n'}
[12.492368] (tflite_pkg) StderrLine: {'line': b'../../../../../opt/ros/foxy/lib/python3.8/site-packages/launch_testing/pytest/hooks.py:179\n'}
[12.493098] (tflite_pkg) StderrLine: {'line': b'../../../../../opt/ros/foxy/lib/python3.8/site-packages/launch_testing/pytest/hooks.py:179\n'}
[12.493804] (tflite_pkg) StderrLine: {'line': b'../../../../../opt/ros/foxy/lib/python3.8/site-packages/launch_testing/pytest/hooks.py:179\n'}
[12.494391] (tflite_pkg) StderrLine: {'line': b'  Warning: The (fspath: py.path.local) argument to Module is deprecated. Please use the (path: pathlib.Path) argument instead.\n'}
[12.494826] (tflite_pkg) StderrLine: {'line': b'  See https://docs.pytest.org/en/latest/deprecations.html#fspath-argument-for-node-constructors-replaced-with-pathlib-path\n'}
[12.495640] (tflite_pkg) StderrLine: {'line': b'\n'}
[12.496474] (tflite_pkg) StderrLine: {'line': b'../../../../../usr/lib/python3/dist-packages/pydocstyle/config.py:6\n'}
[12.497231] (tflite_pkg) StderrLine: {'line': b"  Warning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3, and in 3.10 it will stop working\n"}
[12.497943] (tflite_pkg) StderrLine: {'line': b'\n'}
[12.498690] (tflite_pkg) StderrLine: {'line': b'../../../.local/lib/python3.8/site-packages/_pytest/nodes.py:633\n'}
[12.499336] (tflite_pkg) StderrLine: {'line': b'  Warning: The (fspath: py.path.local) argument to Package is deprecated. Please use the (path: pathlib.Path) argument instead.\n'}
[12.500301] (tflite_pkg) StderrLine: {'line': b'  See https://docs.pytest.org/en/latest/deprecations.html#fspath-argument-for-node-constructors-replaced-with-pathlib-path\n'}
[12.500874] (tflite_pkg) StderrLine: {'line': b'\n'}
[12.501471] (tflite_pkg) StderrLine: {'line': b'-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n'}
[12.502041] (tflite_pkg) StdoutLine: {'line': b'------ generated xml file: /home/pi/sunflower/build/tflite_pkg/pytest.xml ------\n'}
[12.502731] (tflite_pkg) StdoutLine: {'line': b'\x1b[33m======================== \x1b[32m3 passed\x1b[0m, \x1b[33m\x1b[1m5 warnings\x1b[0m\x1b[33m in 0.92s\x1b[0m\x1b[33m =========================\x1b[0m\n'}
[12.590106] (-) TimerEvent: {}
[12.691534] (-) TimerEvent: {}
[12.770000] (tflite_pkg) CommandEnded: {'returncode': 0}
[12.771371] (tflite_pkg) JobEnded: {'identifier': 'tflite_pkg', 'rc': 0}
[12.774873] (-) EventReactorShutdown: {}
