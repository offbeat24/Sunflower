[0.000000] (-) TimerEvent: {}
[0.003096] (sf_pkg) JobQueued: {'identifier': 'sf_pkg', 'dependencies': OrderedDict([('sf_pkg', '/home/pi/sunflower/install/sf_pkg')])}
[0.004124] (stem_pkg) JobQueued: {'identifier': 'stem_pkg', 'dependencies': OrderedDict([('stem_pkg', '/home/pi/sunflower/install/stem_pkg')])}
[0.006289] (sunflower_interfaces) JobQueued: {'identifier': 'sunflower_interfaces', 'dependencies': OrderedDict([('sunflower_interfaces', '/home/pi/sunflower/install/sunflower_interfaces')])}
[0.007722] (test_pkg) JobQueued: {'identifier': 'test_pkg', 'dependencies': OrderedDict([('test_pkg', '/home/pi/sunflower/install/test_pkg')])}
[0.009546] (tflite_pkg) JobQueued: {'identifier': 'tflite_pkg', 'dependencies': OrderedDict([('tflite_pkg', '/home/pi/sunflower/install/tflite_pkg')])}
[0.010147] (sf_pkg) JobStarted: {'identifier': 'sf_pkg'}
[0.099471] (-) TimerEvent: {}
[0.166133] (stem_pkg) JobStarted: {'identifier': 'stem_pkg'}
[0.199783] (-) TimerEvent: {}
[0.202778] (sunflower_interfaces) JobStarted: {'identifier': 'sunflower_interfaces'}
[0.239205] (test_pkg) JobStarted: {'identifier': 'test_pkg'}
[0.300255] (-) TimerEvent: {}
[0.401753] (-) TimerEvent: {}
[0.502857] (-) TimerEvent: {}
[0.605382] (-) TimerEvent: {}
[0.706309] (-) TimerEvent: {}
[0.807156] (-) TimerEvent: {}
[0.908191] (-) TimerEvent: {}
[1.013189] (-) TimerEvent: {}
[1.114078] (-) TimerEvent: {}
[1.214877] (-) TimerEvent: {}
[1.315738] (-) TimerEvent: {}
[1.416634] (-) TimerEvent: {}
[1.517500] (-) TimerEvent: {}
[1.618339] (-) TimerEvent: {}
[1.719573] (-) TimerEvent: {}
[1.775437] (sf_pkg) Command: {'cmd': ['/usr/bin/python3', '-m', 'pytest'], 'cwd': '/home/pi/sunflower/src/sf_pkg', 'env': {'LESSOPEN': '| /usr/bin/lesspipe %s', 'USER': 'pi', 'SSH_CLIENT': '211.217.28.227 58587 22', 'XDG_SESSION_TYPE': 'tty', 'GIT_ASKPASS': '/home/pi/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/extensions/git/dist/askpass.sh', 'SHLVL': '1', 'LD_LIBRARY_PATH': '/home/pi/sunflower/install/sunflower_interfaces/lib:/opt/ros/foxy/opt/yaml_cpp_vendor/lib:/opt/ros/foxy/opt/rviz_ogre_vendor/lib:/opt/ros/foxy/lib/aarch64-linux-gnu:/opt/ros/foxy/lib', 'BROWSER': '/home/pi/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/bin/helpers/browser.sh', 'MOTD_SHOWN': 'pam', 'HOME': '/home/pi', 'TERM_PROGRAM_VERSION': '1.68.1', 'VSCODE_IPC_HOOK_CLI': '/run/user/1000/vscode-ipc-8bde6f76-ba4e-4b4d-b68b-5b379bd0b432.sock', 'ROS_PYTHON_VERSION': '3', 'VSCODE_GIT_ASKPASS_MAIN': '/home/pi/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/extensions/git/dist/askpass-main.js', 'VSCODE_GIT_ASKPASS_NODE': '/home/pi/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/node', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/1000/bus', 'COLORTERM': 'truecolor', 'COLCON_PREFIX_PATH': '/home/pi/sunflower/install', 'ROS_DISTRO': 'foxy', 'LOGNAME': 'pi', '_': '/usr/bin/colcon', 'ROS_VERSION': '2', 'XDG_SESSION_CLASS': 'user', 'TERM': 'xterm-256color', 'XDG_SESSION_ID': '4', 'ROS_LOCALHOST_ONLY': '0', 'PATH': '/home/pi/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/bin/remote-cli:/home/pi/.local/bin:/opt/ros/foxy/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin', 'XDG_RUNTIME_DIR': '/run/user/1000', 'LANG': 'C.UTF-8', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:', 'VSCODE_GIT_IPC_HANDLE': '/run/user/1000/vscode-git-ad91e88160.sock', 'TERM_PROGRAM': 'vscode', 'AMENT_PREFIX_PATH': '/home/pi/sunflower/install/sf_pkg:/home/pi/sunflower/install/tflite_pkg:/home/pi/sunflower/install/test_pkg:/home/pi/sunflower/install/sunflower_interfaces:/opt/ros/foxy', 'SHELL': '/bin/bash', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'VSCODE_GIT_ASKPASS_EXTRA_ARGS': '', 'PWD': '/home/pi/sunflower/build/sf_pkg', 'SSH_CONNECTION': '211.217.28.227 58587 210.91.28.223 22', 'XDG_DATA_DIRS': '/usr/local/share:/usr/share:/var/lib/snapd/desktop', 'PYTHONPATH': '/home/pi/sunflower/build/sf_pkg:/home/pi/sunflower/install/sf_pkg/lib/python3.8/site-packages:/home/pi/sunflower/build/tflite_pkg:/home/pi/sunflower/install/tflite_pkg/lib/python3.8/site-packages:/home/pi/sunflower/build/test_pkg:/home/pi/sunflower/install/test_pkg/lib/python3.8/site-packages:/home/pi/sunflower/install/sunflower_interfaces/lib/python3.8/site-packages:/home/pi/sunflower/build/stem_pkg:/home/pi/sunflower/install/stem_pkg/lib/python3.8/site-packages:/opt/ros/foxy/lib/python3.8/site-packages', 'COLCON': '1', 'CMAKE_PREFIX_PATH': '/home/pi/sunflower/install/sunflower_interfaces', 'PYTEST_ADDOPTS': '--tb=short --junit-xml=/home/pi/sunflower/build/sf_pkg/pytest.xml --junit-prefix=sf_pkg -o cache_dir=/home/pi/sunflower/build/sf_pkg/.pytest_cache'}, 'shell': False}
[1.819877] (-) TimerEvent: {}
[1.921683] (-) TimerEvent: {}
[2.024128] (-) TimerEvent: {}
[2.126738] (-) TimerEvent: {}
[2.229372] (-) TimerEvent: {}
[2.335026] (-) TimerEvent: {}
[2.438357] (-) TimerEvent: {}
[2.546764] (-) TimerEvent: {}
[2.649371] (-) TimerEvent: {}
[2.753510] (-) TimerEvent: {}
[2.857449] (-) TimerEvent: {}
[2.959150] (-) TimerEvent: {}
[3.060273] (-) TimerEvent: {}
[3.162694] (-) TimerEvent: {}
[3.263816] (-) TimerEvent: {}
[3.364649] (-) TimerEvent: {}
[3.466346] (-) TimerEvent: {}
[3.567379] (-) TimerEvent: {}
[3.649379] (stem_pkg) Command: {'cmd': ['/usr/bin/python3', '-m', 'pytest'], 'cwd': '/home/pi/sunflower/src/stem_pkg', 'env': {'LESSOPEN': '| /usr/bin/lesspipe %s', 'USER': 'pi', 'SSH_CLIENT': '211.217.28.227 58587 22', 'XDG_SESSION_TYPE': 'tty', 'GIT_ASKPASS': '/home/pi/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/extensions/git/dist/askpass.sh', 'SHLVL': '1', 'LD_LIBRARY_PATH': '/home/pi/sunflower/install/sunflower_interfaces/lib:/opt/ros/foxy/opt/yaml_cpp_vendor/lib:/opt/ros/foxy/opt/rviz_ogre_vendor/lib:/opt/ros/foxy/lib/aarch64-linux-gnu:/opt/ros/foxy/lib', 'BROWSER': '/home/pi/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/bin/helpers/browser.sh', 'MOTD_SHOWN': 'pam', 'HOME': '/home/pi', 'TERM_PROGRAM_VERSION': '1.68.1', 'VSCODE_IPC_HOOK_CLI': '/run/user/1000/vscode-ipc-8bde6f76-ba4e-4b4d-b68b-5b379bd0b432.sock', 'ROS_PYTHON_VERSION': '3', 'VSCODE_GIT_ASKPASS_MAIN': '/home/pi/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/extensions/git/dist/askpass-main.js', 'VSCODE_GIT_ASKPASS_NODE': '/home/pi/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/node', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/1000/bus', 'COLORTERM': 'truecolor', 'COLCON_PREFIX_PATH': '/home/pi/sunflower/install', 'ROS_DISTRO': 'foxy', 'LOGNAME': 'pi', '_': '/usr/bin/colcon', 'ROS_VERSION': '2', 'XDG_SESSION_CLASS': 'user', 'TERM': 'xterm-256color', 'XDG_SESSION_ID': '4', 'ROS_LOCALHOST_ONLY': '0', 'PATH': '/home/pi/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/bin/remote-cli:/home/pi/.local/bin:/opt/ros/foxy/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin', 'XDG_RUNTIME_DIR': '/run/user/1000', 'LANG': 'C.UTF-8', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:', 'VSCODE_GIT_IPC_HANDLE': '/run/user/1000/vscode-git-ad91e88160.sock', 'TERM_PROGRAM': 'vscode', 'AMENT_PREFIX_PATH': '/home/pi/sunflower/install/tflite_pkg:/home/pi/sunflower/install/test_pkg:/home/pi/sunflower/install/sunflower_interfaces:/home/pi/sunflower/install/sf_pkg:/opt/ros/foxy', 'SHELL': '/bin/bash', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'VSCODE_GIT_ASKPASS_EXTRA_ARGS': '', 'PWD': '/home/pi/sunflower/build/stem_pkg', 'SSH_CONNECTION': '211.217.28.227 58587 210.91.28.223 22', 'XDG_DATA_DIRS': '/usr/local/share:/usr/share:/var/lib/snapd/desktop', 'PYTHONPATH': '/home/pi/sunflower/build/stem_pkg:/home/pi/sunflower/install/stem_pkg/lib/python3.8/site-packages:/home/pi/sunflower/build/tflite_pkg:/home/pi/sunflower/install/tflite_pkg/lib/python3.8/site-packages:/home/pi/sunflower/build/test_pkg:/home/pi/sunflower/install/test_pkg/lib/python3.8/site-packages:/home/pi/sunflower/install/sunflower_interfaces/lib/python3.8/site-packages:/home/pi/sunflower/build/sf_pkg:/home/pi/sunflower/install/sf_pkg/lib/python3.8/site-packages:/opt/ros/foxy/lib/python3.8/site-packages', 'COLCON': '1', 'CMAKE_PREFIX_PATH': '/home/pi/sunflower/install/sunflower_interfaces', 'PYTEST_ADDOPTS': '--tb=short --junit-xml=/home/pi/sunflower/build/stem_pkg/pytest.xml --junit-prefix=stem_pkg -o cache_dir=/home/pi/sunflower/build/stem_pkg/.pytest_cache'}, 'shell': False}
[3.667791] (-) TimerEvent: {}
[3.772252] (-) TimerEvent: {}
[3.874618] (-) TimerEvent: {}
[3.975672] (-) TimerEvent: {}
[4.077370] (-) TimerEvent: {}
[4.178268] (-) TimerEvent: {}
[4.279942] (-) TimerEvent: {}
[4.381110] (-) TimerEvent: {}
[4.485699] (-) TimerEvent: {}
[4.586663] (-) TimerEvent: {}
[4.687743] (-) TimerEvent: {}
[4.788785] (-) TimerEvent: {}
[4.889781] (-) TimerEvent: {}
[4.990704] (-) TimerEvent: {}
[5.091850] (-) TimerEvent: {}
[5.193095] (-) TimerEvent: {}
[5.293982] (-) TimerEvent: {}
[5.394966] (-) TimerEvent: {}
[5.495955] (-) TimerEvent: {}
[5.596998] (-) TimerEvent: {}
[5.697916] (-) TimerEvent: {}
[5.770514] (sf_pkg) StdoutLine: {'line': b'\x1b[1m============================= test session starts ==============================\x1b[0m\n'}
[5.771976] (sf_pkg) StdoutLine: {'line': b'platform linux -- Python 3.8.10, pytest-7.1.2, pluggy-0.13.0\n'}
[5.798286] (-) TimerEvent: {}
[5.858179] (sf_pkg) StdoutLine: {'line': b'cachedir: /home/pi/sunflower/build/sf_pkg/.pytest_cache\n'}
[5.860583] (sf_pkg) StdoutLine: {'line': b'rootdir: /home/pi/sunflower/src/sf_pkg\n'}
[5.861354] (sf_pkg) StdoutLine: {'line': b'plugins: ament-flake8-0.9.6, ament-copyright-0.9.6, launch-testing-ros-0.11.6, ament-xmllint-0.9.6, ament-pep257-0.9.6, ament-lint-0.9.6, launch-testing-0.10.8, rerunfailures-10.2, repeat-0.9.1, colcon-core-0.8.3, cov-2.8.1\n'}
[5.898483] (-) TimerEvent: {}
[5.999472] (-) TimerEvent: {}
[6.100483] (-) TimerEvent: {}
[6.183889] (test_pkg) Command: {'cmd': ['/usr/bin/python3', '-m', 'pytest'], 'cwd': '/home/pi/sunflower/src/test_pkg', 'env': {'LESSOPEN': '| /usr/bin/lesspipe %s', 'USER': 'pi', 'SSH_CLIENT': '211.217.28.227 58587 22', 'XDG_SESSION_TYPE': 'tty', 'GIT_ASKPASS': '/home/pi/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/extensions/git/dist/askpass.sh', 'SHLVL': '1', 'LD_LIBRARY_PATH': '/home/pi/sunflower/install/sunflower_interfaces/lib:/opt/ros/foxy/opt/yaml_cpp_vendor/lib:/opt/ros/foxy/opt/rviz_ogre_vendor/lib:/opt/ros/foxy/lib/aarch64-linux-gnu:/opt/ros/foxy/lib', 'BROWSER': '/home/pi/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/bin/helpers/browser.sh', 'MOTD_SHOWN': 'pam', 'HOME': '/home/pi', 'TERM_PROGRAM_VERSION': '1.68.1', 'VSCODE_IPC_HOOK_CLI': '/run/user/1000/vscode-ipc-8bde6f76-ba4e-4b4d-b68b-5b379bd0b432.sock', 'ROS_PYTHON_VERSION': '3', 'VSCODE_GIT_ASKPASS_MAIN': '/home/pi/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/extensions/git/dist/askpass-main.js', 'VSCODE_GIT_ASKPASS_NODE': '/home/pi/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/node', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/1000/bus', 'COLORTERM': 'truecolor', 'COLCON_PREFIX_PATH': '/home/pi/sunflower/install', 'ROS_DISTRO': 'foxy', 'LOGNAME': 'pi', '_': '/usr/bin/colcon', 'ROS_VERSION': '2', 'XDG_SESSION_CLASS': 'user', 'TERM': 'xterm-256color', 'XDG_SESSION_ID': '4', 'ROS_LOCALHOST_ONLY': '0', 'PATH': '/home/pi/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/bin/remote-cli:/home/pi/.local/bin:/opt/ros/foxy/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin', 'XDG_RUNTIME_DIR': '/run/user/1000', 'LANG': 'C.UTF-8', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:', 'VSCODE_GIT_IPC_HANDLE': '/run/user/1000/vscode-git-ad91e88160.sock', 'TERM_PROGRAM': 'vscode', 'AMENT_PREFIX_PATH': '/home/pi/sunflower/install/test_pkg:/home/pi/sunflower/install/tflite_pkg:/home/pi/sunflower/install/sunflower_interfaces:/home/pi/sunflower/install/sf_pkg:/opt/ros/foxy', 'SHELL': '/bin/bash', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'VSCODE_GIT_ASKPASS_EXTRA_ARGS': '', 'PWD': '/home/pi/sunflower/build/test_pkg', 'SSH_CONNECTION': '211.217.28.227 58587 210.91.28.223 22', 'XDG_DATA_DIRS': '/usr/local/share:/usr/share:/var/lib/snapd/desktop', 'PYTHONPATH': '/home/pi/sunflower/build/test_pkg:/home/pi/sunflower/install/test_pkg/lib/python3.8/site-packages:/home/pi/sunflower/build/tflite_pkg:/home/pi/sunflower/install/tflite_pkg/lib/python3.8/site-packages:/home/pi/sunflower/install/sunflower_interfaces/lib/python3.8/site-packages:/home/pi/sunflower/build/stem_pkg:/home/pi/sunflower/install/stem_pkg/lib/python3.8/site-packages:/home/pi/sunflower/build/sf_pkg:/home/pi/sunflower/install/sf_pkg/lib/python3.8/site-packages:/opt/ros/foxy/lib/python3.8/site-packages', 'COLCON': '1', 'CMAKE_PREFIX_PATH': '/home/pi/sunflower/install/sunflower_interfaces', 'PYTEST_ADDOPTS': '--tb=short --junit-xml=/home/pi/sunflower/build/test_pkg/pytest.xml --junit-prefix=test_pkg -o cache_dir=/home/pi/sunflower/build/test_pkg/.pytest_cache'}, 'shell': False}
[6.201305] (-) TimerEvent: {}
[6.224713] (sunflower_interfaces) JobEnded: {'identifier': 'sunflower_interfaces', 'rc': 0}
[6.259482] (tflite_pkg) JobStarted: {'identifier': 'tflite_pkg'}
[6.285846] (sf_pkg) StdoutLine: {'line': b'\x1b[1mcollecting ... \x1b[0m\x1b[1m\n'}
[6.286770] (sf_pkg) StdoutLine: {'line': b'collected 3 items                                                              \x1b[0m\n'}
[6.287529] (sf_pkg) StdoutLine: {'line': b'\n'}
[6.302004] (-) TimerEvent: {}
[6.404198] (-) TimerEvent: {}
[6.507186] (-) TimerEvent: {}
[6.608400] (-) TimerEvent: {}
[6.709660] (-) TimerEvent: {}
[6.810790] (-) TimerEvent: {}
[6.911961] (-) TimerEvent: {}
[6.949304] (sf_pkg) StdoutLine: {'line': b'test/test_copyright.py \x1b[31mF\x1b[0m\x1b[31m                                                 [ 33%]\x1b[0m\n'}
[7.012193] (-) TimerEvent: {}
[7.113046] (-) TimerEvent: {}
[7.213918] (-) TimerEvent: {}
[7.318641] (-) TimerEvent: {}
[7.419614] (-) TimerEvent: {}
[7.520504] (-) TimerEvent: {}
[7.621616] (-) TimerEvent: {}
[7.722834] (-) TimerEvent: {}
[7.823764] (-) TimerEvent: {}
[7.924902] (-) TimerEvent: {}
[8.025987] (-) TimerEvent: {}
[8.127091] (-) TimerEvent: {}
[8.231573] (-) TimerEvent: {}
[8.336223] (-) TimerEvent: {}
[8.437164] (-) TimerEvent: {}
[8.538164] (-) TimerEvent: {}
[8.641975] (-) TimerEvent: {}
[8.742863] (-) TimerEvent: {}
[8.844048] (-) TimerEvent: {}
[8.945040] (-) TimerEvent: {}
[9.045970] (-) TimerEvent: {}
[9.103274] (sf_pkg) StdoutLine: {'line': b'test/test_flake8.py \x1b[31mF\x1b[0m\x1b[31m                                                    [ 66%]\x1b[0m\n'}
[9.146157] (-) TimerEvent: {}
[9.156490] (stem_pkg) StdoutLine: {'line': b'\x1b[1m============================= test session starts ==============================\x1b[0m\n'}
[9.158355] (stem_pkg) StdoutLine: {'line': b'platform linux -- Python 3.8.10, pytest-7.1.2, pluggy-0.13.0\n'}
[9.196763] (stem_pkg) StdoutLine: {'line': b'cachedir: /home/pi/sunflower/build/stem_pkg/.pytest_cache\n'}
[9.198099] (stem_pkg) StdoutLine: {'line': b'rootdir: /home/pi/sunflower/src/stem_pkg\n'}
[9.198814] (stem_pkg) StdoutLine: {'line': b'plugins: ament-flake8-0.9.6, ament-copyright-0.9.6, launch-testing-ros-0.11.6, ament-xmllint-0.9.6, ament-pep257-0.9.6, ament-lint-0.9.6, launch-testing-0.10.8, rerunfailures-10.2, repeat-0.9.1, colcon-core-0.8.3, cov-2.8.1\n'}
[9.246369] (-) TimerEvent: {}
[9.347341] (-) TimerEvent: {}
[9.449341] (-) TimerEvent: {}
[9.472011] (sf_pkg) StdoutLine: {'line': b'test/test_pep257.py \x1b[32m.\x1b[0m\x1b[31m                                                    [100%]\x1b[0m\n'}
[9.473435] (sf_pkg) StdoutLine: {'line': b'\n'}
[9.474320] (sf_pkg) StdoutLine: {'line': b'=================================== FAILURES ===================================\n'}
[9.475074] (sf_pkg) StdoutLine: {'line': b'\x1b[31m\x1b[1m________________________________ test_copyright ________________________________\x1b[0m\n'}
[9.476040] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_copyright.py\x1b[0m:23: in test_copyright\n'}
[9.539213] (tflite_pkg) Command: {'cmd': ['/usr/bin/python3', '-m', 'pytest'], 'cwd': '/home/pi/sunflower/src/tflite_pkg', 'env': {'LESSOPEN': '| /usr/bin/lesspipe %s', 'USER': 'pi', 'SSH_CLIENT': '211.217.28.227 58587 22', 'XDG_SESSION_TYPE': 'tty', 'GIT_ASKPASS': '/home/pi/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/extensions/git/dist/askpass.sh', 'SHLVL': '1', 'LD_LIBRARY_PATH': '/home/pi/sunflower/install/sunflower_interfaces/lib:/opt/ros/foxy/opt/yaml_cpp_vendor/lib:/opt/ros/foxy/opt/rviz_ogre_vendor/lib:/opt/ros/foxy/lib/aarch64-linux-gnu:/opt/ros/foxy/lib', 'BROWSER': '/home/pi/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/bin/helpers/browser.sh', 'MOTD_SHOWN': 'pam', 'HOME': '/home/pi', 'TERM_PROGRAM_VERSION': '1.68.1', 'VSCODE_IPC_HOOK_CLI': '/run/user/1000/vscode-ipc-8bde6f76-ba4e-4b4d-b68b-5b379bd0b432.sock', 'ROS_PYTHON_VERSION': '3', 'VSCODE_GIT_ASKPASS_MAIN': '/home/pi/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/extensions/git/dist/askpass-main.js', 'VSCODE_GIT_ASKPASS_NODE': '/home/pi/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/node', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/1000/bus', 'COLORTERM': 'truecolor', 'COLCON_PREFIX_PATH': '/home/pi/sunflower/install', 'ROS_DISTRO': 'foxy', 'LOGNAME': 'pi', '_': '/usr/bin/colcon', 'ROS_VERSION': '2', 'XDG_SESSION_CLASS': 'user', 'TERM': 'xterm-256color', 'XDG_SESSION_ID': '4', 'ROS_LOCALHOST_ONLY': '0', 'PATH': '/home/pi/.vscode-server/bin/30d9c6cd9483b2cc586687151bcbcd635f373630/bin/remote-cli:/home/pi/.local/bin:/opt/ros/foxy/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin', 'XDG_RUNTIME_DIR': '/run/user/1000', 'LANG': 'C.UTF-8', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:', 'VSCODE_GIT_IPC_HANDLE': '/run/user/1000/vscode-git-ad91e88160.sock', 'TERM_PROGRAM': 'vscode', 'AMENT_PREFIX_PATH': '/home/pi/sunflower/install/tflite_pkg:/home/pi/sunflower/install/test_pkg:/home/pi/sunflower/install/sunflower_interfaces:/home/pi/sunflower/install/sf_pkg:/opt/ros/foxy', 'SHELL': '/bin/bash', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'VSCODE_GIT_ASKPASS_EXTRA_ARGS': '', 'PWD': '/home/pi/sunflower/build/tflite_pkg', 'SSH_CONNECTION': '211.217.28.227 58587 210.91.28.223 22', 'XDG_DATA_DIRS': '/usr/local/share:/usr/share:/var/lib/snapd/desktop', 'PYTHONPATH': '/home/pi/sunflower/build/tflite_pkg:/home/pi/sunflower/install/tflite_pkg/lib/python3.8/site-packages:/home/pi/sunflower/build/test_pkg:/home/pi/sunflower/install/test_pkg/lib/python3.8/site-packages:/home/pi/sunflower/install/sunflower_interfaces/lib/python3.8/site-packages:/home/pi/sunflower/build/stem_pkg:/home/pi/sunflower/install/stem_pkg/lib/python3.8/site-packages:/home/pi/sunflower/build/sf_pkg:/home/pi/sunflower/install/sf_pkg/lib/python3.8/site-packages:/opt/ros/foxy/lib/python3.8/site-packages', 'COLCON': '1', 'CMAKE_PREFIX_PATH': '/home/pi/sunflower/install/sunflower_interfaces', 'PYTEST_ADDOPTS': '--tb=short --junit-xml=/home/pi/sunflower/build/tflite_pkg/pytest.xml --junit-prefix=tflite_pkg -o cache_dir=/home/pi/sunflower/build/tflite_pkg/.pytest_cache'}, 'shell': False}
[9.550792] (-) TimerEvent: {}
[9.559499] (stem_pkg) StdoutLine: {'line': b'\x1b[1mcollecting ... \x1b[0m\x1b[1m\n'}
[9.561356] (stem_pkg) StdoutLine: {'line': b'collected 3 items                                                              \x1b[0m\n'}
[9.562628] (stem_pkg) StdoutLine: {'line': b'\n'}
[9.607569] (sf_pkg) StdoutLine: {'line': b"    \x1b[34;01massert\x1b[39;49;00m rc == \x1b[34;01m0\x1b[39;49;00m, \x1b[33m'\x1b[39;49;00m\x1b[33mFound errors\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m\n"}
[9.608605] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found errors\x1b[0m\n'}
[9.609424] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[9.610298] (sf_pkg) StdoutLine: {'line': b'----------------------------- Captured stderr call -----------------------------\n'}
[9.611014] (sf_pkg) StdoutLine: {'line': b'launch/sf.launch.py: could not find copyright notice\n'}
[9.611862] (sf_pkg) StdoutLine: {'line': b'sf_pkg/calculator.py: could not find copyright notice\n'}
[9.612599] (sf_pkg) StdoutLine: {'line': b'sf_pkg/cmd_selector.py: could not find copyright notice\n'}
[9.613216] (sf_pkg) StdoutLine: {'line': b'sf_pkg/serial_talker.py: could not find copyright notice\n'}
[9.613780] (sf_pkg) StdoutLine: {'line': b'sf_pkg/tensor.py: could not find copyright notice\n'}
[9.614346] (sf_pkg) StdoutLine: {'line': b'sf_pkg/tensor_publisher.py: could not find copyright notice\n'}
[9.621916] (sf_pkg) StdoutLine: {'line': b'6 errors, checked 10 files\n'}
[9.622993] (sf_pkg) StdoutLine: {'line': b'\x1b[31m\x1b[1m_________________________________ test_flake8 __________________________________\x1b[0m\n'}
[9.623858] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_flake8.py\x1b[0m:23: in test_flake8\n'}
[9.624655] (sf_pkg) StdoutLine: {'line': b'    \x1b[34;01massert\x1b[39;49;00m rc == \x1b[34;01m0\x1b[39;49;00m, \\\n'}
[9.625410] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found 110 code style errors / warnings:\x1b[0m\n'}
[9.626233] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./setup.py:2:1: I100 Import statements are in the wrong order. 'import os' should be before 'from setuptools import setup' and in a different group.\x1b[0m\n"}
[9.627050] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./setup.py:2:1: I201 Missing newline between import groups. 'import os' is identified as Stdlib and 'from setuptools import setup' is identified as Third Party.\x1b[0m\n"}
[9.627888] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./setup.py:3:1: I100 Import statements are in the wrong order. 'from glob import glob' should be before 'import os'\x1b[0m\n"}
[9.628710] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./setup.py:26:13: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[9.637620] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./setup.py:27:13: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[9.638577] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./setup.py:28:13: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[9.639421] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./setup.py:29:13: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[9.640208] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/sf.launch.py:4:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[9.640877] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/sf.launch.py:10:13: E265 block comment should start with '# '\x1b[0m\n"}
[9.641755] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/sf.launch.py:21:32: E202 whitespace before ')'\x1b[0m\n"}
[9.642536] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/sf.launch.py:27:20: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[9.643361] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/sf.launch.py:27:29: E202 whitespace before ')'\x1b[0m\n"}
[9.644190] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/sf.launch.py:28:7: W292 no newline at end of file\x1b[0m\n'}
[9.653597] (-) TimerEvent: {}
[9.657111] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/serial_talker.py:5:1: I100 Import statements are in the wrong order. 'import serial' should be before 'from std_msgs.msg import String'\x1b[0m\n"}
[9.659460] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/serial_talker.py:5:14: W291 trailing whitespace\x1b[0m\n'}
[9.660765] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/serial_talker.py:11:5: E301 expected 1 blank line, found 0\x1b[0m\n'}
[9.662135] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/serial_talker.py:19:32: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[9.663371] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/serial_talker.py:22:9: E265 block comment should start with '# '\x1b[0m\n"}
[9.664488] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/serial_talker.py:23:9: E265 block comment should start with '# '\x1b[0m\n"}
[9.665664] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/serial_talker.py:40:1: E305 expected 2 blank lines after class or function definition, found 1\x1b[0m\n'}
[9.673195] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/serial_talker.py:40:26: E203 whitespace before ':'\x1b[0m\n"}
[9.675323] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/serial_talker.py:41:11: W292 no newline at end of file\x1b[0m\n'}
[9.677333] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/cmd_selector.py:6:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[9.677964] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/cmd_selector.py:8:5: E301 expected 1 blank line, found 0\x1b[0m\n'}
[9.678556] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/cmd_selector.py:43:1: E303 too many blank lines (3)\x1b[0m\n'}
[9.679139] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/cmd_selector.py:54:1: E305 expected 2 blank lines after class or function definition, found 1\x1b[0m\n'}
[9.679707] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/cmd_selector.py:54:26: E203 whitespace before ':'\x1b[0m\n"}
[9.680276] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/cmd_selector.py:55:11: W292 no newline at end of file\x1b[0m\n'}
[9.680838] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/calculator.py:5:1: I100 Import statements are in the wrong order. 'import math' should be before 'from std_msgs.msg import String' and in a different group.\x1b[0m\n"}
[9.681548] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/calculator.py:5:1: I201 Missing newline between import groups. 'import math' is identified as Stdlib and 'from std_msgs.msg import String' is identified as Third Party.\x1b[0m\n"}
[9.682155] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/calculator.py:7:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[9.682747] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/calculator.py:7:23: E203 whitespace before ':'\x1b[0m\n"}
[9.683302] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/calculator.py:8:1: CNL100 Class definition does not have a new line.\x1b[0m\n'}
[9.683874] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/calculator.py:21:35: E203 whitespace before ':'\x1b[0m\n"}
[9.687176] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/calculator.py:33:30: E201 whitespace after '('\x1b[0m\n"}
[9.687804] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/calculator.py:33:31: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[9.688463] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/calculator.py:36:61: C417 Unnecessary use of map - use a generator expression instead.\x1b[0m\n'}
[9.689119] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/calculator.py:62:1: W293 blank line contains whitespace\x1b[0m\n'}
[9.689767] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/calculator.py:65:10: E203 whitespace before ','\x1b[0m\n"}
[9.690352] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/calculator.py:65:39: C417 Unnecessary use of map - use a generator expression instead.\x1b[0m\n'}
[9.690935] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/calculator.py:74:31: E272 multiple spaces before keyword\x1b[0m\n'}
[9.691567] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/calculator.py:82:1: W293 blank line contains whitespace\x1b[0m\n'}
[9.692159] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/calculator.py:83:28: E203 whitespace before ':'\x1b[0m\n"}
[9.692815] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/calculator.py:84:40: C417 Unnecessary use of map - use a generator expression instead.\x1b[0m\n'}
[9.710415] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/calculator.py:84:52: E203 whitespace before ':'\x1b[0m\n"}
[9.711204] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/calculator.py:86:9: E115 expected an indented block (comment)\x1b[0m\n'}
[9.711997] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/calculator.py:88:13: E203 whitespace before ':'\x1b[0m\n"}
[9.712715] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/calculator.py:92:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[9.713456] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/calculator.py:92:20: E203 whitespace before ':'\x1b[0m\n"}
[9.714136] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/calculator.py:103:1: E305 expected 2 blank lines after class or function definition, found 1\x1b[0m\n'}
[9.714737] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/calculator.py:103:26: E203 whitespace before ':'\x1b[0m\n"}
[9.715354] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/calculator.py:104:11: W292 no newline at end of file\x1b[0m\n'}
[9.716225] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/tensor.py:5:1: I100 Import statements are in the wrong order. 'import cv2' should be before 'from sunflower_interfaces.msg import TfliteResult'\x1b[0m\n"}
[9.717112] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/tensor.py:7:1: I100 Import statements are in the wrong order. 'import numpy' should be before 'import tensorflow'\x1b[0m\n"}
[9.717781] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/tensor.py:9:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[9.718638] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/tensor.py:9:19: E203 whitespace before ':'\x1b[0m\n"}
[9.719519] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/tensor.py:10:1: CNL100 Class definition does not have a new line.\x1b[0m\n'}
[9.720159] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/tensor.py:20:46: E203 whitespace before ':'\x1b[0m\n"}
[9.721008] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/tensor.py:41:9: F841 local variable 'data' is assigned to but never used\x1b[0m\n"}
[9.721769] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/tensor.py:41:16: C408 Unnecessary list call - rewrite as a literal.\x1b[0m\n'}
[9.733379] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/tensor.py:53:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[9.734602] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/tensor.py:53:20: E203 whitespace before ':'\x1b[0m\n"}
[9.735697] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/tensor.py:55:50: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[9.736915] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/tensor.py:55:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[9.737990] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/tensor.py:67:1: E305 expected 2 blank lines after class or function definition, found 1\x1b[0m\n'}
[9.739001] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/tensor.py:67:26: E203 whitespace before ':'\x1b[0m\n"}
[9.739984] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/tensor.py:70:1: E265 block comment should start with '# '\x1b[0m\n"}
[9.741035] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/tensor.py:70:29: W292 no newline at end of file\x1b[0m\n'}
[9.742003] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/tensor.py:70:29: W292 no newline at end of file\x1b[0m\n'}
[9.742967] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/tensor.py:70:29: W292 no newline at end of file\x1b[0m\n'}
[9.743875] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:5:1: I100 Import statements are in the wrong order. 'import cv2' should be before 'from std_msgs.msg import String'\x1b[0m\n"}
[9.744741] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:7:1: I100 Import statements are in the wrong order. 'import numpy' should be before 'import tensorflow'\x1b[0m\n"}
[9.757918] (-) TimerEvent: {}
[9.758888] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:8:1: I100 Import statements are in the wrong order. 'import time' should be before 'import numpy' and in a different group.\x1b[0m\n"}
[9.763353] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:8:1: I201 Missing newline between import groups. 'import time' is identified as Stdlib and 'import numpy' is identified as Third Party.\x1b[0m\n"}
[9.764432] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:9:1: E265 block comment should start with '# '\x1b[0m\n"}
[9.765437] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:10:1: I201 Missing newline between import groups. 'import serial' is identified as Third Party and 'import time' is identified as Stdlib.\x1b[0m\n"}
[9.766396] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:13:28: E203 whitespace before ':'\x1b[0m\n"}
[9.767289] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:14:1: CNL100 Class definition does not have a new line.\x1b[0m\n'}
[9.768328] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:18:9: E265 block comment should start with '# '\x1b[0m\n"}
[9.769457] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:25:16: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[9.770426] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:25:19: E225 missing whitespace around operator\x1b[0m\n'}
[9.771405] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:25:80: E225 missing whitespace around operator\x1b[0m\n'}
[9.772404] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:25:80: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[9.773526] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:28:9: E265 block comment should start with '# '\x1b[0m\n"}
[9.775508] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:29:9: E265 block comment should start with '# '\x1b[0m\n"}
[9.776480] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:34:43: E203 whitespace before ':'\x1b[0m\n"}
[9.777535] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:38:65: E203 whitespace before ':'\x1b[0m\n"}
[9.778378] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:41:13: E265 block comment should start with '# '\x1b[0m\n"}
[9.779316] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:42:13: E265 block comment should start with '# '\x1b[0m\n"}
[9.779938] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:59:20: C408 Unnecessary list call - rewrite as a literal.\x1b[0m\n'}
[9.780711] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:61:32: E203 whitespace before ':'\x1b[0m\n"}
[9.781702] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:63:44: C417 Unnecessary use of map - use a generator expression instead.\x1b[0m\n'}
[9.782577] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:63:56: E203 whitespace before ':'\x1b[0m\n"}
[9.783585] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:65:13: E115 expected an indented block (comment)\x1b[0m\n'}
[9.784361] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:69:13: E203 whitespace before ':'\x1b[0m\n"}
[9.785265] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:72:46: E203 whitespace before ':'\x1b[0m\n"}
[9.786206] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:93:16: C408 Unnecessary list call - rewrite as a literal.\x1b[0m\n'}
[9.787171] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:95:28: E203 whitespace before ':'\x1b[0m\n"}
[9.788146] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:98:20: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[9.789349] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:102:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[9.790329] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:102:20: E203 whitespace before ':'\x1b[0m\n"}
[9.791220] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:104:50: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[9.792057] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:104:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[9.793258] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:107:5: E265 block comment should start with '# '\x1b[0m\n"}
[9.794328] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:118:1: E305 expected 2 blank lines after class or function definition, found 1\x1b[0m\n'}
[9.807536] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:118:26: E203 whitespace before ':'\x1b[0m\n"}
[9.808320] (sf_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:121:1: E265 block comment should start with '# '\x1b[0m\n"}
[9.809194] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:121:29: W292 no newline at end of file\x1b[0m\n'}
[9.810121] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:121:29: W292 no newline at end of file\x1b[0m\n'}
[9.811006] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./sf_pkg/tensor_publisher.py:121:29: W292 no newline at end of file\x1b[0m\n'}
[9.811840] (sf_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[9.812694] (sf_pkg) StdoutLine: {'line': b'----------------------------- Captured stdout call -----------------------------\n'}
[9.813743] (sf_pkg) StdoutLine: {'line': b'\n'}
[9.814505] (sf_pkg) StdoutLine: {'line': b"./setup.py:2:1: I100 Import statements are in the wrong order. 'import os' should be before 'from setuptools import setup' and in a different group.\n"}
[9.815451] (sf_pkg) StdoutLine: {'line': b'import os\n'}
[9.816287] (sf_pkg) StdoutLine: {'line': b'^\n'}
[9.825414] (sf_pkg) StdoutLine: {'line': b'\n'}
[9.826441] (sf_pkg) StdoutLine: {'line': b"./setup.py:2:1: I201 Missing newline between import groups. 'import os' is identified as Stdlib and 'from setuptools import setup' is identified as Third Party.\n"}
[9.827373] (sf_pkg) StdoutLine: {'line': b'import os\n'}
[9.828236] (sf_pkg) StdoutLine: {'line': b'^\n'}
[9.829025] (sf_pkg) StdoutLine: {'line': b'\n'}
[9.829571] (sf_pkg) StdoutLine: {'line': b"./setup.py:3:1: I100 Import statements are in the wrong order. 'from glob import glob' should be before 'import os'\n"}
[9.830124] (sf_pkg) StdoutLine: {'line': b'from glob import glob\n'}
[9.830964] (sf_pkg) StdoutLine: {'line': b'^\n'}
[9.831593] (sf_pkg) StdoutLine: {'line': b'\n'}
[9.832114] (sf_pkg) StdoutLine: {'line': b'./setup.py:26:13: Q000 Double quotes found but single quotes preferred\n'}
[9.832659] (sf_pkg) StdoutLine: {'line': b'            "serial_talker=sf_pkg.serial_talker:main",\n'}
[9.840830] (sf_pkg) StdoutLine: {'line': b'            ^\n'}
[9.841689] (sf_pkg) StdoutLine: {'line': b'\n'}
[9.842418] (sf_pkg) StdoutLine: {'line': b'./setup.py:27:13: Q000 Double quotes found but single quotes preferred\n'}
[9.843159] (sf_pkg) StdoutLine: {'line': b'            "cmd_selector=sf_pkg.cmd_selector:main",\n'}
[9.843646] (sf_pkg) StdoutLine: {'line': b'            ^\n'}
[9.844203] (sf_pkg) StdoutLine: {'line': b'\n'}
[9.845011] (sf_pkg) StdoutLine: {'line': b'./setup.py:28:13: Q000 Double quotes found but single quotes preferred\n'}
[9.845864] (sf_pkg) StdoutLine: {'line': b'            "calculator=sf_pkg.calculator:main",\n'}
[9.846753] (sf_pkg) StdoutLine: {'line': b'            ^\n'}
[9.847484] (sf_pkg) StdoutLine: {'line': b'\n'}
[9.848174] (sf_pkg) StdoutLine: {'line': b'./setup.py:29:13: Q000 Double quotes found but single quotes preferred\n'}
[9.848806] (sf_pkg) StdoutLine: {'line': b'            "tensor_publisher=sf_pkg.tensor_publisher:main",\n'}
[9.849478] (sf_pkg) StdoutLine: {'line': b'            ^\n'}
[9.850137] (sf_pkg) StdoutLine: {'line': b'\n'}
[9.850784] (sf_pkg) StdoutLine: {'line': b'./launch/sf.launch.py:4:1: E302 expected 2 blank lines, found 1\n'}
[9.851428] (sf_pkg) StdoutLine: {'line': b'def generate_launch_description():\n'}
[9.852055] (sf_pkg) StdoutLine: {'line': b'^\n'}
[9.852755] (sf_pkg) StdoutLine: {'line': b'\n'}
[9.853500] (sf_pkg) StdoutLine: {'line': b"./launch/sf.launch.py:10:13: E265 block comment should start with '# '\n"}
[9.854036] (sf_pkg) StdoutLine: {'line': b"            #output= 'screen'\n"}
[9.854573] (sf_pkg) StdoutLine: {'line': b'            ^\n'}
[9.855222] (sf_pkg) StdoutLine: {'line': b'\n'}
[9.855906] (sf_pkg) StdoutLine: {'line': b"./launch/sf.launch.py:21:32: E202 whitespace before ')'\n"}
[9.856613] (sf_pkg) StdoutLine: {'line': b"            name='cmd_selector' ),\n"}
[9.857591] (sf_pkg) StdoutLine: {'line': b'                               ^\n'}
[9.858309] (-) TimerEvent: {}
[9.858996] (sf_pkg) StdoutLine: {'line': b'\n'}
[9.860709] (sf_pkg) StdoutLine: {'line': b'./launch/sf.launch.py:27:20: E251 unexpected spaces around keyword / parameter equals\n'}
[9.863034] (sf_pkg) StdoutLine: {'line': b"            output= 'screen' )\n"}
[9.863883] (sf_pkg) StdoutLine: {'line': b'                   ^\n'}
[9.864633] (sf_pkg) StdoutLine: {'line': b'\n'}
[9.865276] (sf_pkg) StdoutLine: {'line': b"./launch/sf.launch.py:27:29: E202 whitespace before ')'\n"}
[9.866187] (sf_pkg) StdoutLine: {'line': b"            output= 'screen' )\n"}
[9.866983] (sf_pkg) StdoutLine: {'line': b'                            ^\n'}
[9.867895] (sf_pkg) StdoutLine: {'line': b'\n'}
[9.868616] (sf_pkg) StdoutLine: {'line': b'./launch/sf.launch.py:28:7: W292 no newline at end of file\n'}
[9.869435] (sf_pkg) StdoutLine: {'line': b'    ])      ^\n'}
[9.870207] (sf_pkg) StdoutLine: {'line': b'\n'}
[9.871101] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/serial_talker.py:5:1: I100 Import statements are in the wrong order. 'import serial' should be before 'from std_msgs.msg import String'\n"}
[9.871930] (sf_pkg) StdoutLine: {'line': b'import serial \n'}
[9.875840] (sf_pkg) StdoutLine: {'line': b'^\n'}
[9.879760] (sf_pkg) StdoutLine: {'line': b'\n'}
[9.880621] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/serial_talker.py:5:14: W291 trailing whitespace\n'}
[9.881821] (sf_pkg) StdoutLine: {'line': b'import serial \n'}
[9.882917] (sf_pkg) StdoutLine: {'line': b'             ^\n'}
[9.883820] (sf_pkg) StdoutLine: {'line': b'\n'}
[9.884790] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/serial_talker.py:11:5: E301 expected 1 blank line, found 0\n'}
[9.885716] (sf_pkg) StdoutLine: {'line': b'    def __init__(self):\n'}
[9.886696] (sf_pkg) StdoutLine: {'line': b'    ^\n'}
[9.887660] (sf_pkg) StdoutLine: {'line': b'\n'}
[9.888375] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/serial_talker.py:19:32: Q000 Double quotes found but single quotes preferred\n'}
[9.889180] (sf_pkg) StdoutLine: {'line': b'        self.get_logger().info("Serial connection started")\n'}
[9.889962] (sf_pkg) StdoutLine: {'line': b'                               ^\n'}
[9.890713] (sf_pkg) StdoutLine: {'line': b'\n'}
[9.891627] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/serial_talker.py:22:9: E265 block comment should start with '# '\n"}
[9.892587] (sf_pkg) StdoutLine: {'line': b'        #self.ser.write("^1*2*3*4*5*6*7*8*8".encode())\n'}
[9.893601] (sf_pkg) StdoutLine: {'line': b'        ^\n'}
[9.894425] (sf_pkg) StdoutLine: {'line': b'\n'}
[9.895200] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/serial_talker.py:23:9: E265 block comment should start with '# '\n"}
[9.896026] (sf_pkg) StdoutLine: {'line': b"        #self.get_logger().info('Transmitted')\n"}
[9.896925] (sf_pkg) StdoutLine: {'line': b'        ^\n'}
[9.897836] (sf_pkg) StdoutLine: {'line': b'\n'}
[9.899035] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/serial_talker.py:40:1: E305 expected 2 blank lines after class or function definition, found 1\n'}
[9.900012] (sf_pkg) StdoutLine: {'line': b"if __name__ == '__main__' :\n"}
[9.900799] (sf_pkg) StdoutLine: {'line': b'^\n'}
[9.901780] (sf_pkg) StdoutLine: {'line': b'\n'}
[9.902438] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/serial_talker.py:40:26: E203 whitespace before ':'\n"}
[9.903294] (sf_pkg) StdoutLine: {'line': b"if __name__ == '__main__' :\n"}
[9.904142] (sf_pkg) StdoutLine: {'line': b'                         ^\n'}
[9.905155] (sf_pkg) StdoutLine: {'line': b'\n'}
[9.906094] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/serial_talker.py:41:11: W292 no newline at end of file\n'}
[9.907053] (sf_pkg) StdoutLine: {'line': b'    main()          ^\n'}
[9.907871] (sf_pkg) StdoutLine: {'line': b'\n'}
[9.908491] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/cmd_selector.py:6:1: E302 expected 2 blank lines, found 1\n'}
[9.909456] (sf_pkg) StdoutLine: {'line': b'class CommandSelector(Node):\n'}
[9.910916] (sf_pkg) StdoutLine: {'line': b'^\n'}
[9.912384] (sf_pkg) StdoutLine: {'line': b'\n'}
[9.913873] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/cmd_selector.py:8:5: E301 expected 1 blank line, found 0\n'}
[9.915767] (sf_pkg) StdoutLine: {'line': b'    def __init__(self):\n'}
[9.917365] (sf_pkg) StdoutLine: {'line': b'    ^\n'}
[9.920332] (sf_pkg) StdoutLine: {'line': b'\n'}
[9.923208] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/cmd_selector.py:43:1: E303 too many blank lines (3)\n'}
[9.924798] (sf_pkg) StdoutLine: {'line': b'def main(args=None):\n'}
[9.927069] (sf_pkg) StdoutLine: {'line': b'^\n'}
[9.929892] (sf_pkg) StdoutLine: {'line': b'\n'}
[9.932472] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/cmd_selector.py:54:1: E305 expected 2 blank lines after class or function definition, found 1\n'}
[9.935136] (sf_pkg) StdoutLine: {'line': b"if __name__ == '__main__' :\n"}
[9.937199] (sf_pkg) StdoutLine: {'line': b'^\n'}
[9.939949] (sf_pkg) StdoutLine: {'line': b'\n'}
[9.942622] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/cmd_selector.py:54:26: E203 whitespace before ':'\n"}
[9.945802] (sf_pkg) StdoutLine: {'line': b"if __name__ == '__main__' :\n"}
[9.948235] (sf_pkg) StdoutLine: {'line': b'                         ^\n'}
[9.951259] (sf_pkg) StdoutLine: {'line': b'\n'}
[9.954074] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/cmd_selector.py:55:11: W292 no newline at end of file\n'}
[9.956857] (sf_pkg) StdoutLine: {'line': b'    main()          ^\n'}
[9.959677] (-) TimerEvent: {}
[9.961066] (sf_pkg) StdoutLine: {'line': b'\n'}
[9.967428] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/calculator.py:5:1: I100 Import statements are in the wrong order. 'import math' should be before 'from std_msgs.msg import String' and in a different group.\n"}
[9.969810] (sf_pkg) StdoutLine: {'line': b'import math\n'}
[9.972018] (sf_pkg) StdoutLine: {'line': b'^\n'}
[9.974643] (sf_pkg) StdoutLine: {'line': b'\n'}
[9.977293] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/calculator.py:5:1: I201 Missing newline between import groups. 'import math' is identified as Stdlib and 'from std_msgs.msg import String' is identified as Third Party.\n"}
[9.979320] (sf_pkg) StdoutLine: {'line': b'import math\n'}
[9.981333] (sf_pkg) StdoutLine: {'line': b'^\n'}
[9.983971] (sf_pkg) StdoutLine: {'line': b'\n'}
[9.986235] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/calculator.py:7:1: E302 expected 2 blank lines, found 1\n'}
[9.988095] (sf_pkg) StdoutLine: {'line': b'class Calculator(Node) :\n'}
[9.990093] (sf_pkg) StdoutLine: {'line': b'^\n'}
[9.992054] (sf_pkg) StdoutLine: {'line': b'\n'}
[9.994712] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/calculator.py:7:23: E203 whitespace before ':'\n"}
[9.997084] (sf_pkg) StdoutLine: {'line': b'class Calculator(Node) :\n'}
[9.999731] (sf_pkg) StdoutLine: {'line': b'                      ^\n'}
[10.002697] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.005102] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/calculator.py:8:1: CNL100 Class definition does not have a new line.\n'}
[10.007158] (sf_pkg) StdoutLine: {'line': b'    def __init__(self):\n'}
[10.009017] (sf_pkg) StdoutLine: {'line': b'^\n'}
[10.011286] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.013396] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/calculator.py:21:35: E203 whitespace before ':'\n"}
[10.015225] (sf_pkg) StdoutLine: {'line': b'    def publish_command(self, cmd) :\n'}
[10.017323] (sf_pkg) StdoutLine: {'line': b'                                  ^\n'}
[10.019142] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.020711] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/calculator.py:33:30: E201 whitespace after '('\n"}
[10.022561] (sf_pkg) StdoutLine: {'line': b'        self.publish_command( "*" + f\'{cmd}\')\n'}
[10.024248] (sf_pkg) StdoutLine: {'line': b'                             ^\n'}
[10.025756] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.027490] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/calculator.py:33:31: Q000 Double quotes found but single quotes preferred\n'}
[10.030018] (sf_pkg) StdoutLine: {'line': b'        self.publish_command( "*" + f\'{cmd}\')\n'}
[10.032646] (sf_pkg) StdoutLine: {'line': b'                              ^\n'}
[10.034460] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.035982] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/calculator.py:36:61: C417 Unnecessary use of map - use a generator expression instead.\n'}
[10.037597] (sf_pkg) StdoutLine: {'line': b'        n_x, n_y, n_con, l_x, l_y, l_con, r_x, r_y, r_con = map(lambda x: int(x), tensor)\n'}
[10.039626] (sf_pkg) StdoutLine: {'line': b'                                                            ^\n'}
[10.041380] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.043006] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/calculator.py:62:1: W293 blank line contains whitespace\n'}
[10.044606] (sf_pkg) StdoutLine: {'line': b'    \n'}
[10.046099] (sf_pkg) StdoutLine: {'line': b'^\n'}
[10.047542] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.049052] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/calculator.py:65:10: E203 whitespace before ','\n"}
[10.050814] (sf_pkg) StdoutLine: {'line': b'        _ , nose_x, nose_confidence = map(lambda x: int(x), nose)\n'}
[10.052391] (sf_pkg) StdoutLine: {'line': b'         ^\n'}
[10.054165] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.055817] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/calculator.py:65:39: C417 Unnecessary use of map - use a generator expression instead.\n'}
[10.057802] (sf_pkg) StdoutLine: {'line': b'        _ , nose_x, nose_confidence = map(lambda x: int(x), nose)\n'}
[10.059405] (sf_pkg) StdoutLine: {'line': b'                                      ^\n'}
[10.061135] (-) TimerEvent: {}
[10.062030] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.074929] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/calculator.py:74:31: E272 multiple spaces before keyword\n'}
[10.077115] (sf_pkg) StdoutLine: {'line': b'            elif (nose_x == 2)  or (nose_x == 3) or (nose_x == 4):\n'}
[10.079832] (sf_pkg) StdoutLine: {'line': b'                              ^\n'}
[10.083397] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.086229] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/calculator.py:82:1: W293 blank line contains whitespace\n'}
[10.088847] (sf_pkg) StdoutLine: {'line': b'    \n'}
[10.091247] (sf_pkg) StdoutLine: {'line': b'^\n'}
[10.093554] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.095584] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/calculator.py:83:28: E203 whitespace before ':'\n"}
[10.097756] (sf_pkg) StdoutLine: {'line': b'    def eye_dist(self, eye) :\n'}
[10.099461] (sf_pkg) StdoutLine: {'line': b'                           ^\n'}
[10.101252] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.103484] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/calculator.py:84:40: C417 Unnecessary use of map - use a generator expression instead.\n'}
[10.105519] (sf_pkg) StdoutLine: {'line': b'        l_x, l_y, l_c, r_x, r_y, r_c = map(lambda x : int(x), eye)\n'}
[10.107839] (sf_pkg) StdoutLine: {'line': b'                                       ^\n'}
[10.110290] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.113537] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/calculator.py:84:52: E203 whitespace before ':'\n"}
[10.115298] (sf_pkg) StdoutLine: {'line': b'        l_x, l_y, l_c, r_x, r_y, r_c = map(lambda x : int(x), eye)\n'}
[10.117310] (sf_pkg) StdoutLine: {'line': b'                                                   ^\n'}
[10.119095] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.120883] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/calculator.py:86:9: E115 expected an indented block (comment)\n'}
[10.122654] (sf_pkg) StdoutLine: {'line': b'        # length\xeb\xa5\xbc float\xec\x9c\xbc\xeb\xa1\x9c \xeb\xb3\xb4\xeb\x82\xb4\xeb\x8f\x84 \xeb\x90\x98\xec\xa5\xac?\n'}
[10.124367] (sf_pkg) StdoutLine: {'line': b'        ^\n'}
[10.125938] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.128645] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/calculator.py:88:13: E203 whitespace before ':'\n"}
[10.130086] (sf_pkg) StdoutLine: {'line': b'        else :\n'}
[10.131441] (sf_pkg) StdoutLine: {'line': b'            ^\n'}
[10.132875] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.134512] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/calculator.py:92:1: E302 expected 2 blank lines, found 1\n'}
[10.135874] (sf_pkg) StdoutLine: {'line': b'def main(args=None) :\n'}
[10.137394] (sf_pkg) StdoutLine: {'line': b'^\n'}
[10.140428] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.142135] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/calculator.py:92:20: E203 whitespace before ':'\n"}
[10.143962] (sf_pkg) StdoutLine: {'line': b'def main(args=None) :\n'}
[10.145650] (sf_pkg) StdoutLine: {'line': b'                   ^\n'}
[10.147288] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.148678] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/calculator.py:103:1: E305 expected 2 blank lines after class or function definition, found 1\n'}
[10.150238] (sf_pkg) StdoutLine: {'line': b"if __name__ == '__main__' :\n"}
[10.152918] (sf_pkg) StdoutLine: {'line': b'^\n'}
[10.155780] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.158853] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/calculator.py:103:26: E203 whitespace before ':'\n"}
[10.161529] (-) TimerEvent: {}
[10.162364] (sf_pkg) StdoutLine: {'line': b"if __name__ == '__main__' :\n"}
[10.166607] (sf_pkg) StdoutLine: {'line': b'                         ^\n'}
[10.169535] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.171291] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/calculator.py:104:11: W292 no newline at end of file\n'}
[10.172819] (sf_pkg) StdoutLine: {'line': b'    main()          ^\n'}
[10.175775] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.178610] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/tensor.py:5:1: I100 Import statements are in the wrong order. 'import cv2' should be before 'from sunflower_interfaces.msg import TfliteResult'\n"}
[10.180194] (sf_pkg) StdoutLine: {'line': b'import cv2\n'}
[10.182653] (sf_pkg) StdoutLine: {'line': b'^\n'}
[10.186170] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.189710] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/tensor.py:7:1: I100 Import statements are in the wrong order. 'import numpy' should be before 'import tensorflow'\n"}
[10.193335] (sf_pkg) StdoutLine: {'line': b'import numpy as np\n'}
[10.195021] (sf_pkg) StdoutLine: {'line': b'^\n'}
[10.196710] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.199763] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/tensor.py:9:1: E302 expected 2 blank lines, found 1\n'}
[10.202349] (sf_pkg) StdoutLine: {'line': b'class Tensor(Node) :\n'}
[10.206712] (sf_pkg) StdoutLine: {'line': b'^\n'}
[10.208565] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.210409] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/tensor.py:9:19: E203 whitespace before ':'\n"}
[10.211998] (sf_pkg) StdoutLine: {'line': b'class Tensor(Node) :\n'}
[10.213819] (sf_pkg) StdoutLine: {'line': b'                  ^\n'}
[10.215483] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.218894] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/tensor.py:10:1: CNL100 Class definition does not have a new line.\n'}
[10.222410] (sf_pkg) StdoutLine: {'line': b'    def __init__(self, interpreter, cap):\n'}
[10.224066] (sf_pkg) StdoutLine: {'line': b'^\n'}
[10.225923] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.228056] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/tensor.py:20:46: E203 whitespace before ':'\n"}
[10.231181] (sf_pkg) StdoutLine: {'line': b'    def tensor_result(self, interpreter, cap) :\n'}
[10.233738] (sf_pkg) StdoutLine: {'line': b'                                             ^\n'}
[10.235542] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.237320] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/tensor.py:41:9: F841 local variable 'data' is assigned to but never used\n"}
[10.239811] (sf_pkg) StdoutLine: {'line': b'        data = list()\n'}
[10.241877] (sf_pkg) StdoutLine: {'line': b'        ^\n'}
[10.243369] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.245089] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/tensor.py:41:16: C408 Unnecessary list call - rewrite as a literal.\n'}
[10.248030] (sf_pkg) StdoutLine: {'line': b'        data = list()\n'}
[10.250557] (sf_pkg) StdoutLine: {'line': b'               ^\n'}
[10.255935] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.258788] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/tensor.py:53:1: E302 expected 2 blank lines, found 1\n'}
[10.261809] (-) TimerEvent: {}
[10.263488] (sf_pkg) StdoutLine: {'line': b'def main(args=None) :\n'}
[10.267863] (sf_pkg) StdoutLine: {'line': b'^\n'}
[10.269729] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.271542] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/tensor.py:53:20: E203 whitespace before ':'\n"}
[10.273728] (sf_pkg) StdoutLine: {'line': b'def main(args=None) :\n'}
[10.277077] (sf_pkg) StdoutLine: {'line': b'                   ^\n'}
[10.280661] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.284192] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/tensor.py:55:50: Q000 Double quotes found but single quotes preferred\n'}
[10.286431] (sf_pkg) StdoutLine: {'line': b'    interpreter = tf.lite.Interpreter(model_path="lite-model_movenet_singlepose_lightning_3.tflite")\n'}
[10.288470] (sf_pkg) StdoutLine: {'line': b'                                                 ^\n'}
[10.290448] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.292308] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/tensor.py:55:100: E501 line too long (100 > 99 characters)\n'}
[10.294188] (sf_pkg) StdoutLine: {'line': b'    interpreter = tf.lite.Interpreter(model_path="lite-model_movenet_singlepose_lightning_3.tflite")\n'}
[10.296005] (sf_pkg) StdoutLine: {'line': b'                                                                                                   ^\n'}
[10.298794] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.301619] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/tensor.py:67:1: E305 expected 2 blank lines after class or function definition, found 1\n'}
[10.304363] (sf_pkg) StdoutLine: {'line': b"if __name__ == '__main__' :\n"}
[10.306935] (sf_pkg) StdoutLine: {'line': b'^\n'}
[10.309524] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.311063] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/tensor.py:67:26: E203 whitespace before ':'\n"}
[10.312637] (sf_pkg) StdoutLine: {'line': b"if __name__ == '__main__' :\n"}
[10.314636] (sf_pkg) StdoutLine: {'line': b'                         ^\n'}
[10.316351] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.317846] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/tensor.py:70:1: E265 block comment should start with '# '\n"}
[10.319393] (sf_pkg) StdoutLine: {'line': b'#\xec\xbd\x94, \xec\x99\xbc\xeb\x88\x88, \xec\x98\xa4\xeb\x88\x88, \xec\x99\xbc\xea\xb7\x80, \xec\x98\xa4\xea\xb7\x80, \xec\x99\xbc\xec\x96\xb4\xea\xb9\xa8, \xec\x98\xa4\xec\x96\xb4\xea\xb9\xa8^\n'}
[10.321013] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.322859] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/tensor.py:70:29: W292 no newline at end of file\n'}
[10.324345] (sf_pkg) StdoutLine: {'line': b'#\xec\xbd\x94, \xec\x99\xbc\xeb\x88\x88, \xec\x98\xa4\xeb\x88\x88, \xec\x99\xbc\xea\xb7\x80, \xec\x98\xa4\xea\xb7\x80, \xec\x99\xbc\xec\x96\xb4\xea\xb9\xa8, \xec\x98\xa4\xec\x96\xb4\xea\xb9\xa8                            ^\n'}
[10.327811] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.330371] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/tensor.py:70:29: W292 no newline at end of file\n'}
[10.331969] (sf_pkg) StdoutLine: {'line': b'#\xec\xbd\x94, \xec\x99\xbc\xeb\x88\x88, \xec\x98\xa4\xeb\x88\x88, \xec\x99\xbc\xea\xb7\x80, \xec\x98\xa4\xea\xb7\x80, \xec\x99\xbc\xec\x96\xb4\xea\xb9\xa8, \xec\x98\xa4\xec\x96\xb4\xea\xb9\xa8                            ^\n'}
[10.334150] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.335725] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/tensor.py:70:29: W292 no newline at end of file\n'}
[10.337319] (sf_pkg) StdoutLine: {'line': b'#\xec\xbd\x94, \xec\x99\xbc\xeb\x88\x88, \xec\x98\xa4\xeb\x88\x88, \xec\x99\xbc\xea\xb7\x80, \xec\x98\xa4\xea\xb7\x80, \xec\x99\xbc\xec\x96\xb4\xea\xb9\xa8, \xec\x98\xa4\xec\x96\xb4\xea\xb9\xa8                            ^\n'}
[10.339852] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.344372] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/tensor_publisher.py:5:1: I100 Import statements are in the wrong order. 'import cv2' should be before 'from std_msgs.msg import String'\n"}
[10.346770] (sf_pkg) StdoutLine: {'line': b'import cv2\n'}
[10.349172] (sf_pkg) StdoutLine: {'line': b'^\n'}
[10.351473] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.353845] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/tensor_publisher.py:7:1: I100 Import statements are in the wrong order. 'import numpy' should be before 'import tensorflow'\n"}
[10.355778] (sf_pkg) StdoutLine: {'line': b'import numpy as np\n'}
[10.357467] (sf_pkg) StdoutLine: {'line': b'^\n'}
[10.359078] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.360717] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/tensor_publisher.py:8:1: I100 Import statements are in the wrong order. 'import time' should be before 'import numpy' and in a different group.\n"}
[10.362410] (-) TimerEvent: {}
[10.363272] (sf_pkg) StdoutLine: {'line': b'import time\n'}
[10.368681] (sf_pkg) StdoutLine: {'line': b'^\n'}
[10.371184] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.373614] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/tensor_publisher.py:8:1: I201 Missing newline between import groups. 'import time' is identified as Stdlib and 'import numpy' is identified as Third Party.\n"}
[10.376102] (sf_pkg) StdoutLine: {'line': b'import time\n'}
[10.378180] (sf_pkg) StdoutLine: {'line': b'^\n'}
[10.379759] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.381473] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/tensor_publisher.py:9:1: E265 block comment should start with '# '\n"}
[10.383053] (sf_pkg) StdoutLine: {'line': b'#import I2C_LCD_driver\n'}
[10.384636] (sf_pkg) StdoutLine: {'line': b'^\n'}
[10.386907] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.389212] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/tensor_publisher.py:10:1: I201 Missing newline between import groups. 'import serial' is identified as Third Party and 'import time' is identified as Stdlib.\n"}
[10.391501] (sf_pkg) StdoutLine: {'line': b'import serial\n'}
[10.393930] (sf_pkg) StdoutLine: {'line': b'^\n'}
[10.396232] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.398665] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/tensor_publisher.py:13:28: E203 whitespace before ':'\n"}
[10.401115] (sf_pkg) StdoutLine: {'line': b'class TensorPublisher(Node) :\n'}
[10.402418] (sf_pkg) StdoutLine: {'line': b'                           ^\n'}
[10.403863] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.405643] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/tensor_publisher.py:14:1: CNL100 Class definition does not have a new line.\n'}
[10.407191] (sf_pkg) StdoutLine: {'line': b'    def __init__(self, interpreter, cap):\n'}
[10.408678] (sf_pkg) StdoutLine: {'line': b'^\n'}
[10.410316] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.411909] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/tensor_publisher.py:18:9: E265 block comment should start with '# '\n"}
[10.414044] (sf_pkg) StdoutLine: {'line': b'        #mylcd.lcd_display_string("",2)\n'}
[10.416139] (sf_pkg) StdoutLine: {'line': b'        ^\n'}
[10.418508] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.421342] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/tensor_publisher.py:25:16: Q000 Double quotes found but single quotes preferred\n'}
[10.423740] (sf_pkg) StdoutLine: {'line': b'        data = "!"+ \'{0:0>3}\'.format(f\'{small}\') + \'{0:0>3}\'.format(f\'{big}\') +"!"\n'}
[10.425453] (sf_pkg) StdoutLine: {'line': b'               ^\n'}
[10.427337] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.428754] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/tensor_publisher.py:25:19: E225 missing whitespace around operator\n'}
[10.443924] (sf_pkg) StdoutLine: {'line': b'        data = "!"+ \'{0:0>3}\'.format(f\'{small}\') + \'{0:0>3}\'.format(f\'{big}\') +"!"\n'}
[10.446121] (sf_pkg) StdoutLine: {'line': b'                  ^\n'}
[10.448244] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.450226] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/tensor_publisher.py:25:80: E225 missing whitespace around operator\n'}
[10.452032] (sf_pkg) StdoutLine: {'line': b'        data = "!"+ \'{0:0>3}\'.format(f\'{small}\') + \'{0:0>3}\'.format(f\'{big}\') +"!"\n'}
[10.453868] (sf_pkg) StdoutLine: {'line': b'                                                                               ^\n'}
[10.455822] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.457761] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/tensor_publisher.py:25:80: Q000 Double quotes found but single quotes preferred\n'}
[10.459962] (sf_pkg) StdoutLine: {'line': b'        data = "!"+ \'{0:0>3}\'.format(f\'{small}\') + \'{0:0>3}\'.format(f\'{big}\') +"!"\n'}
[10.466627] (-) TimerEvent: {}
[10.467640] (sf_pkg) StdoutLine: {'line': b'                                                                               ^\n'}
[10.481327] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.485235] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/tensor_publisher.py:28:9: E265 block comment should start with '# '\n"}
[10.486229] (sf_pkg) StdoutLine: {'line': b'        #mylcd.lcd_display_string("",2)\n'}
[10.487135] (sf_pkg) StdoutLine: {'line': b'        ^\n'}
[10.488227] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.489086] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/tensor_publisher.py:29:9: E265 block comment should start with '# '\n"}
[10.489754] (sf_pkg) StdoutLine: {'line': b'        #mylcd.lcd_display_string("Started",2)\n'}
[10.490407] (sf_pkg) StdoutLine: {'line': b'        ^\n'}
[10.491072] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.491666] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/tensor_publisher.py:34:43: E203 whitespace before ':'\n"}
[10.492265] (sf_pkg) StdoutLine: {'line': b'    def max_tensor(self, interpreter, cap) :\n'}
[10.492857] (sf_pkg) StdoutLine: {'line': b'                                          ^\n'}
[10.506542] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.508121] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/tensor_publisher.py:38:65: E203 whitespace before ':'\n"}
[10.510135] (sf_pkg) StdoutLine: {'line': b'        while (time.time() - start_time <= 5) and cap.isOpened() :\n'}
[10.511906] (sf_pkg) StdoutLine: {'line': b'                                                                ^\n'}
[10.513774] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.515721] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/tensor_publisher.py:41:13: E265 block comment should start with '# '\n"}
[10.517994] (sf_pkg) StdoutLine: {'line': b'            #mylcd.lcd_display_string("",2)\n'}
[10.519858] (sf_pkg) StdoutLine: {'line': b'            ^\n'}
[10.521984] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.523994] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/tensor_publisher.py:42:13: E265 block comment should start with '# '\n"}
[10.525860] (sf_pkg) StdoutLine: {'line': b"            #mylcd.lcd_display_string(f'Started in {now} sec',2)\n"}
[10.527845] (sf_pkg) StdoutLine: {'line': b'            ^\n'}
[10.529916] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.531700] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/tensor_publisher.py:59:20: C408 Unnecessary list call - rewrite as a literal.\n'}
[10.533698] (sf_pkg) StdoutLine: {'line': b'            data = list()\n'}
[10.535362] (sf_pkg) StdoutLine: {'line': b'                   ^\n'}
[10.537067] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.538773] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/tensor_publisher.py:61:32: E203 whitespace before ':'\n"}
[10.540412] (sf_pkg) StdoutLine: {'line': b'            for shape in shaped :\n'}
[10.542159] (sf_pkg) StdoutLine: {'line': b'                               ^\n'}
[10.544057] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.545911] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/tensor_publisher.py:63:44: C417 Unnecessary use of map - use a generator expression instead.\n'}
[10.547509] (sf_pkg) StdoutLine: {'line': b'            l_x, l_y, l_c, r_x, r_y, r_c = map(lambda x : x, data)\n'}
[10.549201] (sf_pkg) StdoutLine: {'line': b'                                           ^\n'}
[10.550885] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.552652] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/tensor_publisher.py:63:56: E203 whitespace before ':'\n"}
[10.554333] (sf_pkg) StdoutLine: {'line': b'            l_x, l_y, l_c, r_x, r_y, r_c = map(lambda x : x, data)\n'}
[10.556401] (sf_pkg) StdoutLine: {'line': b'                                                       ^\n'}
[10.558313] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.559729] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/tensor_publisher.py:65:13: E115 expected an indented block (comment)\n'}
[10.561363] (sf_pkg) StdoutLine: {'line': b'            # length\xeb\xa5\xbc float\xec\x9c\xbc\xeb\xa1\x9c \xeb\xb3\xb4\xeb\x82\xb4\xeb\x8f\x84 \xeb\x90\x98\xec\xa5\xac?\n'}
[10.562721] (sf_pkg) StdoutLine: {'line': b'            ^\n'}
[10.563954] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.565710] (sf_pkg) StderrLine: {'line': b'\x1b[33m=============================== warnings summary ===============================\x1b[0m\n'}
[10.567557] (-) TimerEvent: {}
[10.568389] (sf_pkg) StderrLine: {'line': b'../../../.local/lib/python3.8/site-packages/_pytest/nodes.py:633\n'}
[10.571988] (sf_pkg) StderrLine: {'line': b'  Warning: The (fspath: py.path.local) argument to Package is deprecated. Please use the (path: pathlib.Path) argument instead.\n'}
[10.573923] (sf_pkg) StderrLine: {'line': b'  See https://docs.pytest.org/en/latest/deprecations.html#fspath-argument-for-node-constructors-replaced-with-pathlib-path\n'}
[10.575643] (sf_pkg) StderrLine: {'line': b'\n'}
[10.577298] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/tensor_publisher.py:69:13: E203 whitespace before ':'\n"}
[10.579139] (sf_pkg) StdoutLine: {'line': b'        else :\n'}
[10.580710] (sf_pkg) StdoutLine: {'line': b'            ^\n'}
[10.582469] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.583996] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/tensor_publisher.py:72:46: E203 whitespace before ':'\n"}
[10.585663] (sf_pkg) StdoutLine: {'line': b'    def tensor_result(self, interpreter, cap) :\n'}
[10.587390] (sf_pkg) StdoutLine: {'line': b'                                             ^\n'}
[10.589176] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.591257] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/tensor_publisher.py:93:16: C408 Unnecessary list call - rewrite as a literal.\n'}
[10.594258] (sf_pkg) StdoutLine: {'line': b'        data = list()\n'}
[10.596604] (sf_pkg) StdoutLine: {'line': b'               ^\n'}
[10.598384] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.600014] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/tensor_publisher.py:95:28: E203 whitespace before ':'\n"}
[10.601701] (sf_pkg) StdoutLine: {'line': b'        for shape in shaped :\n'}
[10.603405] (sf_pkg) StdoutLine: {'line': b'                           ^\n'}
[10.605105] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.607017] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/tensor_publisher.py:98:20: Q000 Double quotes found but single quotes preferred\n'}
[10.609044] (sf_pkg) StdoutLine: {'line': b'        msg.data = "*".join(datastr)\n'}
[10.610890] (sf_pkg) StdoutLine: {'line': b'                   ^\n'}
[10.612861] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.614664] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/tensor_publisher.py:102:1: E302 expected 2 blank lines, found 1\n'}
[10.616404] (sf_pkg) StdoutLine: {'line': b'def main(args=None) :\n'}
[10.618244] (sf_pkg) StdoutLine: {'line': b'^\n'}
[10.620077] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.621832] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/tensor_publisher.py:102:20: E203 whitespace before ':'\n"}
[10.623549] (sf_pkg) StdoutLine: {'line': b'def main(args=None) :\n'}
[10.625266] (sf_pkg) StdoutLine: {'line': b'                   ^\n'}
[10.627140] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.628763] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/tensor_publisher.py:104:50: Q000 Double quotes found but single quotes preferred\n'}
[10.630350] (sf_pkg) StdoutLine: {'line': b'    interpreter = tf.lite.Interpreter(model_path="lite-model_movenet_singlepose_lightning_3.tflite")\n'}
[10.632176] (sf_pkg) StdoutLine: {'line': b'                                                 ^\n'}
[10.633862] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.635409] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/tensor_publisher.py:104:100: E501 line too long (100 > 99 characters)\n'}
[10.637281] (sf_pkg) StdoutLine: {'line': b'    interpreter = tf.lite.Interpreter(model_path="lite-model_movenet_singlepose_lightning_3.tflite")\n'}
[10.638967] (sf_pkg) StdoutLine: {'line': b'                                                                                                   ^\n'}
[10.640755] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.642567] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/tensor_publisher.py:107:5: E265 block comment should start with '# '\n"}
[10.644196] (sf_pkg) StdoutLine: {'line': b'    #mylcd = I2C_LCD_driver.lcd()\n'}
[10.645950] (sf_pkg) StdoutLine: {'line': b'    ^\n'}
[10.647534] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.649186] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/tensor_publisher.py:118:1: E305 expected 2 blank lines after class or function definition, found 1\n'}
[10.650984] (sf_pkg) StdoutLine: {'line': b"if __name__ == '__main__' :\n"}
[10.652503] (sf_pkg) StdoutLine: {'line': b'^\n'}
[10.654243] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.655891] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/tensor_publisher.py:118:26: E203 whitespace before ':'\n"}
[10.657626] (sf_pkg) StdoutLine: {'line': b"if __name__ == '__main__' :\n"}
[10.659315] (sf_pkg) StdoutLine: {'line': b'                         ^\n'}
[10.661002] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.662529] (sf_pkg) StdoutLine: {'line': b"./sf_pkg/tensor_publisher.py:121:1: E265 block comment should start with '# '\n"}
[10.664044] (sf_pkg) StdoutLine: {'line': b'#\xec\xbd\x94, \xec\x99\xbc\xeb\x88\x88, \xec\x98\xa4\xeb\x88\x88, \xec\x99\xbc\xea\xb7\x80, \xec\x98\xa4\xea\xb7\x80, \xec\x99\xbc\xec\x96\xb4\xea\xb9\xa8, \xec\x98\xa4\xec\x96\xb4\xea\xb9\xa8^\n'}
[10.665788] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.667551] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/tensor_publisher.py:121:29: W292 no newline at end of file\n'}
[10.669311] (-) TimerEvent: {}
[10.670312] (sf_pkg) StdoutLine: {'line': b'#\xec\xbd\x94, \xec\x99\xbc\xeb\x88\x88, \xec\x98\xa4\xeb\x88\x88, \xec\x99\xbc\xea\xb7\x80, \xec\x98\xa4\xea\xb7\x80, \xec\x99\xbc\xec\x96\xb4\xea\xb9\xa8, \xec\x98\xa4\xec\x96\xb4\xea\xb9\xa8                            ^\n'}
[10.674090] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.675903] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/tensor_publisher.py:121:29: W292 no newline at end of file\n'}
[10.677716] (sf_pkg) StdoutLine: {'line': b'#\xec\xbd\x94, \xec\x99\xbc\xeb\x88\x88, \xec\x98\xa4\xeb\x88\x88, \xec\x99\xbc\xea\xb7\x80, \xec\x98\xa4\xea\xb7\x80, \xec\x99\xbc\xec\x96\xb4\xea\xb9\xa8, \xec\x98\xa4\xec\x96\xb4\xea\xb9\xa8                            ^\n'}
[10.679438] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.681236] (sf_pkg) StdoutLine: {'line': b'./sf_pkg/tensor_publisher.py:121:29: W292 no newline at end of file\n'}
[10.683033] (sf_pkg) StdoutLine: {'line': b'#\xec\xbd\x94, \xec\x99\xbc\xeb\x88\x88, \xec\x98\xa4\xeb\x88\x88, \xec\x99\xbc\xea\xb7\x80, \xec\x98\xa4\xea\xb7\x80, \xec\x99\xbc\xec\x96\xb4\xea\xb9\xa8, \xec\x98\xa4\xec\x96\xb4\xea\xb9\xa8                            ^\n'}
[10.684807] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.686056] (sf_pkg) StdoutLine: {'line': b'3     C408 Unnecessary list call - rewrite as a literal.\n'}
[10.687218] (sf_pkg) StdoutLine: {'line': b'4     C417 Unnecessary use of map - use a generator expression instead.\n'}
[10.688424] (sf_pkg) StdoutLine: {'line': b'3     CNL100 Class definition does not have a new line.\n'}
[10.689818] (sf_pkg) StdoutLine: {'line': b'2     E115 expected an indented block (comment)\n'}
[10.691566] (sf_pkg) StdoutLine: {'line': b"1     E201 whitespace after '('\n"}
[10.693356] (sf_pkg) StdoutLine: {'line': b"2     E202 whitespace before ')'\n"}
[10.695176] (sf_pkg) StdoutLine: {'line': b"24    E203 whitespace before ':'\n"}
[10.696967] (sf_pkg) StdoutLine: {'line': b'2     E225 missing whitespace around operator\n'}
[10.698674] (sf_pkg) StdoutLine: {'line': b'1     E251 unexpected spaces around keyword / parameter equals\n'}
[10.700297] (sf_pkg) StdoutLine: {'line': b"12    E265 block comment should start with '# '\n"}
[10.701961] (sf_pkg) StdoutLine: {'line': b'1     E272 multiple spaces before keyword\n'}
[10.703482] (sf_pkg) StdoutLine: {'line': b'2     E301 expected 1 blank line, found 0\n'}
[10.705235] (sf_pkg) StdoutLine: {'line': b'7     E302 expected 2 blank lines, found 1\n'}
[10.706851] (sf_pkg) StdoutLine: {'line': b'1     E303 too many blank lines (3)\n'}
[10.708488] (sf_pkg) StdoutLine: {'line': b'5     E305 expected 2 blank lines after class or function definition, found 1\n'}
[10.710219] (sf_pkg) StdoutLine: {'line': b'2     E501 line too long (100 > 99 characters)\n'}
[10.711859] (sf_pkg) StdoutLine: {'line': b"1     F841 local variable 'data' is assigned to but never used\n"}
[10.713549] (sf_pkg) StdoutLine: {'line': b"9     I100 Import statements are in the wrong order. 'import os' should be before 'from setuptools import setup' and in a different group.\n"}
[10.715384] (sf_pkg) StdoutLine: {'line': b"4     I201 Missing newline between import groups. 'import os' is identified as Stdlib and 'from setuptools import setup' is identified as Third Party.\n"}
[10.717139] (sf_pkg) StdoutLine: {'line': b'11    Q000 Double quotes found but single quotes preferred\n'}
[10.719193] (sf_pkg) StdoutLine: {'line': b'1     W291 trailing whitespace\n'}
[10.720915] (sf_pkg) StdoutLine: {'line': b'10    W292 no newline at end of file\n'}
[10.722685] (sf_pkg) StdoutLine: {'line': b'2     W293 blank line contains whitespace\n'}
[10.724273] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.725632] (sf_pkg) StdoutLine: {'line': b'11 files checked\n'}
[10.726849] (sf_pkg) StdoutLine: {'line': b'110 errors\n'}
[10.728094] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.729413] (sf_pkg) StdoutLine: {'line': b"'C'-type errors: 10\n"}
[10.730292] (sf_pkg) StdoutLine: {'line': b"'E'-type errors: 62\n"}
[10.731248] (sf_pkg) StdoutLine: {'line': b"'F'-type errors: 1\n"}
[10.733168] (sf_pkg) StdoutLine: {'line': b"'I'-type errors: 13\n"}
[10.735016] (sf_pkg) StdoutLine: {'line': b"'Q'-type errors: 11\n"}
[10.736847] (sf_pkg) StdoutLine: {'line': b"'W'-type errors: 13\n"}
[10.738355] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.739507] (sf_pkg) StdoutLine: {'line': b'Checked files:\n'}
[10.740904] (sf_pkg) StdoutLine: {'line': b'\n'}
[10.742733] (sf_pkg) StdoutLine: {'line': b'* ./setup.py\n'}
[10.744417] (sf_pkg) StdoutLine: {'line': b'* ./launch/sf.launch.py\n'}
[10.746117] (sf_pkg) StdoutLine: {'line': b'* ./sf_pkg/serial_talker.py\n'}
[10.747790] (sf_pkg) StdoutLine: {'line': b'* ./sf_pkg/__init__.py\n'}
[10.749572] (sf_pkg) StdoutLine: {'line': b'* ./sf_pkg/cmd_selector.py\n'}
[10.751237] (sf_pkg) StdoutLine: {'line': b'* ./sf_pkg/calculator.py\n'}
[10.753135] (sf_pkg) StdoutLine: {'line': b'* ./sf_pkg/tensor.py\n'}
[10.754773] (sf_pkg) StdoutLine: {'line': b'* ./sf_pkg/tensor_publisher.py\n'}
[10.756509] (sf_pkg) StdoutLine: {'line': b'* ./test/test_flake8.py\n'}
[10.758400] (sf_pkg) StderrLine: {'line': b'../../../../../opt/ros/foxy/lib/python3.8/site-packages/launch_testing/pytest/hooks.py:179\n'}
[10.760283] (sf_pkg) StderrLine: {'line': b'../../../../../opt/ros/foxy/lib/python3.8/site-packages/launch_testing/pytest/hooks.py:179\n'}
[10.762037] (sf_pkg) StderrLine: {'line': b'../../../../../opt/ros/foxy/lib/python3.8/site-packages/launch_testing/pytest/hooks.py:179\n'}
[10.763691] (sf_pkg) StderrLine: {'line': b'  Warning: The (fspath: py.path.local) argument to Module is deprecated. Please use the (path: pathlib.Path) argument instead.\n'}
[10.765417] (sf_pkg) StderrLine: {'line': b'  See https://docs.pytest.org/en/latest/deprecations.html#fspath-argument-for-node-constructors-replaced-with-pathlib-path\n'}
[10.767328] (sf_pkg) StderrLine: {'line': b'\n'}
[10.769153] (sf_pkg) StderrLine: {'line': b'../../../../../usr/lib/python3/dist-packages/pydocstyle/config.py:6\n'}
[10.770749] (-) TimerEvent: {}
[10.771590] (sf_pkg) StderrLine: {'line': b"  Warning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3, and in 3.10 it will stop working\n"}
[10.775452] (sf_pkg) StderrLine: {'line': b'\n'}
[10.777163] (sf_pkg) StderrLine: {'line': b'-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n'}
[10.778860] (sf_pkg) StdoutLine: {'line': b'* ./test/test_copyright.py\n'}
[10.780473] (sf_pkg) StdoutLine: {'line': b'* ./test/test_pep257.py\n'}
[10.782129] (sf_pkg) StdoutLine: {'line': b'-------- generated xml file: /home/pi/sunflower/build/sf_pkg/pytest.xml --------\n'}
[10.783777] (sf_pkg) StdoutLine: {'line': b'=========================== short test summary info ============================\n'}
[10.785352] (sf_pkg) StdoutLine: {'line': b'FAILED test/test_copyright.py::test_copyright - AssertionError: Found errors\n'}
[10.787010] (sf_pkg) StdoutLine: {'line': b'FAILED test/test_flake8.py::test_flake8 - AssertionError: Found 110 code styl...\n'}
[10.788643] (sf_pkg) StdoutLine: {'line': b'\x1b[31m=================== \x1b[31m\x1b[1m2 failed\x1b[0m, \x1b[32m1 passed\x1b[0m, \x1b[33m5 warnings\x1b[0m\x1b[31m in 3.93s\x1b[0m\x1b[31m ====================\x1b[0m\n'}
[10.790114] (stem_pkg) StdoutLine: {'line': b'test/test_copyright.py \x1b[31mF\x1b[0m\x1b[31m                                                 [ 33%]\x1b[0m\n'}
[10.791571] (sf_pkg) CommandEnded: {'returncode': 1}
[10.794265] (sf_pkg) TestFailure: {'identifier': 'sf_pkg'}
[10.794763] (sf_pkg) JobEnded: {'identifier': 'sf_pkg', 'rc': 0}
[10.870986] (-) TimerEvent: {}
[10.972046] (-) TimerEvent: {}
[11.073141] (-) TimerEvent: {}
[11.174042] (-) TimerEvent: {}
[11.275074] (-) TimerEvent: {}
[11.376015] (-) TimerEvent: {}
[11.477024] (-) TimerEvent: {}
[11.583494] (-) TimerEvent: {}
[11.687055] (-) TimerEvent: {}
[11.788000] (-) TimerEvent: {}
[11.888981] (-) TimerEvent: {}
[11.989896] (-) TimerEvent: {}
[12.090781] (-) TimerEvent: {}
[12.191821] (-) TimerEvent: {}
[12.292661] (-) TimerEvent: {}
[12.376858] (stem_pkg) StdoutLine: {'line': b'test/test_flake8.py \x1b[31mF\x1b[0m\x1b[31m                                                    [ 66%]\x1b[0m\n'}
[12.392881] (-) TimerEvent: {}
[12.495175] (-) TimerEvent: {}
[12.546519] (test_pkg) StdoutLine: {'line': b'\x1b[1m============================= test session starts ==============================\x1b[0m\n'}
[12.548090] (test_pkg) StdoutLine: {'line': b'platform linux -- Python 3.8.10, pytest-7.1.2, pluggy-0.13.0\n'}
[12.587980] (test_pkg) StdoutLine: {'line': b'cachedir: /home/pi/sunflower/build/test_pkg/.pytest_cache\n'}
[12.589005] (test_pkg) StdoutLine: {'line': b'rootdir: /home/pi/sunflower/src/test_pkg\n'}
[12.589774] (test_pkg) StdoutLine: {'line': b'plugins: ament-flake8-0.9.6, ament-copyright-0.9.6, launch-testing-ros-0.11.6, ament-xmllint-0.9.6, ament-pep257-0.9.6, ament-lint-0.9.6, launch-testing-0.10.8, rerunfailures-10.2, repeat-0.9.1, colcon-core-0.8.3, cov-2.8.1\n'}
[12.595394] (-) TimerEvent: {}
[12.696354] (-) TimerEvent: {}
[12.732182] (stem_pkg) StdoutLine: {'line': b'test/test_pep257.py \x1b[32m.\x1b[0m\x1b[31m                                                    [100%]\x1b[0m\n'}
[12.733817] (stem_pkg) StdoutLine: {'line': b'\n'}
[12.735408] (stem_pkg) StdoutLine: {'line': b'=================================== FAILURES ===================================\n'}
[12.737655] (stem_pkg) StdoutLine: {'line': b'\x1b[31m\x1b[1m________________________________ test_copyright ________________________________\x1b[0m\n'}
[12.739434] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_copyright.py\x1b[0m:23: in test_copyright\n'}
[12.796595] (-) TimerEvent: {}
[12.848576] (stem_pkg) StdoutLine: {'line': b"    \x1b[34;01massert\x1b[39;49;00m rc == \x1b[34;01m0\x1b[39;49;00m, \x1b[33m'\x1b[39;49;00m\x1b[33mFound errors\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m\n"}
[12.849907] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found errors\x1b[0m\n'}
[12.851433] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[12.852887] (stem_pkg) StdoutLine: {'line': b'----------------------------- Captured stderr call -----------------------------\n'}
[12.853983] (stem_pkg) StdoutLine: {'line': b'launch/stem.launch.py: could not find copyright notice\n'}
[12.854773] (stem_pkg) StdoutLine: {'line': b'stem_pkg/I2C_LCD_driver.py: could not find copyright notice\n'}
[12.855506] (stem_pkg) StdoutLine: {'line': b'stem_pkg/async_serial_talker.py: could not find copyright notice\n'}
[12.856216] (stem_pkg) StdoutLine: {'line': b'stem_pkg/calculator.py: could not find copyright notice\n'}
[12.856887] (stem_pkg) StdoutLine: {'line': b'stem_pkg/cmd_selector.py: could not find copyright notice\n'}
[12.857501] (stem_pkg) StdoutLine: {'line': b'stem_pkg/controller.py: could not find copyright notice\n'}
[12.858174] (stem_pkg) StdoutLine: {'line': b'stem_pkg/serial_talker.py: could not find copyright notice\n'}
[12.858899] (stem_pkg) StdoutLine: {'line': b'stem_pkg/tensor.py: could not find copyright notice\n'}
[12.859742] (stem_pkg) StdoutLine: {'line': b'stem_pkg/tensor_publisher.py: could not find copyright notice\n'}
[12.860529] (stem_pkg) StdoutLine: {'line': b'stem_pkg/tester.py: could not find copyright notice\n'}
[12.861782] (stem_pkg) StdoutLine: {'line': b'10 errors, checked 14 files\n'}
[12.868066] (stem_pkg) StdoutLine: {'line': b'\x1b[31m\x1b[1m_________________________________ test_flake8 __________________________________\x1b[0m\n'}
[12.868841] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mtest/test_flake8.py\x1b[0m:23: in test_flake8\n'}
[12.869628] (stem_pkg) StdoutLine: {'line': b'    \x1b[34;01massert\x1b[39;49;00m rc == \x1b[34;01m0\x1b[39;49;00m, \\\n'}
[12.870349] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   AssertionError: Found 323 code style errors / warnings:\x1b[0m\n'}
[12.871250] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./setup.py:2:1: I100 Import statements are in the wrong order. 'import os' should be before 'from setuptools import setup' and in a different group.\x1b[0m\n"}
[12.871985] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./setup.py:2:1: I201 Missing newline between import groups. 'import os' is identified as Stdlib and 'from setuptools import setup' is identified as Third Party.\x1b[0m\n"}
[12.872573] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./setup.py:3:1: I100 Import statements are in the wrong order. 'from glob import glob' should be before 'import os'\x1b[0m\n"}
[12.872998] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./setup.py:26:13: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[12.873425] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./setup.py:27:13: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[12.873881] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./setup.py:28:13: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[12.874259] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./setup.py:29:13: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[12.874634] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./setup.py:30:13: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[12.887299] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./setup.py:31:13: E265 block comment should start with '# '\x1b[0m\n"}
[12.890773] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./setup.py:32:13: E265 block comment should start with '# '\x1b[0m\n"}
[12.892464] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./setup.py:35:2: W292 no newline at end of file\x1b[0m\n'}
[12.894753] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/stem.launch.py:4:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[12.896553] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/stem.launch.py:10:20: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[12.898357] (-) TimerEvent: {}
[12.898958] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/stem.launch.py:20:32: E202 whitespace before ')'\x1b[0m\n"}
[12.899643] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/stem.launch.py:26:20: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[12.901074] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./launch/stem.launch.py:26:29: E202 whitespace before ')'\x1b[0m\n"}
[12.901810] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./launch/stem.launch.py:27:7: W292 no newline at end of file\x1b[0m\n'}
[12.902734] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/serial_talker.py:5:1: I100 Import statements are in the wrong order. 'import serial' should be before 'from std_msgs.msg import String'\x1b[0m\n"}
[12.904135] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/serial_talker.py:5:14: W291 trailing whitespace\x1b[0m\n'}
[12.906729] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/serial_talker.py:11:5: E301 expected 1 blank line, found 0\x1b[0m\n'}
[12.910463] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/serial_talker.py:19:32: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[12.919942] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/serial_talker.py:22:9: E265 block comment should start with '# '\x1b[0m\n"}
[12.933520] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/serial_talker.py:23:9: E265 block comment should start with '# '\x1b[0m\n"}
[12.937815] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/serial_talker.py:40:1: E305 expected 2 blank lines after class or function definition, found 1\x1b[0m\n'}
[12.938589] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/serial_talker.py:40:26: E203 whitespace before ':'\x1b[0m\n"}
[12.939307] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/serial_talker.py:41:11: W292 no newline at end of file\x1b[0m\n'}
[12.940028] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:5:1: E402 module level import not at top of file\x1b[0m\n'}
[12.940761] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:6:1: E402 module level import not at top of file\x1b[0m\n'}
[12.941597] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:6:1: I100 Import statements are in the wrong order. 'from time import sleep' should be before 'import smbus' and in a different group.\x1b[0m\n"}
[12.942405] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:6:1: I201 Missing newline between import groups. 'from time import sleep' is identified as Stdlib and 'import smbus' is identified as Third Party.\x1b[0m\n"}
[12.943273] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:7:1: E302 expected 2 blank lines, found 0\x1b[0m\n'}
[12.944080] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:8:1: CNL100 Class definition does not have a new line.\x1b[0m\n'}
[12.944815] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:8:4: E111 indentation is not a multiple of four\x1b[0m\n'}
[12.945558] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:9:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[12.946302] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:10:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[12.946989] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:12:4: E301 expected 1 blank line, found 0\x1b[0m\n'}
[12.957159] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:12:4: E111 indentation is not a multiple of four\x1b[0m\n'}
[12.958122] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:13:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[12.959109] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:14:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[12.960120] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:16:4: E301 expected 1 blank line, found 0\x1b[0m\n'}
[12.960871] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:16:4: E111 indentation is not a multiple of four\x1b[0m\n'}
[12.961728] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:17:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[12.962475] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:18:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[12.963275] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:20:4: E301 expected 1 blank line, found 0\x1b[0m\n'}
[12.964026] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:20:4: E111 indentation is not a multiple of four\x1b[0m\n'}
[12.964702] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:21:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[12.965513] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:22:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[12.966159] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:24:4: E301 expected 1 blank line, found 0\x1b[0m\n'}
[12.966891] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:24:4: E111 indentation is not a multiple of four\x1b[0m\n'}
[12.967619] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:25:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[12.968332] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:27:4: E301 expected 1 blank line, found 0\x1b[0m\n'}
[12.969112] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:27:4: E111 indentation is not a multiple of four\x1b[0m\n'}
[12.969923] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:28:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[12.970621] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:30:4: E301 expected 1 blank line, found 0\x1b[0m\n'}
[12.971310] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:30:4: E111 indentation is not a multiple of four\x1b[0m\n'}
[12.972095] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:31:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[12.972876] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:33:1: E305 expected 2 blank lines after class or function definition, found 0\x1b[0m\n'}
[12.994637] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:68:16: E261 at least two spaces before inline comment\x1b[0m\n'}
[12.995837] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:69:16: E261 at least two spaces before inline comment\x1b[0m\n'}
[12.996899] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:70:16: E261 at least two spaces before inline comment\x1b[0m\n'}
[12.997715] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:71:1: E302 expected 2 blank lines, found 0\x1b[0m\n'}
[12.998424] (-) TimerEvent: {}
[12.999165] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:72:4: E114 indentation is not a multiple of four (comment)\x1b[0m\n'}
[12.999912] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:72:4: E265 block comment should start with '# '\x1b[0m\n"}
[13.000632] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:73:4: E111 indentation is not a multiple of four\x1b[0m\n'}
[13.001347] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:74:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[13.002018] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:75:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[13.002700] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:76:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[13.003376] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:77:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[13.004176] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:78:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[13.005122] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:79:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[13.006075] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:80:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[13.006972] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:81:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[13.007857] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:82:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[13.008830] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:83:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[13.017909] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:84:4: E114 indentation is not a multiple of four (comment)\x1b[0m\n'}
[13.018869] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:85:4: E301 expected 1 blank line, found 0\x1b[0m\n'}
[13.019713] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:85:4: E111 indentation is not a multiple of four\x1b[0m\n'}
[13.020547] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:86:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[13.021380] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:87:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[13.022052] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:88:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[13.022699] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:89:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[13.023362] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:90:4: E301 expected 1 blank line, found 0\x1b[0m\n'}
[13.024079] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:90:4: E111 indentation is not a multiple of four\x1b[0m\n'}
[13.024819] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:91:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[13.025552] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:92:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[13.026236] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:93:4: E114 indentation is not a multiple of four (comment)\x1b[0m\n'}
[13.026900] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:94:4: E301 expected 1 blank line, found 0\x1b[0m\n'}
[13.027560] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:94:4: E111 indentation is not a multiple of four\x1b[0m\n'}
[13.028210] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:95:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[13.028924] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:96:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[13.046222] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:97:4: E114 indentation is not a multiple of four (comment)\x1b[0m\n'}
[13.047130] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:98:4: E114 indentation is not a multiple of four (comment)\x1b[0m\n'}
[13.048020] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:99:4: E301 expected 1 blank line, found 0\x1b[0m\n'}
[13.048795] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:99:4: E111 indentation is not a multiple of four\x1b[0m\n'}
[13.049603] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:100:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[13.050307] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:101:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[13.051148] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:102:1: W293 blank line contains whitespace\x1b[0m\n'}
[13.052046] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:103:4: E114 indentation is not a multiple of four (comment)\x1b[0m\n'}
[13.052772] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:104:4: E111 indentation is not a multiple of four\x1b[0m\n'}
[13.053576] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:106:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[13.054290] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:108:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[13.055125] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:110:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[13.055901] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:112:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[13.056715] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:115:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[13.057563] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:116:4: E114 indentation is not a multiple of four (comment)\x1b[0m\n'}
[13.058356] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:117:4: E301 expected 1 blank line, found 0\x1b[0m\n'}
[13.059103] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:117:4: E111 indentation is not a multiple of four\x1b[0m\n'}
[13.059807] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:118:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[13.060534] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:119:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[13.082966] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:120:4: E114 indentation is not a multiple of four (comment)\x1b[0m\n'}
[13.086196] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:121:4: E301 expected 1 blank line, found 0\x1b[0m\n'}
[13.088771] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:121:4: E111 indentation is not a multiple of four\x1b[0m\n'}
[13.091274] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:121:31: E261 at least two spaces before inline comment\x1b[0m\n'}
[13.093676] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:122:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[13.095865] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:123:10: E111 indentation is not a multiple of four\x1b[0m\n'}
[13.097863] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:124:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[13.099654] (-) TimerEvent: {}
[13.102544] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:125:10: E111 indentation is not a multiple of four\x1b[0m\n'}
[13.104805] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:126:4: E114 indentation is not a multiple of four (comment)\x1b[0m\n'}
[13.109521] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:127:4: E301 expected 1 blank line, found 0\x1b[0m\n'}
[13.113268] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:127:4: E111 indentation is not a multiple of four\x1b[0m\n'}
[13.116980] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:128:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[13.118725] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:128:27: E703 statement ends with a semicolon\x1b[0m\n'}
[13.120571] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:129:7: E111 indentation is not a multiple of four\x1b[0m\n'}
[13.122440] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:130:10: E111 indentation is not a multiple of four\x1b[0m\n'}
[13.124159] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/I2C_LCD_driver.py:131:41: W292 no newline at end of file\x1b[0m\n'}
[13.126122] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:5:1: I100 Import statements are in the wrong order. 'import RPi.GPIO' should be before 'from std_msgs.msg import String'\x1b[0m\n"}
[13.128154] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:7:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[13.131714] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:7:23: E203 whitespace before ':'\x1b[0m\n"}
[13.134868] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:8:1: CNL100 Class definition does not have a new line.\x1b[0m\n'}
[13.138336] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:15:1: W293 blank line contains whitespace\x1b[0m\n'}
[13.141297] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:19:60: E261 at least two spaces before inline comment\x1b[0m\n'}
[13.142740] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:19:61: E262 inline comment should start with '# '\x1b[0m\n"}
[13.144195] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:20:60: E261 at least two spaces before inline comment\x1b[0m\n'}
[13.145831] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:20:61: E262 inline comment should start with '# '\x1b[0m\n"}
[13.147730] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:22:60: E261 at least two spaces before inline comment\x1b[0m\n'}
[13.149461] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:22:61: E262 inline comment should start with '# '\x1b[0m\n"}
[13.151217] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:23:60: E261 at least two spaces before inline comment\x1b[0m\n'}
[13.153336] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:23:61: E262 inline comment should start with '# '\x1b[0m\n"}
[13.156751] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:25:60: E261 at least two spaces before inline comment\x1b[0m\n'}
[13.160015] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:25:61: E262 inline comment should start with '# '\x1b[0m\n"}
[13.163150] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:26:60: E261 at least two spaces before inline comment\x1b[0m\n'}
[13.166193] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:26:61: E262 inline comment should start with '# '\x1b[0m\n"}
[13.167918] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:28:60: E261 at least two spaces before inline comment\x1b[0m\n'}
[13.169576] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:28:61: E262 inline comment should start with '# '\x1b[0m\n"}
[13.171211] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:30:9: E265 block comment should start with '# '\x1b[0m\n"}
[13.172706] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:31:9: E265 block comment should start with '# '\x1b[0m\n"}
[13.174235] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:33:57: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[13.175659] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:33:59: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[13.177289] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:34:57: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[13.180126] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:34:59: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[13.183575] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:36:57: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[13.186691] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:36:59: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[13.189533] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:37:57: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[13.191018] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:37:59: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[13.192302] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:39:57: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[13.194036] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:39:59: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[13.195645] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:40:57: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[13.197255] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:40:59: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[13.198840] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:42:57: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[13.200638] (-) TimerEvent: {}
[13.204283] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:42:59: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[13.208579] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:46:9: E265 block comment should start with '# '\x1b[0m\n"}
[13.212647] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:48:43: E203 whitespace before ':'\x1b[0m\n"}
[13.214421] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:55:32: E203 whitespace before ':'\x1b[0m\n"}
[13.216176] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:60:19: E203 whitespace before ':'\x1b[0m\n"}
[13.217840] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:61:17: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[13.219924] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:62:21: E203 whitespace before ':'\x1b[0m\n"}
[13.221733] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:63:17: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[13.223297] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:64:21: E203 whitespace before ':'\x1b[0m\n"}
[13.224974] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:65:17: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[13.228282] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:66:21: E203 whitespace before ':'\x1b[0m\n"}
[13.231835] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:67:17: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[13.234723] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:68:21: E203 whitespace before ':'\x1b[0m\n"}
[13.237177] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:69:17: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[13.239759] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:70:21: E203 whitespace before ':'\x1b[0m\n"}
[13.242042] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:71:17: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[13.243783] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:72:21: E203 whitespace before ':'\x1b[0m\n"}
[13.246173] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:73:17: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[13.248079] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:74:21: E203 whitespace before ':'\x1b[0m\n"}
[13.250673] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:75:17: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[13.253205] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:76:21: E203 whitespace before ':'\x1b[0m\n"}
[13.256707] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:77:17: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[13.261920] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:78:13: E203 whitespace before ':'\x1b[0m\n"}
[13.265040] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:83:20: E203 whitespace before ':'\x1b[0m\n"}
[13.267218] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:95:1: E305 expected 2 blank lines after class or function definition, found 1\x1b[0m\n'}
[13.269236] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:95:26: E203 whitespace before ':'\x1b[0m\n"}
[13.271182] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/controller.py:96:11: W292 no newline at end of file\x1b[0m\n'}
[13.272439] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/async_serial_talker.py:5:1: I100 Import statements are in the wrong order. 'import asyncio' should be before 'from std_msgs.msg import String' and in a different group.\x1b[0m\n"}
[13.273895] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/async_serial_talker.py:5:1: I201 Missing newline between import groups. 'import asyncio' is identified as Stdlib and 'from std_msgs.msg import String' is identified as Third Party.\x1b[0m\n"}
[13.275110] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/async_serial_talker.py:6:1: I201 Missing newline between import groups. 'import serial_asyncio' is identified as Third Party and 'import asyncio' is identified as Stdlib.\x1b[0m\n"}
[13.276364] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/async_serial_talker.py:11:5: E301 expected 1 blank line, found 0\x1b[0m\n'}
[13.278766] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/async_serial_talker.py:20:32: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[13.282502] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/async_serial_talker.py:29:100: E501 line too long (102 > 99 characters)\x1b[0m\n'}
[13.285230] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/async_serial_talker.py:38:38: E203 whitespace before ':'\x1b[0m\n"}
[13.288168] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/async_serial_talker.py:39:21: E203 whitespace before ':'\x1b[0m\n"}
[13.291138] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/async_serial_talker.py:42:9: E265 block comment should start with '# '\x1b[0m\n"}
[13.293717] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/async_serial_talker.py:57:1: E305 expected 2 blank lines after class or function definition, found 1\x1b[0m\n'}
[13.294940] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/async_serial_talker.py:57:26: E203 whitespace before ':'\x1b[0m\n"}
[13.296074] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/async_serial_talker.py:58:11: W292 no newline at end of file\x1b[0m\n'}
[13.297028] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/cmd_selector.py:6:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[13.298058] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/cmd_selector.py:8:5: E301 expected 1 blank line, found 0\x1b[0m\n'}
[13.298999] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/cmd_selector.py:44:1: E303 too many blank lines (3)\x1b[0m\n'}
[13.300331] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/cmd_selector.py:55:1: E305 expected 2 blank lines after class or function definition, found 1\x1b[0m\n'}
[13.301873] (-) TimerEvent: {}
[13.303994] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/cmd_selector.py:55:26: E203 whitespace before ':'\x1b[0m\n"}
[13.306654] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/cmd_selector.py:56:11: W292 no newline at end of file\x1b[0m\n'}
[13.311374] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/calculator.py:1:1: F401 'socket.NI_NUMERICHOST' imported but unused\x1b[0m\n"}
[13.315691] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/calculator.py:2:1: I201 Missing newline between import groups. 'import rclpy' is identified as Third Party and 'from socket import NI_NUMERICHOST' is identified as Stdlib.\x1b[0m\n"}
[13.319226] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/calculator.py:7:1: I100 Import statements are in the wrong order. 'import math' should be before 'from sunflower_interfaces.msg import TfliteResult' and in a different group.\x1b[0m\n"}
[13.321724] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/calculator.py:7:1: I201 Missing newline between import groups. 'import math' is identified as Stdlib and 'from sunflower_interfaces.msg import TfliteResult' is identified as Third Party.\x1b[0m\n"}
[13.323326] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/calculator.py:9:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[13.324987] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/calculator.py:9:23: E203 whitespace before ':'\x1b[0m\n"}
[13.326473] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/calculator.py:10:1: CNL100 Class definition does not have a new line.\x1b[0m\n'}
[13.327904] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/calculator.py:23:35: E203 whitespace before ':'\x1b[0m\n"}
[13.329331] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/calculator.py:31:30: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[13.330791] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/calculator.py:34:27: C417 Unnecessary use of map - use a generator expression instead.\x1b[0m\n'}
[13.332230] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/calculator.py:35:27: C417 Unnecessary use of map - use a generator expression instead.\x1b[0m\n'}
[13.334173] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/calculator.py:36:27: C417 Unnecessary use of map - use a generator expression instead.\x1b[0m\n'}
[13.341780] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/calculator.py:62:1: W293 blank line contains whitespace\x1b[0m\n'}
[13.343773] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/calculator.py:65:10: E203 whitespace before ','\x1b[0m\n"}
[13.345507] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/calculator.py:65:39: C417 Unnecessary use of map - use a generator expression instead.\x1b[0m\n'}
[13.346782] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/calculator.py:83:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[13.348041] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/calculator.py:83:20: E203 whitespace before ':'\x1b[0m\n"}
[13.349762] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/calculator.py:94:1: E305 expected 2 blank lines after class or function definition, found 1\x1b[0m\n'}
[13.351124] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/calculator.py:94:26: E203 whitespace before ':'\x1b[0m\n"}
[13.352445] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/calculator.py:95:11: W292 no newline at end of file\x1b[0m\n'}
[13.353952] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tensor.py:5:1: I100 Import statements are in the wrong order. 'import cv2' should be before 'from sunflower_interfaces.msg import TfliteResult'\x1b[0m\n"}
[13.356438] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tensor.py:7:1: I100 Import statements are in the wrong order. 'import numpy' should be before 'import tensorflow'\x1b[0m\n"}
[13.360250] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tensor.py:9:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[13.362456] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tensor.py:9:19: E203 whitespace before ':'\x1b[0m\n"}
[13.364392] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tensor.py:10:1: CNL100 Class definition does not have a new line.\x1b[0m\n'}
[13.366740] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tensor.py:20:46: E203 whitespace before ':'\x1b[0m\n"}
[13.369358] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tensor.py:41:9: F841 local variable 'data' is assigned to but never used\x1b[0m\n"}
[13.370838] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tensor.py:41:16: C408 Unnecessary list call - rewrite as a literal.\x1b[0m\n'}
[13.372412] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tensor.py:53:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[13.374070] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tensor.py:53:20: E203 whitespace before ':'\x1b[0m\n"}
[13.376390] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tensor.py:55:50: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[13.383646] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tensor.py:55:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[13.386143] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tensor.py:67:1: E305 expected 2 blank lines after class or function definition, found 1\x1b[0m\n'}
[13.388984] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tensor.py:67:26: E203 whitespace before ':'\x1b[0m\n"}
[13.391189] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tensor.py:70:1: E265 block comment should start with '# '\x1b[0m\n"}
[13.393987] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tensor.py:70:29: W292 no newline at end of file\x1b[0m\n'}
[13.397448] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tensor.py:70:29: W292 no newline at end of file\x1b[0m\n'}
[13.398918] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tensor.py:70:29: W292 no newline at end of file\x1b[0m\n'}
[13.400594] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:5:1: I100 Import statements are in the wrong order. 'from pynput import keyboard' should be before 'from std_msgs.msg import String'\x1b[0m\n"}
[13.402311] (-) TimerEvent: {}
[13.404834] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:7:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[13.407268] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:7:19: E203 whitespace before ':'\x1b[0m\n"}
[13.410105] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:8:1: CNL100 Class definition does not have a new line.\x1b[0m\n'}
[13.413198] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:16:21: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[13.415637] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:16:23: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[13.417918] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:17:23: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[13.420027] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:17:25: E251 unexpected spaces around keyword / parameter equals\x1b[0m\n'}
[13.423173] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:21:43: E203 whitespace before ':'\x1b[0m\n"}
[13.425816] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:29:1: B901 blind except: statement\x1b[0m\n'}
[13.427482] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:29:9: E722 do not use bare 'except'\x1b[0m\n"}
[13.428981] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:32:32: E203 whitespace before ':'\x1b[0m\n"}
[13.431624] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:37:17: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[13.434530] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:37:20: E203 whitespace before ':'\x1b[0m\n"}
[13.438172] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:38:17: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[13.441355] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:39:19: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[13.442991] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:39:22: E203 whitespace before ':'\x1b[0m\n"}
[13.444551] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:40:17: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[13.446397] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:41:19: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[13.447985] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:41:22: E203 whitespace before ':'\x1b[0m\n"}
[13.449743] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:42:17: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[13.451480] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:43:19: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[13.453336] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:43:22: E203 whitespace before ':'\x1b[0m\n"}
[13.460084] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:44:17: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[13.465969] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:45:19: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[13.467568] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:45:22: E203 whitespace before ':'\x1b[0m\n"}
[13.481341] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:46:17: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[13.483847] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:47:19: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[13.486798] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:47:22: E203 whitespace before ':'\x1b[0m\n"}
[13.489305] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:48:17: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[13.491376] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:49:13: E203 whitespace before ':'\x1b[0m\n"}
[13.493130] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:57:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[13.494544] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:57:20: E203 whitespace before ':'\x1b[0m\n"}
[13.496530] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:68:1: E305 expected 2 blank lines after class or function definition, found 1\x1b[0m\n'}
[13.498054] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:68:26: E203 whitespace before ':'\x1b[0m\n"}
[13.499647] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tester.py:69:11: W292 no newline at end of file\x1b[0m\n'}
[13.501230] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:5:1: I100 Import statements are in the wrong order. 'import cv2' should be before 'from std_msgs.msg import String'\x1b[0m\n"}
[13.506892] (-) TimerEvent: {}
[13.508255] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:7:1: I100 Import statements are in the wrong order. 'import numpy' should be before 'import tensorflow'\x1b[0m\n"}
[13.510277] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:8:1: I100 Import statements are in the wrong order. 'import time' should be before 'import numpy' and in a different group.\x1b[0m\n"}
[13.511890] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:8:1: I201 Missing newline between import groups. 'import time' is identified as Stdlib and 'import numpy' is identified as Third Party.\x1b[0m\n"}
[13.513557] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:9:1: I201 Missing newline between import groups. 'import I2C_LCD_driver' is identified as Third Party and 'import time' is identified as Stdlib.\x1b[0m\n"}
[13.515289] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:12:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[13.516723] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:12:28: E203 whitespace before ':'\x1b[0m\n"}
[13.519195] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:13:1: CNL100 Class definition does not have a new line.\x1b[0m\n'}
[13.523022] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:17:34: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[13.528280] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:17:36: E231 missing whitespace after ','\x1b[0m\n"}
[13.530089] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:23:16: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[13.533911] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:23:19: E225 missing whitespace around operator\x1b[0m\n'}
[13.535446] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:23:80: E225 missing whitespace around operator\x1b[0m\n'}
[13.537391] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:23:80: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[13.540191] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:25:34: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[13.543476] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:25:36: E231 missing whitespace after ','\x1b[0m\n"}
[13.546624] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:26:34: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[13.553519] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:26:43: E231 missing whitespace after ','\x1b[0m\n"}
[13.555078] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:31:50: E203 whitespace before ':'\x1b[0m\n"}
[13.556621] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:35:16: F821 undefined name 'now'\x1b[0m\n"}
[13.558357] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:35:44: E203 whitespace before ':'\x1b[0m\n"}
[13.559801] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:38:38: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[13.561880] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:38:40: E231 missing whitespace after ','\x1b[0m\n"}
[13.565260] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:39:61: E231 missing whitespace after ','\x1b[0m\n"}
[13.568471] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:56:20: C408 Unnecessary list call - rewrite as a literal.\x1b[0m\n'}
[13.575478] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:58:32: E203 whitespace before ':'\x1b[0m\n"}
[13.577403] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:60:44: C417 Unnecessary use of map - use a generator expression instead.\x1b[0m\n'}
[13.579440] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:60:56: E203 whitespace before ':'\x1b[0m\n"}
[13.581100] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:62:13: E115 expected an indented block (comment)\x1b[0m\n'}
[13.583004] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:66:13: E203 whitespace before ':'\x1b[0m\n"}
[13.584756] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:69:46: E203 whitespace before ':'\x1b[0m\n"}
[13.587506] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:90:16: C408 Unnecessary list call - rewrite as a literal.\x1b[0m\n'}
[13.589662] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:92:28: E203 whitespace before ':'\x1b[0m\n"}
[13.591613] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:95:20: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[13.593520] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:96:20: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[13.599548] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:100:1: E302 expected 2 blank lines, found 1\x1b[0m\n'}
[13.601275] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:100:20: E203 whitespace before ':'\x1b[0m\n"}
[13.603002] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:102:50: Q000 Double quotes found but single quotes preferred\x1b[0m\n'}
[13.604594] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:102:100: E501 line too long (100 > 99 characters)\x1b[0m\n'}
[13.606656] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:116:1: E305 expected 2 blank lines after class or function definition, found 1\x1b[0m\n'}
[13.608192] (-) TimerEvent: {}
[13.608987] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:116:26: E203 whitespace before ':'\x1b[0m\n"}
[13.611345] (stem_pkg) StdoutLine: {'line': b"\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:119:1: E265 block comment should start with '# '\x1b[0m\n"}
[13.613688] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:119:29: W292 no newline at end of file\x1b[0m\n'}
[13.615882] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:119:29: W292 no newline at end of file\x1b[0m\n'}
[13.617804] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE     ./stem_pkg/tensor_publisher.py:119:29: W292 no newline at end of file\x1b[0m\n'}
[13.619248] (stem_pkg) StdoutLine: {'line': b'\x1b[1m\x1b[31mE   assert 1 == 0\x1b[0m\n'}
[13.620750] (stem_pkg) StdoutLine: {'line': b'----------------------------- Captured stdout call -----------------------------\n'}
[13.622330] (stem_pkg) StdoutLine: {'line': b'\n'}
[13.624063] (stem_pkg) StdoutLine: {'line': b"./setup.py:2:1: I100 Import statements are in the wrong order. 'import os' should be before 'from setuptools import setup' and in a different group.\n"}
[13.625450] (stem_pkg) StdoutLine: {'line': b'import os\n'}
[13.631032] (stem_pkg) StdoutLine: {'line': b'^\n'}
[13.633113] (stem_pkg) StdoutLine: {'line': b'\n'}
[13.635144] (stem_pkg) StdoutLine: {'line': b"./setup.py:2:1: I201 Missing newline between import groups. 'import os' is identified as Stdlib and 'from setuptools import setup' is identified as Third Party.\n"}
[13.637257] (stem_pkg) StdoutLine: {'line': b'import os\n'}
[13.638771] (stem_pkg) StdoutLine: {'line': b'^\n'}
[13.640226] (stem_pkg) StdoutLine: {'line': b'\n'}
[13.641812] (stem_pkg) StdoutLine: {'line': b"./setup.py:3:1: I100 Import statements are in the wrong order. 'from glob import glob' should be before 'import os'\n"}
[13.643258] (stem_pkg) StdoutLine: {'line': b'from glob import glob\n'}
[13.644705] (stem_pkg) StdoutLine: {'line': b'^\n'}
[13.646225] (stem_pkg) StdoutLine: {'line': b'\n'}
[13.647631] (stem_pkg) StdoutLine: {'line': b'./setup.py:26:13: Q000 Double quotes found but single quotes preferred\n'}
[13.649155] (stem_pkg) StdoutLine: {'line': b'            "serial_talker=stem_pkg.serial_talker:main",\n'}
[13.651414] (stem_pkg) StdoutLine: {'line': b'            ^\n'}
[13.653796] (stem_pkg) StdoutLine: {'line': b'\n'}
[13.656037] (stem_pkg) StdoutLine: {'line': b'./setup.py:27:13: Q000 Double quotes found but single quotes preferred\n'}
[13.658320] (stem_pkg) StdoutLine: {'line': b'            "cmd_selector=stem_pkg.cmd_selector:main",\n'}
[13.660509] (stem_pkg) StdoutLine: {'line': b'            ^\n'}
[13.666897] (stem_pkg) StdoutLine: {'line': b'\n'}
[13.669120] (stem_pkg) StdoutLine: {'line': b'./setup.py:28:13: Q000 Double quotes found but single quotes preferred\n'}
[13.670633] (stem_pkg) StdoutLine: {'line': b'            "calculator=stem_pkg.calculator:main",\n'}
[13.672462] (stem_pkg) StdoutLine: {'line': b'            ^\n'}
[13.674295] (stem_pkg) StdoutLine: {'line': b'\n'}
[13.675703] (stem_pkg) StdoutLine: {'line': b'./setup.py:29:13: Q000 Double quotes found but single quotes preferred\n'}
[13.677178] (stem_pkg) StdoutLine: {'line': b'            "tensor_publisher=stem_pkg.tensor_publisher:main",\n'}
[13.678629] (stem_pkg) StdoutLine: {'line': b'            ^\n'}
[13.680050] (stem_pkg) StdoutLine: {'line': b'\n'}
[13.681713] (stem_pkg) StdoutLine: {'line': b'./setup.py:30:13: Q000 Double quotes found but single quotes preferred\n'}
[13.683890] (stem_pkg) StdoutLine: {'line': b'            "tensor=stem_pkg.tensor:main"\n'}
[13.685699] (stem_pkg) StdoutLine: {'line': b'            ^\n'}
[13.687461] (stem_pkg) StdoutLine: {'line': b'\n'}
[13.693300] (stem_pkg) StdoutLine: {'line': b"./setup.py:31:13: E265 block comment should start with '# '\n"}
[13.695295] (stem_pkg) StdoutLine: {'line': b'            #"tester=stem_pkg.tester:main",\n'}
[13.697279] (stem_pkg) StdoutLine: {'line': b'            ^\n'}
[13.700501] (stem_pkg) StdoutLine: {'line': b'\n'}
[13.702520] (stem_pkg) StdoutLine: {'line': b"./setup.py:32:13: E265 block comment should start with '# '\n"}
[13.705132] (stem_pkg) StdoutLine: {'line': b'            #"controller=stem_pkg.controller:main"\n'}
[13.707682] (stem_pkg) StdoutLine: {'line': b'            ^\n'}
[13.711083] (-) TimerEvent: {}
[13.712906] (stem_pkg) StdoutLine: {'line': b'\n'}
[13.716356] (stem_pkg) StdoutLine: {'line': b'./setup.py:35:2: W292 no newline at end of file\n'}
[13.725556] (stem_pkg) StdoutLine: {'line': b') ^\n'}
[13.726180] (stem_pkg) StdoutLine: {'line': b'\n'}
[13.726842] (stem_pkg) StdoutLine: {'line': b'./launch/stem.launch.py:4:1: E302 expected 2 blank lines, found 1\n'}
[13.727532] (stem_pkg) StdoutLine: {'line': b'def generate_launch_description():\n'}
[13.728426] (stem_pkg) StdoutLine: {'line': b'^\n'}
[13.729251] (stem_pkg) StdoutLine: {'line': b'\n'}
[13.730059] (stem_pkg) StdoutLine: {'line': b'./launch/stem.launch.py:10:20: E251 unexpected spaces around keyword / parameter equals\n'}
[13.730816] (stem_pkg) StdoutLine: {'line': b"            output= 'screen'),\n"}
[13.731572] (stem_pkg) StdoutLine: {'line': b'                   ^\n'}
[13.732380] (stem_pkg) StdoutLine: {'line': b'\n'}
[13.733153] (stem_pkg) StdoutLine: {'line': b"./launch/stem.launch.py:20:32: E202 whitespace before ')'\n"}
[13.733993] (stem_pkg) StdoutLine: {'line': b"            name='cmd_selector' ),\n"}
[13.734693] (stem_pkg) StdoutLine: {'line': b'                               ^\n'}
[13.735388] (stem_pkg) StdoutLine: {'line': b'\n'}
[13.736115] (stem_pkg) StdoutLine: {'line': b'./launch/stem.launch.py:26:20: E251 unexpected spaces around keyword / parameter equals\n'}
[13.736802] (stem_pkg) StdoutLine: {'line': b"            output= 'screen' )\n"}
[13.749862] (stem_pkg) StdoutLine: {'line': b'                   ^\n'}
[13.750624] (stem_pkg) StdoutLine: {'line': b'\n'}
[13.751514] (stem_pkg) StdoutLine: {'line': b"./launch/stem.launch.py:26:29: E202 whitespace before ')'\n"}
[13.752307] (stem_pkg) StdoutLine: {'line': b"            output= 'screen' )\n"}
[13.753131] (stem_pkg) StdoutLine: {'line': b'                            ^\n'}
[13.754307] (stem_pkg) StdoutLine: {'line': b'\n'}
[13.755217] (stem_pkg) StdoutLine: {'line': b'./launch/stem.launch.py:27:7: W292 no newline at end of file\n'}
[13.756019] (stem_pkg) StdoutLine: {'line': b'    ])      ^\n'}
[13.757104] (stem_pkg) StdoutLine: {'line': b'\n'}
[13.757985] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/serial_talker.py:5:1: I100 Import statements are in the wrong order. 'import serial' should be before 'from std_msgs.msg import String'\n"}
[13.758775] (stem_pkg) StdoutLine: {'line': b'import serial \n'}
[13.759568] (stem_pkg) StdoutLine: {'line': b'^\n'}
[13.760455] (stem_pkg) StdoutLine: {'line': b'\n'}
[13.773378] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/serial_talker.py:5:14: W291 trailing whitespace\n'}
[13.774216] (stem_pkg) StdoutLine: {'line': b'import serial \n'}
[13.774877] (stem_pkg) StdoutLine: {'line': b'             ^\n'}
[13.775519] (stem_pkg) StdoutLine: {'line': b'\n'}
[13.776176] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/serial_talker.py:11:5: E301 expected 1 blank line, found 0\n'}
[13.776905] (stem_pkg) StdoutLine: {'line': b'    def __init__(self):\n'}
[13.777744] (stem_pkg) StdoutLine: {'line': b'    ^\n'}
[13.778571] (stem_pkg) StdoutLine: {'line': b'\n'}
[13.779334] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/serial_talker.py:19:32: Q000 Double quotes found but single quotes preferred\n'}
[13.780037] (stem_pkg) StdoutLine: {'line': b'        self.get_logger().info("Serial connection started")\n'}
[13.780673] (stem_pkg) StdoutLine: {'line': b'                               ^\n'}
[13.781451] (stem_pkg) StdoutLine: {'line': b'\n'}
[13.782245] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/serial_talker.py:22:9: E265 block comment should start with '# '\n"}
[13.782884] (stem_pkg) StdoutLine: {'line': b'        #self.ser.write("^1*2*3*4*5*6*7*8*8".encode())\n'}
[13.783583] (stem_pkg) StdoutLine: {'line': b'        ^\n'}
[13.784319] (stem_pkg) StdoutLine: {'line': b'\n'}
[13.795196] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/serial_talker.py:23:9: E265 block comment should start with '# '\n"}
[13.797560] (stem_pkg) StdoutLine: {'line': b"        #self.get_logger().info('Transmitted')\n"}
[13.799137] (stem_pkg) StdoutLine: {'line': b'        ^\n'}
[13.800810] (stem_pkg) StdoutLine: {'line': b'\n'}
[13.802079] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/serial_talker.py:40:1: E305 expected 2 blank lines after class or function definition, found 1\n'}
[13.803458] (stem_pkg) StdoutLine: {'line': b"if __name__ == '__main__' :\n"}
[13.805310] (stem_pkg) StdoutLine: {'line': b'^\n'}
[13.806575] (stem_pkg) StdoutLine: {'line': b'\n'}
[13.808087] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/serial_talker.py:40:26: E203 whitespace before ':'\n"}
[13.809817] (stem_pkg) StdoutLine: {'line': b"if __name__ == '__main__' :\n"}
[13.811230] (-) TimerEvent: {}
[13.812161] (stem_pkg) StdoutLine: {'line': b'                         ^\n'}
[13.813982] (stem_pkg) StdoutLine: {'line': b'\n'}
[13.815777] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/serial_talker.py:41:11: W292 no newline at end of file\n'}
[13.817844] (stem_pkg) StdoutLine: {'line': b'    main()          ^\n'}
[13.819587] (stem_pkg) StdoutLine: {'line': b'\n'}
[13.821378] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:5:1: E402 module level import not at top of file\n'}
[13.824021] (stem_pkg) StdoutLine: {'line': b'import smbus\n'}
[13.826924] (stem_pkg) StdoutLine: {'line': b'^\n'}
[13.829213] (stem_pkg) StdoutLine: {'line': b'\n'}
[13.831729] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:6:1: E402 module level import not at top of file\n'}
[13.833964] (stem_pkg) StdoutLine: {'line': b'from time import sleep\n'}
[13.835923] (stem_pkg) StdoutLine: {'line': b'^\n'}
[13.837549] (stem_pkg) StdoutLine: {'line': b'\n'}
[13.839211] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/I2C_LCD_driver.py:6:1: I100 Import statements are in the wrong order. 'from time import sleep' should be before 'import smbus' and in a different group.\n"}
[13.840887] (stem_pkg) StdoutLine: {'line': b'from time import sleep\n'}
[13.842418] (stem_pkg) StdoutLine: {'line': b'^\n'}
[13.844337] (stem_pkg) StdoutLine: {'line': b'\n'}
[13.845940] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/I2C_LCD_driver.py:6:1: I201 Missing newline between import groups. 'from time import sleep' is identified as Stdlib and 'import smbus' is identified as Third Party.\n"}
[13.847879] (stem_pkg) StdoutLine: {'line': b'from time import sleep\n'}
[13.849257] (stem_pkg) StdoutLine: {'line': b'^\n'}
[13.850978] (stem_pkg) StdoutLine: {'line': b'\n'}
[13.852798] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:7:1: E302 expected 2 blank lines, found 0\n'}
[13.854483] (stem_pkg) StdoutLine: {'line': b'class i2c_device:\n'}
[13.856008] (stem_pkg) StdoutLine: {'line': b'^\n'}
[13.857526] (stem_pkg) StdoutLine: {'line': b'\n'}
[13.859294] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:8:1: CNL100 Class definition does not have a new line.\n'}
[13.861554] (stem_pkg) StdoutLine: {'line': b'   def __init__(self, addr, port=I2CBUS):\n'}
[13.863232] (stem_pkg) StdoutLine: {'line': b'^\n'}
[13.864629] (stem_pkg) StdoutLine: {'line': b'\n'}
[13.866620] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:8:4: E111 indentation is not a multiple of four\n'}
[13.867980] (stem_pkg) StdoutLine: {'line': b'   def __init__(self, addr, port=I2CBUS):\n'}
[13.869542] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[13.871722] (stem_pkg) StdoutLine: {'line': b'\n'}
[13.873311] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:9:7: E111 indentation is not a multiple of four\n'}
[13.874962] (stem_pkg) StdoutLine: {'line': b'      self.addr = addr\n'}
[13.876568] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[13.879047] (stem_pkg) StdoutLine: {'line': b'\n'}
[13.880925] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:10:7: E111 indentation is not a multiple of four\n'}
[13.883517] (stem_pkg) StdoutLine: {'line': b'      self.bus = smbus.SMBus(port)\n'}
[13.885123] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[13.886945] (stem_pkg) StdoutLine: {'line': b'\n'}
[13.889381] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:12:4: E301 expected 1 blank line, found 0\n'}
[13.890973] (stem_pkg) StdoutLine: {'line': b'   def write_cmd(self, cmd):\n'}
[13.892338] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[13.894147] (stem_pkg) StdoutLine: {'line': b'\n'}
[13.895932] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:12:4: E111 indentation is not a multiple of four\n'}
[13.897572] (stem_pkg) StdoutLine: {'line': b'   def write_cmd(self, cmd):\n'}
[13.899515] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[13.901304] (stem_pkg) StdoutLine: {'line': b'\n'}
[13.903211] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:13:7: E111 indentation is not a multiple of four\n'}
[13.905090] (stem_pkg) StdoutLine: {'line': b'      self.bus.write_byte(self.addr, cmd)\n'}
[13.907270] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[13.909423] (stem_pkg) StdoutLine: {'line': b'\n'}
[13.911126] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:14:7: E111 indentation is not a multiple of four\n'}
[13.912845] (-) TimerEvent: {}
[13.913779] (stem_pkg) StdoutLine: {'line': b'      sleep(0.0001)\n'}
[13.915813] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[13.917742] (stem_pkg) StdoutLine: {'line': b'\n'}
[13.919594] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:16:4: E301 expected 1 blank line, found 0\n'}
[13.921167] (stem_pkg) StdoutLine: {'line': b'   def write_cmd_arg(self, cmd, data):\n'}
[13.923019] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[13.924601] (stem_pkg) StdoutLine: {'line': b'\n'}
[13.926251] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:16:4: E111 indentation is not a multiple of four\n'}
[13.927817] (stem_pkg) StdoutLine: {'line': b'   def write_cmd_arg(self, cmd, data):\n'}
[13.929796] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[13.931382] (stem_pkg) StdoutLine: {'line': b'\n'}
[13.933069] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:17:7: E111 indentation is not a multiple of four\n'}
[13.934902] (stem_pkg) StdoutLine: {'line': b'      self.bus.write_byte_data(self.addr, cmd, data)\n'}
[13.936590] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[13.938301] (stem_pkg) StdoutLine: {'line': b'\n'}
[13.940154] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:18:7: E111 indentation is not a multiple of four\n'}
[13.942036] (stem_pkg) StdoutLine: {'line': b'      sleep(0.0001)\n'}
[13.943737] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[13.945422] (stem_pkg) StdoutLine: {'line': b'\n'}
[13.947295] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:20:4: E301 expected 1 blank line, found 0\n'}
[13.948799] (stem_pkg) StdoutLine: {'line': b'   def write_block_data(self, cmd, data):\n'}
[13.950696] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[13.952503] (stem_pkg) StdoutLine: {'line': b'\n'}
[13.954412] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:20:4: E111 indentation is not a multiple of four\n'}
[13.956392] (stem_pkg) StdoutLine: {'line': b'   def write_block_data(self, cmd, data):\n'}
[13.958285] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[13.960634] (stem_pkg) StdoutLine: {'line': b'\n'}
[13.962394] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:21:7: E111 indentation is not a multiple of four\n'}
[13.964212] (stem_pkg) StdoutLine: {'line': b'      self.bus.write_block_data(self.addr, cmd, data)\n'}
[13.966545] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[13.968234] (stem_pkg) StdoutLine: {'line': b'\n'}
[13.969931] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:22:7: E111 indentation is not a multiple of four\n'}
[13.971667] (stem_pkg) StdoutLine: {'line': b'      sleep(0.0001)\n'}
[13.973426] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[13.976246] (stem_pkg) StdoutLine: {'line': b'\n'}
[13.978064] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:24:4: E301 expected 1 blank line, found 0\n'}
[13.980028] (stem_pkg) StdoutLine: {'line': b'   def read(self):\n'}
[13.982347] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[13.984728] (stem_pkg) StdoutLine: {'line': b'\n'}
[13.986856] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:24:4: E111 indentation is not a multiple of four\n'}
[13.989335] (stem_pkg) StdoutLine: {'line': b'   def read(self):\n'}
[13.991365] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[13.997307] (stem_pkg) StdoutLine: {'line': b'\n'}
[13.999311] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:25:7: E111 indentation is not a multiple of four\n'}
[14.001286] (stem_pkg) StdoutLine: {'line': b'      return self.bus.read_byte(self.addr)\n'}
[14.003351] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[14.006260] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.007684] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:27:4: E301 expected 1 blank line, found 0\n'}
[14.009204] (stem_pkg) StdoutLine: {'line': b'   def read_data(self, cmd):\n'}
[14.010684] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[14.012100] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.014194] (-) TimerEvent: {}
[14.017165] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:27:4: E111 indentation is not a multiple of four\n'}
[14.019567] (stem_pkg) StdoutLine: {'line': b'   def read_data(self, cmd):\n'}
[14.023111] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[14.025702] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.027600] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:28:7: E111 indentation is not a multiple of four\n'}
[14.029112] (stem_pkg) StdoutLine: {'line': b'      return self.bus.read_byte_data(self.addr, cmd)\n'}
[14.030306] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[14.031385] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.032815] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:30:4: E301 expected 1 blank line, found 0\n'}
[14.034582] (stem_pkg) StdoutLine: {'line': b'   def read_block_data(self, cmd):\n'}
[14.035890] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[14.037261] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.038787] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:30:4: E111 indentation is not a multiple of four\n'}
[14.040670] (stem_pkg) StdoutLine: {'line': b'   def read_block_data(self, cmd):\n'}
[14.042887] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[14.045424] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.049302] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:31:7: E111 indentation is not a multiple of four\n'}
[14.050181] (stem_pkg) StdoutLine: {'line': b'      return self.bus.read_block_data(self.addr, cmd)\n'}
[14.050979] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[14.051827] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.052697] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:33:1: E305 expected 2 blank lines after class or function definition, found 0\n'}
[14.053664] (stem_pkg) StdoutLine: {'line': b'LCD_CLEARDISPLAY = 0x01\n'}
[14.054434] (stem_pkg) StdoutLine: {'line': b'^\n'}
[14.055237] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.056014] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:68:16: E261 at least two spaces before inline comment\n'}
[14.056657] (stem_pkg) StdoutLine: {'line': b'En = 0b00000100 # Enable bit\n'}
[14.057351] (stem_pkg) StdoutLine: {'line': b'               ^\n'}
[14.058076] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.058969] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:69:16: E261 at least two spaces before inline comment\n'}
[14.060129] (stem_pkg) StdoutLine: {'line': b'Rw = 0b00000010 # Read/Write bit\n'}
[14.061330] (stem_pkg) StdoutLine: {'line': b'               ^\n'}
[14.062319] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.064058] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:70:16: E261 at least two spaces before inline comment\n'}
[14.065871] (stem_pkg) StdoutLine: {'line': b'Rs = 0b00000001 # Register select bit\n'}
[14.067802] (stem_pkg) StdoutLine: {'line': b'               ^\n'}
[14.069814] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.071698] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:71:1: E302 expected 2 blank lines, found 0\n'}
[14.073399] (stem_pkg) StdoutLine: {'line': b'class lcd:\n'}
[14.075178] (stem_pkg) StdoutLine: {'line': b'^\n'}
[14.077040] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.078672] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:72:4: E114 indentation is not a multiple of four (comment)\n'}
[14.080839] (stem_pkg) StdoutLine: {'line': b'   #initializes objects and lcd\n'}
[14.082854] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[14.105267] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.107091] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/I2C_LCD_driver.py:72:4: E265 block comment should start with '# '\n"}
[14.108824] (stem_pkg) StdoutLine: {'line': b'   #initializes objects and lcd\n'}
[14.110609] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[14.112136] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.113823] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:73:4: E111 indentation is not a multiple of four\n'}
[14.115409] (-) TimerEvent: {}
[14.116334] (stem_pkg) StdoutLine: {'line': b'   def __init__(self):\n'}
[14.118012] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[14.119755] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.121284] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:74:7: E111 indentation is not a multiple of four\n'}
[14.122987] (stem_pkg) StdoutLine: {'line': b'      self.lcd_device = i2c_device(ADDRESS)\n'}
[14.125450] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[14.126987] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.128448] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:75:7: E111 indentation is not a multiple of four\n'}
[14.130253] (stem_pkg) StdoutLine: {'line': b'      self.lcd_write(0x03)\n'}
[14.131694] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[14.133348] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.135001] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:76:7: E111 indentation is not a multiple of four\n'}
[14.136823] (stem_pkg) StdoutLine: {'line': b'      self.lcd_write(0x03)\n'}
[14.138555] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[14.140048] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.141694] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:77:7: E111 indentation is not a multiple of four\n'}
[14.143137] (stem_pkg) StdoutLine: {'line': b'      self.lcd_write(0x03)\n'}
[14.144705] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[14.146386] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.147924] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:78:7: E111 indentation is not a multiple of four\n'}
[14.149721] (stem_pkg) StdoutLine: {'line': b'      self.lcd_write(0x02)\n'}
[14.151557] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[14.153187] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.155108] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:79:7: E111 indentation is not a multiple of four\n'}
[14.156970] (stem_pkg) StdoutLine: {'line': b'      self.lcd_write(LCD_FUNCTIONSET | LCD_2LINE | LCD_5x8DOTS | LCD_4BITMODE)\n'}
[14.158733] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[14.160582] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.162493] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:80:7: E111 indentation is not a multiple of four\n'}
[14.164224] (stem_pkg) StdoutLine: {'line': b'      self.lcd_write(LCD_DISPLAYCONTROL | LCD_DISPLAYON)\n'}
[14.165952] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[14.167635] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.169172] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:81:7: E111 indentation is not a multiple of four\n'}
[14.170949] (stem_pkg) StdoutLine: {'line': b'      self.lcd_write(LCD_CLEARDISPLAY)\n'}
[14.172789] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[14.174657] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.176554] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:82:7: E111 indentation is not a multiple of four\n'}
[14.186605] (stem_pkg) StdoutLine: {'line': b'      self.lcd_write(LCD_ENTRYMODESET | LCD_ENTRYLEFT)\n'}
[14.188671] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[14.190261] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.191665] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:83:7: E111 indentation is not a multiple of four\n'}
[14.193357] (stem_pkg) StdoutLine: {'line': b'      sleep(0.2)\n'}
[14.194996] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[14.196379] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.198197] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:84:4: E114 indentation is not a multiple of four (comment)\n'}
[14.202698] (stem_pkg) StdoutLine: {'line': b'   # clocks EN to latch command\n'}
[14.203411] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[14.204035] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.204647] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:85:4: E301 expected 1 blank line, found 0\n'}
[14.205383] (stem_pkg) StdoutLine: {'line': b'   def lcd_strobe(self, data):\n'}
[14.206079] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[14.206780] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.207499] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:85:4: E111 indentation is not a multiple of four\n'}
[14.208263] (stem_pkg) StdoutLine: {'line': b'   def lcd_strobe(self, data):\n'}
[14.208989] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[14.209695] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.210386] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:86:7: E111 indentation is not a multiple of four\n'}
[14.211072] (stem_pkg) StdoutLine: {'line': b'      self.lcd_device.write_cmd(data | En | LCD_BACKLIGHT)\n'}
[14.211836] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[14.212566] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.213307] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:87:7: E111 indentation is not a multiple of four\n'}
[14.214020] (stem_pkg) StdoutLine: {'line': b'      sleep(.0005)\n'}
[14.214670] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[14.215360] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.216009] (-) TimerEvent: {}
[14.216694] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:88:7: E111 indentation is not a multiple of four\n'}
[14.217640] (stem_pkg) StdoutLine: {'line': b'      self.lcd_device.write_cmd(((data & ~En) | LCD_BACKLIGHT))\n'}
[14.218404] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[14.219193] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.219984] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:89:7: E111 indentation is not a multiple of four\n'}
[14.220678] (stem_pkg) StdoutLine: {'line': b'      sleep(.0001)\n'}
[14.221380] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[14.222056] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.222777] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:90:4: E301 expected 1 blank line, found 0\n'}
[14.223428] (stem_pkg) StdoutLine: {'line': b'   def lcd_write_four_bits(self, data):\n'}
[14.224093] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[14.224704] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.225538] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:90:4: E111 indentation is not a multiple of four\n'}
[14.226379] (stem_pkg) StdoutLine: {'line': b'   def lcd_write_four_bits(self, data):\n'}
[14.227074] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[14.227856] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.228526] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:91:7: E111 indentation is not a multiple of four\n'}
[14.229159] (stem_pkg) StdoutLine: {'line': b'      self.lcd_device.write_cmd(data | LCD_BACKLIGHT)\n'}
[14.229910] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[14.230610] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.231276] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:92:7: E111 indentation is not a multiple of four\n'}
[14.233132] (stem_pkg) StdoutLine: {'line': b'      self.lcd_strobe(data)\n'}
[14.233962] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[14.234663] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.235362] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:93:4: E114 indentation is not a multiple of four (comment)\n'}
[14.236026] (stem_pkg) StdoutLine: {'line': b'   # write a command to lcd\n'}
[14.236641] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[14.237448] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.238113] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:94:4: E301 expected 1 blank line, found 0\n'}
[14.238782] (stem_pkg) StdoutLine: {'line': b'   def lcd_write(self, cmd, mode=0):\n'}
[14.239433] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[14.240110] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.240823] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:94:4: E111 indentation is not a multiple of four\n'}
[14.241545] (stem_pkg) StdoutLine: {'line': b'   def lcd_write(self, cmd, mode=0):\n'}
[14.242281] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[14.243032] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.243688] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:95:7: E111 indentation is not a multiple of four\n'}
[14.244337] (stem_pkg) StdoutLine: {'line': b'      self.lcd_write_four_bits(mode | (cmd & 0xF0))\n'}
[14.245017] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[14.245691] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.246377] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:96:7: E111 indentation is not a multiple of four\n'}
[14.247156] (stem_pkg) StdoutLine: {'line': b'      self.lcd_write_four_bits(mode | ((cmd << 4) & 0xF0))\n'}
[14.247829] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[14.248496] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.249191] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:97:4: E114 indentation is not a multiple of four (comment)\n'}
[14.249867] (stem_pkg) StdoutLine: {'line': b'   # write a character to lcd (or character rom) 0x09: backlight | RS=DR<\n'}
[14.250401] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[14.250923] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.251527] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:98:4: E114 indentation is not a multiple of four (comment)\n'}
[14.252195] (stem_pkg) StdoutLine: {'line': b'   # works!\n'}
[14.253114] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[14.253728] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.254240] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:99:4: E301 expected 1 blank line, found 0\n'}
[14.254812] (stem_pkg) StdoutLine: {'line': b'   def lcd_write_char(self, charvalue, mode=1):\n'}
[14.255439] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[14.256105] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.256818] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:99:4: E111 indentation is not a multiple of four\n'}
[14.257525] (stem_pkg) StdoutLine: {'line': b'   def lcd_write_char(self, charvalue, mode=1):\n'}
[14.258157] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[14.258754] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.259346] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:100:7: E111 indentation is not a multiple of four\n'}
[14.260044] (stem_pkg) StdoutLine: {'line': b'      self.lcd_write_four_bits(mode | (charvalue & 0xF0))\n'}
[14.260819] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[14.261649] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.262380] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:101:7: E111 indentation is not a multiple of four\n'}
[14.263483] (stem_pkg) StdoutLine: {'line': b'      self.lcd_write_four_bits(mode | ((charvalue << 4) & 0xF0))\n'}
[14.264206] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[14.264929] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.271922] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:102:1: W293 blank line contains whitespace\n'}
[14.274306] (stem_pkg) StdoutLine: {'line': b'  \n'}
[14.276567] (stem_pkg) StdoutLine: {'line': b'^\n'}
[14.278865] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.281060] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:103:4: E114 indentation is not a multiple of four (comment)\n'}
[14.282929] (stem_pkg) StdoutLine: {'line': b'   # put string function with optional char positioning\n'}
[14.284452] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[14.285820] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.286997] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:104:4: E111 indentation is not a multiple of four\n'}
[14.292662] (stem_pkg) StdoutLine: {'line': b'   def lcd_display_string(self, string, line=1, pos=0):\n'}
[14.293898] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[14.294755] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.295582] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:106:7: E111 indentation is not a multiple of four\n'}
[14.296380] (stem_pkg) StdoutLine: {'line': b'      pos_new = pos\n'}
[14.297304] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[14.298125] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.298895] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:108:7: E111 indentation is not a multiple of four\n'}
[14.299670] (stem_pkg) StdoutLine: {'line': b'      pos_new = 0x40 + pos\n'}
[14.300506] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[14.301461] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.302278] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:110:7: E111 indentation is not a multiple of four\n'}
[14.303082] (stem_pkg) StdoutLine: {'line': b'      pos_new = 0x14 + pos\n'}
[14.303951] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[14.304791] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.305782] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:112:7: E111 indentation is not a multiple of four\n'}
[14.306638] (stem_pkg) StdoutLine: {'line': b'      pos_new = 0x54 + pos\n'}
[14.307488] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[14.310449] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.311335] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:115:7: E111 indentation is not a multiple of four\n'}
[14.312181] (stem_pkg) StdoutLine: {'line': b'      self.lcd_write(ord(char), Rs)\n'}
[14.313107] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[14.313997] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.314813] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:116:4: E114 indentation is not a multiple of four (comment)\n'}
[14.315691] (stem_pkg) StdoutLine: {'line': b'   # clear lcd and set to home\n'}
[14.316496] (-) TimerEvent: {}
[14.318453] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[14.319452] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.320411] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:117:4: E301 expected 1 blank line, found 0\n'}
[14.321512] (stem_pkg) StdoutLine: {'line': b'   def lcd_clear(self):\n'}
[14.322723] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[14.324007] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.325009] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:117:4: E111 indentation is not a multiple of four\n'}
[14.325949] (stem_pkg) StdoutLine: {'line': b'   def lcd_clear(self):\n'}
[14.326769] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[14.327576] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.328406] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:118:7: E111 indentation is not a multiple of four\n'}
[14.329425] (stem_pkg) StdoutLine: {'line': b'      self.lcd_write(LCD_CLEARDISPLAY)\n'}
[14.330490] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[14.331647] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.332484] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:119:7: E111 indentation is not a multiple of four\n'}
[14.333619] (stem_pkg) StdoutLine: {'line': b'      self.lcd_write(LCD_RETURNHOME)\n'}
[14.337741] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[14.338595] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.339392] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:120:4: E114 indentation is not a multiple of four (comment)\n'}
[14.340325] (stem_pkg) StdoutLine: {'line': b'   # define backlight on/off (lcd.backlight(1); off= lcd.backlight(0)\n'}
[14.341335] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[14.342276] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.343070] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:121:4: E301 expected 1 blank line, found 0\n'}
[14.343936] (stem_pkg) StdoutLine: {'line': b'   def backlight(self, state): # for state, 1 = on, 0 = off\n'}
[14.344808] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[14.345723] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.346473] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:121:4: E111 indentation is not a multiple of four\n'}
[14.347257] (stem_pkg) StdoutLine: {'line': b'   def backlight(self, state): # for state, 1 = on, 0 = off\n'}
[14.347991] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[14.348784] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.349629] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:121:31: E261 at least two spaces before inline comment\n'}
[14.350349] (stem_pkg) StdoutLine: {'line': b'   def backlight(self, state): # for state, 1 = on, 0 = off\n'}
[14.351103] (stem_pkg) StdoutLine: {'line': b'                              ^\n'}
[14.352052] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.352895] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:122:7: E111 indentation is not a multiple of four\n'}
[14.353737] (stem_pkg) StdoutLine: {'line': b'      if state == 1:\n'}
[14.354565] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[14.355335] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.356099] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:123:10: E111 indentation is not a multiple of four\n'}
[14.357080] (stem_pkg) StdoutLine: {'line': b'         self.lcd_device.write_cmd(LCD_BACKLIGHT)\n'}
[14.357932] (stem_pkg) StdoutLine: {'line': b'         ^\n'}
[14.358793] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.359632] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:124:7: E111 indentation is not a multiple of four\n'}
[14.360402] (stem_pkg) StdoutLine: {'line': b'      elif state == 0:\n'}
[14.361287] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[14.362150] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.363031] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:125:10: E111 indentation is not a multiple of four\n'}
[14.363817] (stem_pkg) StdoutLine: {'line': b'         self.lcd_device.write_cmd(LCD_NOBACKLIGHT)\n'}
[14.364612] (stem_pkg) StdoutLine: {'line': b'         ^\n'}
[14.365504] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.366277] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:126:4: E114 indentation is not a multiple of four (comment)\n'}
[14.367128] (stem_pkg) StdoutLine: {'line': b'   # add custom characters (0 - 7)\n'}
[14.367994] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[14.368761] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.369643] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:127:4: E301 expected 1 blank line, found 0\n'}
[14.370449] (stem_pkg) StdoutLine: {'line': b'   def lcd_load_custom_chars(self, fontdata):\n'}
[14.371255] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[14.372098] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.372919] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:127:4: E111 indentation is not a multiple of four\n'}
[14.373801] (stem_pkg) StdoutLine: {'line': b'   def lcd_load_custom_chars(self, fontdata):\n'}
[14.374681] (stem_pkg) StdoutLine: {'line': b'   ^\n'}
[14.375474] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.376255] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:128:7: E111 indentation is not a multiple of four\n'}
[14.377155] (stem_pkg) StdoutLine: {'line': b'      self.lcd_write(0x40);\n'}
[14.378002] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[14.378795] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.379610] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:128:27: E703 statement ends with a semicolon\n'}
[14.380371] (stem_pkg) StdoutLine: {'line': b'      self.lcd_write(0x40);\n'}
[14.381157] (stem_pkg) StdoutLine: {'line': b'                          ^\n'}
[14.381991] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.382810] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:129:7: E111 indentation is not a multiple of four\n'}
[14.383637] (stem_pkg) StdoutLine: {'line': b'      for char in fontdata:\n'}
[14.384453] (stem_pkg) StdoutLine: {'line': b'      ^\n'}
[14.385319] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.386391] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:130:10: E111 indentation is not a multiple of four\n'}
[14.387332] (stem_pkg) StdoutLine: {'line': b'         for line in char:\n'}
[14.388239] (stem_pkg) StdoutLine: {'line': b'         ^\n'}
[14.389192] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.390140] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/I2C_LCD_driver.py:131:41: W292 no newline at end of file\n'}
[14.391035] (stem_pkg) StdoutLine: {'line': b'            self.lcd_write_char(line)                                           ^\n'}
[14.391859] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.392729] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/controller.py:5:1: I100 Import statements are in the wrong order. 'import RPi.GPIO' should be before 'from std_msgs.msg import String'\n"}
[14.393624] (stem_pkg) StdoutLine: {'line': b'import RPi.GPIO as GPIO\n'}
[14.394482] (stem_pkg) StdoutLine: {'line': b'^\n'}
[14.395375] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.396358] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:7:1: E302 expected 2 blank lines, found 1\n'}
[14.397692] (stem_pkg) StdoutLine: {'line': b'class Controller(Node) :\n'}
[14.398913] (stem_pkg) StdoutLine: {'line': b'^\n'}
[14.399988] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.401237] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/controller.py:7:23: E203 whitespace before ':'\n"}
[14.402179] (stem_pkg) StdoutLine: {'line': b'class Controller(Node) :\n'}
[14.403039] (stem_pkg) StdoutLine: {'line': b'                      ^\n'}
[14.403814] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.404726] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:8:1: CNL100 Class definition does not have a new line.\n'}
[14.406668] (stem_pkg) StdoutLine: {'line': b'    def __init__(self):\n'}
[14.408093] (stem_pkg) StdoutLine: {'line': b'^\n'}
[14.409414] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.410542] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:15:1: W293 blank line contains whitespace\n'}
[14.411652] (stem_pkg) StdoutLine: {'line': b'        \n'}
[14.412785] (stem_pkg) StdoutLine: {'line': b'^\n'}
[14.414182] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.415597] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:19:60: E261 at least two spaces before inline comment\n'}
[14.417935] (-) TimerEvent: {}
[14.419290] (stem_pkg) StdoutLine: {'line': b'        GPIO.setup(12, GPIO.IN, pull_up_down=GPIO.PUD_DOWN) #RED\n'}
[14.420330] (stem_pkg) StdoutLine: {'line': b'                                                           ^\n'}
[14.421821] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.423014] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/controller.py:19:61: E262 inline comment should start with '# '\n"}
[14.424845] (stem_pkg) StdoutLine: {'line': b'        GPIO.setup(12, GPIO.IN, pull_up_down=GPIO.PUD_DOWN) #RED\n'}
[14.427069] (stem_pkg) StdoutLine: {'line': b'                                                            ^\n'}
[14.429270] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.431117] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:20:60: E261 at least two spaces before inline comment\n'}
[14.433095] (stem_pkg) StdoutLine: {'line': b'        GPIO.setup(13, GPIO.IN, pull_up_down=GPIO.PUD_DOWN) #ORANGE\n'}
[14.437989] (stem_pkg) StdoutLine: {'line': b'                                                           ^\n'}
[14.440097] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.442701] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/controller.py:20:61: E262 inline comment should start with '# '\n"}
[14.445110] (stem_pkg) StdoutLine: {'line': b'        GPIO.setup(13, GPIO.IN, pull_up_down=GPIO.PUD_DOWN) #ORANGE\n'}
[14.447633] (stem_pkg) StdoutLine: {'line': b'                                                            ^\n'}
[14.449842] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.450871] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:22:60: E261 at least two spaces before inline comment\n'}
[14.451883] (stem_pkg) StdoutLine: {'line': b'        GPIO.setup(19, GPIO.IN, pull_up_down=GPIO.PUD_DOWN) #YELLOW\n'}
[14.452844] (stem_pkg) StdoutLine: {'line': b'                                                           ^\n'}
[14.453865] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.455742] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/controller.py:22:61: E262 inline comment should start with '# '\n"}
[14.458269] (stem_pkg) StdoutLine: {'line': b'        GPIO.setup(19, GPIO.IN, pull_up_down=GPIO.PUD_DOWN) #YELLOW\n'}
[14.460913] (stem_pkg) StdoutLine: {'line': b'                                                            ^\n'}
[14.463468] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.465395] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:23:60: E261 at least two spaces before inline comment\n'}
[14.467289] (stem_pkg) StdoutLine: {'line': b'        GPIO.setup(16, GPIO.IN, pull_up_down=GPIO.PUD_DOWN) #GREEN\n'}
[14.469234] (stem_pkg) StdoutLine: {'line': b'                                                           ^\n'}
[14.470963] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.472724] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/controller.py:23:61: E262 inline comment should start with '# '\n"}
[14.474467] (stem_pkg) StdoutLine: {'line': b'        GPIO.setup(16, GPIO.IN, pull_up_down=GPIO.PUD_DOWN) #GREEN\n'}
[14.476029] (stem_pkg) StdoutLine: {'line': b'                                                            ^\n'}
[14.477609] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.478940] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:25:60: E261 at least two spaces before inline comment\n'}
[14.490576] (stem_pkg) StdoutLine: {'line': b'        GPIO.setup(20, GPIO.IN, pull_up_down=GPIO.PUD_DOWN) #BLUE\n'}
[14.494396] (stem_pkg) StdoutLine: {'line': b'                                                           ^\n'}
[14.495716] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.497090] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/controller.py:25:61: E262 inline comment should start with '# '\n"}
[14.498379] (stem_pkg) StdoutLine: {'line': b'        GPIO.setup(20, GPIO.IN, pull_up_down=GPIO.PUD_DOWN) #BLUE\n'}
[14.499982] (stem_pkg) StdoutLine: {'line': b'                                                            ^\n'}
[14.501104] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.503231] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:26:60: E261 at least two spaces before inline comment\n'}
[14.505038] (stem_pkg) StdoutLine: {'line': b'        GPIO.setup(26, GPIO.IN, pull_up_down=GPIO.PUD_DOWN) #VIOLET\n'}
[14.516479] (stem_pkg) StdoutLine: {'line': b'                                                           ^\n'}
[14.518381] (-) TimerEvent: {}
[14.519844] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.521198] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/controller.py:26:61: E262 inline comment should start with '# '\n"}
[14.522582] (stem_pkg) StdoutLine: {'line': b'        GPIO.setup(26, GPIO.IN, pull_up_down=GPIO.PUD_DOWN) #VIOLET\n'}
[14.524815] (stem_pkg) StdoutLine: {'line': b'                                                            ^\n'}
[14.526600] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.528255] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:28:60: E261 at least two spaces before inline comment\n'}
[14.530278] (stem_pkg) StdoutLine: {'line': b'        GPIO.setup(21, GPIO.IN, pull_up_down=GPIO.PUD_DOWN) #BROWN\n'}
[14.532118] (stem_pkg) StdoutLine: {'line': b'                                                           ^\n'}
[14.534141] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.536044] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/controller.py:28:61: E262 inline comment should start with '# '\n"}
[14.538175] (stem_pkg) StdoutLine: {'line': b'        GPIO.setup(21, GPIO.IN, pull_up_down=GPIO.PUD_DOWN) #BROWN\n'}
[14.539869] (stem_pkg) StdoutLine: {'line': b'                                                            ^\n'}
[14.541444] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.543150] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/controller.py:30:9: E265 block comment should start with '# '\n"}
[14.544459] (stem_pkg) StdoutLine: {'line': b'        #GPIO.setup(17, GPIO.IN, GPIO.PUD_UP) #black toggle yellow\n'}
[14.546140] (stem_pkg) StdoutLine: {'line': b'        ^\n'}
[14.547441] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.549064] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/controller.py:31:9: E265 block comment should start with '# '\n"}
[14.551186] (stem_pkg) StdoutLine: {'line': b'        #GPIO.setup(18, GPIO.IN, GPIO.PUD_UP) #black toggle greeen\n'}
[14.553212] (stem_pkg) StdoutLine: {'line': b'        ^\n'}
[14.555236] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.557204] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:33:57: E251 unexpected spaces around keyword / parameter equals\n'}
[14.559112] (stem_pkg) StdoutLine: {'line': b'        GPIO.add_event_detect(12, GPIO.FALLING, callback = self.on_press, bouncetime=100)\n'}
[14.561230] (stem_pkg) StdoutLine: {'line': b'                                                        ^\n'}
[14.563243] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.565119] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:33:59: E251 unexpected spaces around keyword / parameter equals\n'}
[14.566978] (stem_pkg) StdoutLine: {'line': b'        GPIO.add_event_detect(12, GPIO.FALLING, callback = self.on_press, bouncetime=100)\n'}
[14.569104] (stem_pkg) StdoutLine: {'line': b'                                                          ^\n'}
[14.570920] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.572573] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:34:57: E251 unexpected spaces around keyword / parameter equals\n'}
[14.574277] (stem_pkg) StdoutLine: {'line': b'        GPIO.add_event_detect(13, GPIO.FALLING, callback = self.on_press, bouncetime=100)\n'}
[14.576279] (stem_pkg) StdoutLine: {'line': b'                                                        ^\n'}
[14.577779] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.579730] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:34:59: E251 unexpected spaces around keyword / parameter equals\n'}
[14.581517] (stem_pkg) StdoutLine: {'line': b'        GPIO.add_event_detect(13, GPIO.FALLING, callback = self.on_press, bouncetime=100)\n'}
[14.583177] (stem_pkg) StdoutLine: {'line': b'                                                          ^\n'}
[14.585176] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.586920] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:36:57: E251 unexpected spaces around keyword / parameter equals\n'}
[14.588445] (stem_pkg) StdoutLine: {'line': b'        GPIO.add_event_detect(19, GPIO.FALLING, callback = self.on_press, bouncetime=100)\n'}
[14.589983] (stem_pkg) StdoutLine: {'line': b'                                                        ^\n'}
[14.591191] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.592359] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:36:59: E251 unexpected spaces around keyword / parameter equals\n'}
[14.593732] (stem_pkg) StdoutLine: {'line': b'        GPIO.add_event_detect(19, GPIO.FALLING, callback = self.on_press, bouncetime=100)\n'}
[14.595111] (stem_pkg) StdoutLine: {'line': b'                                                          ^\n'}
[14.597059] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.598730] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:37:57: E251 unexpected spaces around keyword / parameter equals\n'}
[14.600317] (stem_pkg) StdoutLine: {'line': b'        GPIO.add_event_detect(16, GPIO.FALLING, callback = self.on_press, bouncetime=100)\n'}
[14.602120] (stem_pkg) StdoutLine: {'line': b'                                                        ^\n'}
[14.604069] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.606129] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:37:59: E251 unexpected spaces around keyword / parameter equals\n'}
[14.607664] (stem_pkg) StdoutLine: {'line': b'        GPIO.add_event_detect(16, GPIO.FALLING, callback = self.on_press, bouncetime=100)\n'}
[14.609726] (stem_pkg) StdoutLine: {'line': b'                                                          ^\n'}
[14.611424] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.613120] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:39:57: E251 unexpected spaces around keyword / parameter equals\n'}
[14.614410] (stem_pkg) StdoutLine: {'line': b'        GPIO.add_event_detect(20, GPIO.FALLING, callback = self.on_press, bouncetime=100)\n'}
[14.615837] (stem_pkg) StdoutLine: {'line': b'                                                        ^\n'}
[14.617085] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.618162] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:39:59: E251 unexpected spaces around keyword / parameter equals\n'}
[14.619322] (-) TimerEvent: {}
[14.621695] (stem_pkg) StdoutLine: {'line': b'        GPIO.add_event_detect(20, GPIO.FALLING, callback = self.on_press, bouncetime=100)\n'}
[14.622881] (stem_pkg) StdoutLine: {'line': b'                                                          ^\n'}
[14.623909] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.625205] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:40:57: E251 unexpected spaces around keyword / parameter equals\n'}
[14.627633] (stem_pkg) StdoutLine: {'line': b'        GPIO.add_event_detect(26, GPIO.FALLING, callback = self.on_press, bouncetime=100)\n'}
[14.628921] (stem_pkg) StdoutLine: {'line': b'                                                        ^\n'}
[14.630186] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.631302] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:40:59: E251 unexpected spaces around keyword / parameter equals\n'}
[14.632454] (stem_pkg) StdoutLine: {'line': b'        GPIO.add_event_detect(26, GPIO.FALLING, callback = self.on_press, bouncetime=100)\n'}
[14.633669] (stem_pkg) StdoutLine: {'line': b'                                                          ^\n'}
[14.634786] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.635960] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:42:57: E251 unexpected spaces around keyword / parameter equals\n'}
[14.637166] (stem_pkg) StdoutLine: {'line': b'        GPIO.add_event_detect(21, GPIO.FALLING, callback = self.on_press, bouncetime=100)\n'}
[14.638535] (stem_pkg) StdoutLine: {'line': b'                                                        ^\n'}
[14.640073] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.641553] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:42:59: E251 unexpected spaces around keyword / parameter equals\n'}
[14.643189] (stem_pkg) StdoutLine: {'line': b'        GPIO.add_event_detect(21, GPIO.FALLING, callback = self.on_press, bouncetime=100)\n'}
[14.644259] (stem_pkg) StdoutLine: {'line': b'                                                          ^\n'}
[14.645464] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.646625] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/controller.py:46:9: E265 block comment should start with '# '\n"}
[14.647811] (stem_pkg) StdoutLine: {'line': b'        #GPIO.wait_for_edge(18, GPIO.RISING, bouncetime = 10)\n'}
[14.649032] (stem_pkg) StdoutLine: {'line': b'        ^\n'}
[14.650180] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.651354] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/controller.py:48:43: E203 whitespace before ':'\n"}
[14.652702] (stem_pkg) StdoutLine: {'line': b'    def publish_key_command_msg(self, msg) :\n'}
[14.654136] (test_pkg) StdoutLine: {'line': b'\x1b[1mcollecting ... \x1b[0m\x1b[1m\n'}
[14.655590] (test_pkg) StdoutLine: {'line': b'collected 3 items                                                              \x1b[0m\n'}
[14.656799] (test_pkg) StdoutLine: {'line': b'\n'}
[14.658197] (stem_pkg) StdoutLine: {'line': b'                                          ^\n'}
[14.660004] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.661552] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/controller.py:55:32: E203 whitespace before ':'\n"}
[14.663211] (stem_pkg) StdoutLine: {'line': b'        if msg.data is not None :\n'}
[14.664780] (stem_pkg) StdoutLine: {'line': b'                               ^\n'}
[14.667079] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.669358] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/controller.py:60:19: E203 whitespace before ':'\n"}
[14.671275] (stem_pkg) StdoutLine: {'line': b'        if k == 12 :\n'}
[14.673439] (stem_pkg) StdoutLine: {'line': b'                  ^\n'}
[14.675662] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.677902] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:61:17: Q000 Double quotes found but single quotes preferred\n'}
[14.680044] (stem_pkg) StdoutLine: {'line': b'            c = "up"\n'}
[14.682308] (stem_pkg) StdoutLine: {'line': b'                ^\n'}
[14.686221] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.687659] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/controller.py:62:21: E203 whitespace before ':'\n"}
[14.689075] (stem_pkg) StdoutLine: {'line': b'        elif k == 13 :\n'}
[14.701617] (stem_pkg) StdoutLine: {'line': b'                    ^\n'}
[14.704758] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.706133] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:63:17: Q000 Double quotes found but single quotes preferred\n'}
[14.707665] (stem_pkg) StdoutLine: {'line': b'            c = "left"\n'}
[14.709510] (stem_pkg) StdoutLine: {'line': b'                ^\n'}
[14.711386] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.713079] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/controller.py:64:21: E203 whitespace before ':'\n"}
[14.717422] (stem_pkg) StdoutLine: {'line': b'        elif k == 19 :\n'}
[14.719501] (-) TimerEvent: {}
[14.722453] (stem_pkg) StdoutLine: {'line': b'                    ^\n'}
[14.724651] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.727600] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:65:17: Q000 Double quotes found but single quotes preferred\n'}
[14.730941] (stem_pkg) StdoutLine: {'line': b'            c = "init"\n'}
[14.732887] (stem_pkg) StdoutLine: {'line': b'                ^\n'}
[14.734969] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.736649] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/controller.py:66:21: E203 whitespace before ':'\n"}
[14.737762] (stem_pkg) StdoutLine: {'line': b'        elif k == 16 :\n'}
[14.738907] (stem_pkg) StdoutLine: {'line': b'                    ^\n'}
[14.740228] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.741866] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:67:17: Q000 Double quotes found but single quotes preferred\n'}
[14.743257] (stem_pkg) StdoutLine: {'line': b'            c = "down"\n'}
[14.744799] (stem_pkg) StdoutLine: {'line': b'                ^\n'}
[14.745981] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.747235] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/controller.py:68:21: E203 whitespace before ':'\n"}
[14.748275] (stem_pkg) StdoutLine: {'line': b'        elif k == 20 :\n'}
[14.749480] (stem_pkg) StdoutLine: {'line': b'                    ^\n'}
[14.751701] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.752919] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:69:17: Q000 Double quotes found but single quotes preferred\n'}
[14.754257] (stem_pkg) StdoutLine: {'line': b'            c = "turn left"\n'}
[14.755505] (stem_pkg) StdoutLine: {'line': b'                ^\n'}
[14.761618] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.762998] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/controller.py:70:21: E203 whitespace before ':'\n"}
[14.764327] (stem_pkg) StdoutLine: {'line': b'        elif k == 26 :\n'}
[14.765524] (stem_pkg) StdoutLine: {'line': b'                    ^\n'}
[14.766460] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.767676] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:71:17: Q000 Double quotes found but single quotes preferred\n'}
[14.768771] (stem_pkg) StdoutLine: {'line': b'            c = "turn right"\n'}
[14.770028] (stem_pkg) StdoutLine: {'line': b'                ^\n'}
[14.771218] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.772681] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/controller.py:72:21: E203 whitespace before ':'\n"}
[14.774982] (stem_pkg) StdoutLine: {'line': b'        elif k == 21 :\n'}
[14.776210] (stem_pkg) StdoutLine: {'line': b'                    ^\n'}
[14.777448] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.778625] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:73:17: Q000 Double quotes found but single quotes preferred\n'}
[14.779760] (stem_pkg) StdoutLine: {'line': b'            c = "right"\n'}
[14.780900] (stem_pkg) StdoutLine: {'line': b'                ^\n'}
[14.783420] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.784828] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/controller.py:74:21: E203 whitespace before ':'\n"}
[14.789284] (stem_pkg) StdoutLine: {'line': b'        elif k == 18 :\n'}
[14.790589] (stem_pkg) StdoutLine: {'line': b'                    ^\n'}
[14.791804] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.793026] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:75:17: Q000 Double quotes found but single quotes preferred\n'}
[14.794247] (stem_pkg) StdoutLine: {'line': b'            c = "True"\n'}
[14.795839] (stem_pkg) StdoutLine: {'line': b'                ^\n'}
[14.797177] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.798132] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/controller.py:76:21: E203 whitespace before ':'\n"}
[14.799292] (stem_pkg) StdoutLine: {'line': b'        elif k == 17 :\n'}
[14.800386] (stem_pkg) StdoutLine: {'line': b'                    ^\n'}
[14.801775] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.803177] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:77:17: Q000 Double quotes found but single quotes preferred\n'}
[14.804218] (stem_pkg) StdoutLine: {'line': b'            c = "False"\n'}
[14.805470] (stem_pkg) StdoutLine: {'line': b'                ^\n'}
[14.807278] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.808784] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/controller.py:78:13: E203 whitespace before ':'\n"}
[14.810208] (stem_pkg) StdoutLine: {'line': b'        else :\n'}
[14.811249] (stem_pkg) StdoutLine: {'line': b'            ^\n'}
[14.812211] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.814007] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/controller.py:83:20: E203 whitespace before ':'\n"}
[14.817575] (stem_pkg) StdoutLine: {'line': b'def main(args=None) :\n'}
[14.818377] (stem_pkg) StdoutLine: {'line': b'                   ^\n'}
[14.819171] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.819851] (-) TimerEvent: {}
[14.820460] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:95:1: E305 expected 2 blank lines after class or function definition, found 1\n'}
[14.821360] (stem_pkg) StdoutLine: {'line': b"if __name__ == '__main__' :\n"}
[14.822184] (stem_pkg) StdoutLine: {'line': b'^\n'}
[14.822814] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.823542] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/controller.py:95:26: E203 whitespace before ':'\n"}
[14.824309] (stem_pkg) StdoutLine: {'line': b"if __name__ == '__main__' :\n"}
[14.824986] (stem_pkg) StdoutLine: {'line': b'                         ^\n'}
[14.825734] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.826475] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/controller.py:96:11: W292 no newline at end of file\n'}
[14.827361] (stem_pkg) StdoutLine: {'line': b'    main()          ^\n'}
[14.828078] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.828834] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/async_serial_talker.py:5:1: I100 Import statements are in the wrong order. 'import asyncio' should be before 'from std_msgs.msg import String' and in a different group.\n"}
[14.829776] (stem_pkg) StdoutLine: {'line': b'import asyncio\n'}
[14.831017] (stem_pkg) StdoutLine: {'line': b'^\n'}
[14.831759] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.832410] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/async_serial_talker.py:5:1: I201 Missing newline between import groups. 'import asyncio' is identified as Stdlib and 'from std_msgs.msg import String' is identified as Third Party.\n"}
[14.833065] (stem_pkg) StdoutLine: {'line': b'import asyncio\n'}
[14.833711] (stem_pkg) StdoutLine: {'line': b'^\n'}
[14.834356] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.834938] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/async_serial_talker.py:6:1: I201 Missing newline between import groups. 'import serial_asyncio' is identified as Third Party and 'import asyncio' is identified as Stdlib.\n"}
[14.835510] (stem_pkg) StdoutLine: {'line': b'import serial_asyncio\n'}
[14.836090] (stem_pkg) StdoutLine: {'line': b'^\n'}
[14.836678] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.837347] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/async_serial_talker.py:11:5: E301 expected 1 blank line, found 0\n'}
[14.837962] (stem_pkg) StdoutLine: {'line': b'    def __init__(self):\n'}
[14.838560] (stem_pkg) StdoutLine: {'line': b'    ^\n'}
[14.839202] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.839778] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/async_serial_talker.py:20:32: Q000 Double quotes found but single quotes preferred\n'}
[14.840363] (stem_pkg) StdoutLine: {'line': b'        self.get_logger().info("Serial connection started")\n'}
[14.840981] (stem_pkg) StdoutLine: {'line': b'                               ^\n'}
[14.841600] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.842220] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/async_serial_talker.py:29:100: E501 line too long (102 > 99 characters)\n'}
[14.842828] (stem_pkg) StdoutLine: {'line': b'        _, writer = await serial_asyncio.open_serial_connection(url=self.SERIAL_PORT, baudrate=115200)\n'}
[14.843382] (stem_pkg) StdoutLine: {'line': b'                                                                                                   ^\n'}
[14.843989] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.844564] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/async_serial_talker.py:38:38: E203 whitespace before ':'\n"}
[14.845143] (stem_pkg) StdoutLine: {'line': b'    async def send(self, writer, msg) :\n'}
[14.845738] (stem_pkg) StdoutLine: {'line': b'                                     ^\n'}
[14.846317] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.846969] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/async_serial_talker.py:39:21: E203 whitespace before ':'\n"}
[14.847586] (stem_pkg) StdoutLine: {'line': b'        for c in msg :\n'}
[14.848141] (stem_pkg) StdoutLine: {'line': b'                    ^\n'}
[14.848774] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.849565] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/async_serial_talker.py:42:9: E265 block comment should start with '# '\n"}
[14.850162] (stem_pkg) StdoutLine: {'line': b"        #writer.write(b'_')\n"}
[14.851053] (stem_pkg) StdoutLine: {'line': b'        ^\n'}
[14.852181] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.852929] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/async_serial_talker.py:57:1: E305 expected 2 blank lines after class or function definition, found 1\n'}
[14.853672] (stem_pkg) StdoutLine: {'line': b"if __name__ == '__main__' :\n"}
[14.854278] (stem_pkg) StdoutLine: {'line': b'^\n'}
[14.854809] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.855315] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/async_serial_talker.py:57:26: E203 whitespace before ':'\n"}
[14.855849] (stem_pkg) StdoutLine: {'line': b"if __name__ == '__main__' :\n"}
[14.856342] (stem_pkg) StdoutLine: {'line': b'                         ^\n'}
[14.856905] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.857466] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/async_serial_talker.py:58:11: W292 no newline at end of file\n'}
[14.858041] (stem_pkg) StdoutLine: {'line': b'    main()          ^\n'}
[14.858726] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.859351] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/cmd_selector.py:6:1: E302 expected 2 blank lines, found 1\n'}
[14.859943] (stem_pkg) StdoutLine: {'line': b'class CommandSelector(Node):\n'}
[14.860514] (stem_pkg) StdoutLine: {'line': b'^\n'}
[14.861175] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.861780] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/cmd_selector.py:8:5: E301 expected 1 blank line, found 0\n'}
[14.862371] (stem_pkg) StdoutLine: {'line': b'    def __init__(self):\n'}
[14.862934] (stem_pkg) StdoutLine: {'line': b'    ^\n'}
[14.863568] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.864128] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/cmd_selector.py:44:1: E303 too many blank lines (3)\n'}
[14.864730] (stem_pkg) StdoutLine: {'line': b'def main(args=None):\n'}
[14.865395] (stem_pkg) StdoutLine: {'line': b'^\n'}
[14.866025] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.866596] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/cmd_selector.py:55:1: E305 expected 2 blank lines after class or function definition, found 1\n'}
[14.867189] (stem_pkg) StdoutLine: {'line': b"if __name__ == '__main__' :\n"}
[14.867779] (stem_pkg) StdoutLine: {'line': b'^\n'}
[14.868457] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.869070] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/cmd_selector.py:55:26: E203 whitespace before ':'\n"}
[14.869722] (stem_pkg) StdoutLine: {'line': b"if __name__ == '__main__' :\n"}
[14.870347] (stem_pkg) StdoutLine: {'line': b'                         ^\n'}
[14.871031] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.871881] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/cmd_selector.py:56:11: W292 no newline at end of file\n'}
[14.872469] (stem_pkg) StdoutLine: {'line': b'    main()          ^\n'}
[14.873013] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.873755] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/calculator.py:1:1: F401 'socket.NI_NUMERICHOST' imported but unused\n"}
[14.874426] (stem_pkg) StdoutLine: {'line': b'from socket import NI_NUMERICHOST\n'}
[14.874974] (stem_pkg) StdoutLine: {'line': b'^\n'}
[14.875469] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.875953] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/calculator.py:2:1: I201 Missing newline between import groups. 'import rclpy' is identified as Third Party and 'from socket import NI_NUMERICHOST' is identified as Stdlib.\n"}
[14.876633] (stem_pkg) StdoutLine: {'line': b'import rclpy\n'}
[14.877340] (stem_pkg) StdoutLine: {'line': b'^\n'}
[14.878070] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.878783] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/calculator.py:7:1: I100 Import statements are in the wrong order. 'import math' should be before 'from sunflower_interfaces.msg import TfliteResult' and in a different group.\n"}
[14.879382] (stem_pkg) StdoutLine: {'line': b'import math\n'}
[14.880000] (stem_pkg) StdoutLine: {'line': b'^\n'}
[14.880590] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.881230] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/calculator.py:7:1: I201 Missing newline between import groups. 'import math' is identified as Stdlib and 'from sunflower_interfaces.msg import TfliteResult' is identified as Third Party.\n"}
[14.881881] (stem_pkg) StdoutLine: {'line': b'import math\n'}
[14.882463] (stem_pkg) StdoutLine: {'line': b'^\n'}
[14.883123] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.883725] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/calculator.py:9:1: E302 expected 2 blank lines, found 1\n'}
[14.884333] (stem_pkg) StdoutLine: {'line': b'class Calculator(Node) :\n'}
[14.884916] (stem_pkg) StdoutLine: {'line': b'^\n'}
[14.885572] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.886164] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/calculator.py:9:23: E203 whitespace before ':'\n"}
[14.886839] (stem_pkg) StdoutLine: {'line': b'class Calculator(Node) :\n'}
[14.887648] (stem_pkg) StdoutLine: {'line': b'                      ^\n'}
[14.888304] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.888901] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/calculator.py:10:1: CNL100 Class definition does not have a new line.\n'}
[14.889637] (stem_pkg) StdoutLine: {'line': b'    def __init__(self):\n'}
[14.890251] (stem_pkg) StdoutLine: {'line': b'^\n'}
[14.890827] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.891425] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/calculator.py:23:35: E203 whitespace before ':'\n"}
[14.892089] (stem_pkg) StdoutLine: {'line': b'    def publish_command(self, cmd) :\n'}
[14.892727] (stem_pkg) StdoutLine: {'line': b'                                  ^\n'}
[14.893413] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.893995] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/calculator.py:31:30: Q000 Double quotes found but single quotes preferred\n'}
[14.894618] (stem_pkg) StdoutLine: {'line': b'        self.publish_command("".join(data))\n'}
[14.895198] (stem_pkg) StdoutLine: {'line': b'                             ^\n'}
[14.895772] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.896332] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/calculator.py:34:27: C417 Unnecessary use of map - use a generator expression instead.\n'}
[14.897128] (stem_pkg) StdoutLine: {'line': b'        n_x, n_y, n_con = map(lambda x: x, nose)\n'}
[14.897762] (stem_pkg) StdoutLine: {'line': b'                          ^\n'}
[14.898378] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.899017] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/calculator.py:35:27: C417 Unnecessary use of map - use a generator expression instead.\n'}
[14.899673] (stem_pkg) StdoutLine: {'line': b'        l_x, l_y, l_con = map(lambda x: x, eye_l)\n'}
[14.900318] (stem_pkg) StdoutLine: {'line': b'                          ^\n'}
[14.900931] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.901715] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/calculator.py:36:27: C417 Unnecessary use of map - use a generator expression instead.\n'}
[14.902522] (stem_pkg) StdoutLine: {'line': b'        r_x, r_y, r_con = map(lambda x: x, eye_r)\n'}
[14.903248] (stem_pkg) StdoutLine: {'line': b'                          ^\n'}
[14.903932] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.904848] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/calculator.py:62:1: W293 blank line contains whitespace\n'}
[14.905748] (stem_pkg) StdoutLine: {'line': b'    \n'}
[14.906506] (stem_pkg) StdoutLine: {'line': b'^\n'}
[14.907197] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.907838] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/calculator.py:65:10: E203 whitespace before ','\n"}
[14.908320] (stem_pkg) StdoutLine: {'line': b'        _ , nose_x, nose_confidence = map(lambda x: x, nose)\n'}
[14.908909] (stem_pkg) StdoutLine: {'line': b'         ^\n'}
[14.909583] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.910203] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/calculator.py:65:39: C417 Unnecessary use of map - use a generator expression instead.\n'}
[14.910897] (stem_pkg) StdoutLine: {'line': b'        _ , nose_x, nose_confidence = map(lambda x: x, nose)\n'}
[14.911555] (stem_pkg) StdoutLine: {'line': b'                                      ^\n'}
[14.912153] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.913065] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/calculator.py:83:1: E302 expected 2 blank lines, found 1\n'}
[14.913807] (stem_pkg) StdoutLine: {'line': b'def main(args=None) :\n'}
[14.914360] (stem_pkg) StdoutLine: {'line': b'^\n'}
[14.914965] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.915573] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/calculator.py:83:20: E203 whitespace before ':'\n"}
[14.916165] (stem_pkg) StdoutLine: {'line': b'def main(args=None) :\n'}
[14.916785] (stem_pkg) StdoutLine: {'line': b'                   ^\n'}
[14.917522] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.918120] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/calculator.py:94:1: E305 expected 2 blank lines after class or function definition, found 1\n'}
[14.918673] (stem_pkg) StdoutLine: {'line': b"if __name__ == '__main__' :\n"}
[14.919242] (stem_pkg) StdoutLine: {'line': b'^\n'}
[14.919814] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.920343] (-) TimerEvent: {}
[14.920888] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/calculator.py:94:26: E203 whitespace before ':'\n"}
[14.921815] (stem_pkg) StdoutLine: {'line': b"if __name__ == '__main__' :\n"}
[14.922593] (stem_pkg) StdoutLine: {'line': b'                         ^\n'}
[14.923174] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.923952] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/calculator.py:95:11: W292 no newline at end of file\n'}
[14.924776] (stem_pkg) StdoutLine: {'line': b'    main()          ^\n'}
[14.925607] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.926281] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tensor.py:5:1: I100 Import statements are in the wrong order. 'import cv2' should be before 'from sunflower_interfaces.msg import TfliteResult'\n"}
[14.927041] (stem_pkg) StdoutLine: {'line': b'import cv2\n'}
[14.927668] (stem_pkg) StdoutLine: {'line': b'^\n'}
[14.928229] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.928812] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tensor.py:7:1: I100 Import statements are in the wrong order. 'import numpy' should be before 'import tensorflow'\n"}
[14.929482] (stem_pkg) StdoutLine: {'line': b'import numpy as np\n'}
[14.930071] (stem_pkg) StdoutLine: {'line': b'^\n'}
[14.930631] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.931177] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tensor.py:9:1: E302 expected 2 blank lines, found 1\n'}
[14.931707] (stem_pkg) StdoutLine: {'line': b'class Tensor(Node) :\n'}
[14.932329] (stem_pkg) StdoutLine: {'line': b'^\n'}
[14.932882] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.933539] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tensor.py:9:19: E203 whitespace before ':'\n"}
[14.934134] (stem_pkg) StdoutLine: {'line': b'class Tensor(Node) :\n'}
[14.934735] (stem_pkg) StdoutLine: {'line': b'                  ^\n'}
[14.935304] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.935846] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tensor.py:10:1: CNL100 Class definition does not have a new line.\n'}
[14.936454] (stem_pkg) StdoutLine: {'line': b'    def __init__(self, interpreter, cap):\n'}
[14.937208] (stem_pkg) StdoutLine: {'line': b'^\n'}
[14.937766] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.938293] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tensor.py:20:46: E203 whitespace before ':'\n"}
[14.938792] (stem_pkg) StdoutLine: {'line': b'    def tensor_result(self, interpreter, cap) :\n'}
[14.939299] (stem_pkg) StdoutLine: {'line': b'                                             ^\n'}
[14.939798] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.940312] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tensor.py:41:9: F841 local variable 'data' is assigned to but never used\n"}
[14.940826] (stem_pkg) StdoutLine: {'line': b'        data = list()\n'}
[14.941440] (stem_pkg) StdoutLine: {'line': b'        ^\n'}
[14.942033] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.942548] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tensor.py:41:16: C408 Unnecessary list call - rewrite as a literal.\n'}
[14.943077] (stem_pkg) StdoutLine: {'line': b'        data = list()\n'}
[14.943649] (stem_pkg) StdoutLine: {'line': b'               ^\n'}
[14.944412] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.945098] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tensor.py:53:1: E302 expected 2 blank lines, found 1\n'}
[14.945746] (stem_pkg) StdoutLine: {'line': b'def main(args=None) :\n'}
[14.946331] (stem_pkg) StdoutLine: {'line': b'^\n'}
[14.946953] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.947488] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tensor.py:53:20: E203 whitespace before ':'\n"}
[14.948016] (stem_pkg) StdoutLine: {'line': b'def main(args=None) :\n'}
[14.948587] (stem_pkg) StdoutLine: {'line': b'                   ^\n'}
[14.949211] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.949823] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tensor.py:55:50: Q000 Double quotes found but single quotes preferred\n'}
[14.950379] (stem_pkg) StdoutLine: {'line': b'    interpreter = tf.lite.Interpreter(model_path="lite-model_movenet_singlepose_lightning_3.tflite")\n'}
[14.950952] (stem_pkg) StdoutLine: {'line': b'                                                 ^\n'}
[14.951538] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.952127] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tensor.py:55:100: E501 line too long (100 > 99 characters)\n'}
[14.952657] (stem_pkg) StdoutLine: {'line': b'    interpreter = tf.lite.Interpreter(model_path="lite-model_movenet_singlepose_lightning_3.tflite")\n'}
[14.953281] (stem_pkg) StdoutLine: {'line': b'                                                                                                   ^\n'}
[14.953827] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.954371] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tensor.py:67:1: E305 expected 2 blank lines after class or function definition, found 1\n'}
[14.954907] (stem_pkg) StdoutLine: {'line': b"if __name__ == '__main__' :\n"}
[14.955430] (stem_pkg) StdoutLine: {'line': b'^\n'}
[14.955952] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.956514] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tensor.py:67:26: E203 whitespace before ':'\n"}
[14.957076] (stem_pkg) StdoutLine: {'line': b"if __name__ == '__main__' :\n"}
[14.957699] (stem_pkg) StdoutLine: {'line': b'                         ^\n'}
[14.958309] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.958940] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tensor.py:70:1: E265 block comment should start with '# '\n"}
[14.959535] (stem_pkg) StdoutLine: {'line': b'#\xec\xbd\x94, \xec\x99\xbc\xeb\x88\x88, \xec\x98\xa4\xeb\x88\x88, \xec\x99\xbc\xea\xb7\x80, \xec\x98\xa4\xea\xb7\x80, \xec\x99\xbc\xec\x96\xb4\xea\xb9\xa8, \xec\x98\xa4\xec\x96\xb4\xea\xb9\xa8^\n'}
[14.960225] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.960839] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tensor.py:70:29: W292 no newline at end of file\n'}
[14.961583] (stem_pkg) StdoutLine: {'line': b'#\xec\xbd\x94, \xec\x99\xbc\xeb\x88\x88, \xec\x98\xa4\xeb\x88\x88, \xec\x99\xbc\xea\xb7\x80, \xec\x98\xa4\xea\xb7\x80, \xec\x99\xbc\xec\x96\xb4\xea\xb9\xa8, \xec\x98\xa4\xec\x96\xb4\xea\xb9\xa8                            ^\n'}
[14.962188] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.962794] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tensor.py:70:29: W292 no newline at end of file\n'}
[14.963385] (stem_pkg) StdoutLine: {'line': b'#\xec\xbd\x94, \xec\x99\xbc\xeb\x88\x88, \xec\x98\xa4\xeb\x88\x88, \xec\x99\xbc\xea\xb7\x80, \xec\x98\xa4\xea\xb7\x80, \xec\x99\xbc\xec\x96\xb4\xea\xb9\xa8, \xec\x98\xa4\xec\x96\xb4\xea\xb9\xa8                            ^\n'}
[14.963962] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.964500] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tensor.py:70:29: W292 no newline at end of file\n'}
[14.965166] (stem_pkg) StdoutLine: {'line': b'#\xec\xbd\x94, \xec\x99\xbc\xeb\x88\x88, \xec\x98\xa4\xeb\x88\x88, \xec\x99\xbc\xea\xb7\x80, \xec\x98\xa4\xea\xb7\x80, \xec\x99\xbc\xec\x96\xb4\xea\xb9\xa8, \xec\x98\xa4\xec\x96\xb4\xea\xb9\xa8                            ^\n'}
[14.965775] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.966359] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tester.py:5:1: I100 Import statements are in the wrong order. 'from pynput import keyboard' should be before 'from std_msgs.msg import String'\n"}
[14.967105] (stem_pkg) StdoutLine: {'line': b'from pynput import keyboard\n'}
[14.967914] (stem_pkg) StdoutLine: {'line': b'^\n'}
[14.968525] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.969123] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tester.py:7:1: E302 expected 2 blank lines, found 1\n'}
[14.969795] (stem_pkg) StdoutLine: {'line': b'class Tester(Node) :\n'}
[14.970384] (stem_pkg) StdoutLine: {'line': b'^\n'}
[14.970905] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.971540] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tester.py:7:19: E203 whitespace before ':'\n"}
[14.972111] (stem_pkg) StdoutLine: {'line': b'class Tester(Node) :\n'}
[14.972627] (stem_pkg) StdoutLine: {'line': b'                  ^\n'}
[14.973298] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.974001] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tester.py:8:1: CNL100 Class definition does not have a new line.\n'}
[14.974629] (stem_pkg) StdoutLine: {'line': b'    def __init__(self):\n'}
[14.975212] (stem_pkg) StdoutLine: {'line': b'^\n'}
[14.975785] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.976421] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tester.py:16:21: E251 unexpected spaces around keyword / parameter equals\n'}
[14.977045] (stem_pkg) StdoutLine: {'line': b'            on_press = self.on_press,\n'}
[14.977683] (stem_pkg) StdoutLine: {'line': b'                    ^\n'}
[14.978298] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.978911] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tester.py:16:23: E251 unexpected spaces around keyword / parameter equals\n'}
[14.979636] (stem_pkg) StdoutLine: {'line': b'            on_press = self.on_press,\n'}
[14.980234] (stem_pkg) StdoutLine: {'line': b'                      ^\n'}
[14.980841] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.981476] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tester.py:17:23: E251 unexpected spaces around keyword / parameter equals\n'}
[14.982077] (stem_pkg) StdoutLine: {'line': b'            on_release = self.on_release)\n'}
[14.982680] (stem_pkg) StdoutLine: {'line': b'                      ^\n'}
[14.983258] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.983810] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tester.py:17:25: E251 unexpected spaces around keyword / parameter equals\n'}
[14.984374] (stem_pkg) StdoutLine: {'line': b'            on_release = self.on_release)\n'}
[14.984977] (stem_pkg) StdoutLine: {'line': b'                        ^\n'}
[14.985544] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.986147] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tester.py:21:43: E203 whitespace before ':'\n"}
[14.986767] (stem_pkg) StdoutLine: {'line': b'    def publish_key_command_msg(self, msg) :\n'}
[14.987386] (stem_pkg) StdoutLine: {'line': b'                                          ^\n'}
[14.987938] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.988448] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tester.py:29:1: B901 blind except: statement\n'}
[14.989033] (stem_pkg) StdoutLine: {'line': b'        except:\n'}
[14.989607] (stem_pkg) StdoutLine: {'line': b'^\n'}
[14.990143] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.990755] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tester.py:29:9: E722 do not use bare 'except'\n"}
[14.991317] (stem_pkg) StdoutLine: {'line': b'        except:\n'}
[14.991874] (stem_pkg) StdoutLine: {'line': b'        ^\n'}
[14.992396] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.993003] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tester.py:32:32: E203 whitespace before ':'\n"}
[14.993619] (stem_pkg) StdoutLine: {'line': b'        if msg.data is not None :\n'}
[14.994184] (stem_pkg) StdoutLine: {'line': b'                               ^\n'}
[14.994739] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.995266] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tester.py:37:17: Q000 Double quotes found but single quotes preferred\n'}
[14.995892] (stem_pkg) StdoutLine: {'line': b'        if k == "w" :\n'}
[14.996462] (stem_pkg) StdoutLine: {'line': b'                ^\n'}
[14.997061] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.997654] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tester.py:37:20: E203 whitespace before ':'\n"}
[14.998210] (stem_pkg) StdoutLine: {'line': b'        if k == "w" :\n'}
[14.998731] (stem_pkg) StdoutLine: {'line': b'                   ^\n'}
[14.999260] (stem_pkg) StdoutLine: {'line': b'\n'}
[14.999820] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tester.py:38:17: Q000 Double quotes found but single quotes preferred\n'}
[15.000421] (stem_pkg) StdoutLine: {'line': b'            c = "up"\n'}
[15.001001] (stem_pkg) StdoutLine: {'line': b'                ^\n'}
[15.001584] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.002121] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tester.py:39:19: Q000 Double quotes found but single quotes preferred\n'}
[15.002651] (stem_pkg) StdoutLine: {'line': b'        elif k == "s" :\n'}
[15.003238] (stem_pkg) StdoutLine: {'line': b'                  ^\n'}
[15.003819] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.004402] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tester.py:39:22: E203 whitespace before ':'\n"}
[15.004968] (stem_pkg) StdoutLine: {'line': b'        elif k == "s" :\n'}
[15.005621] (stem_pkg) StdoutLine: {'line': b'                     ^\n'}
[15.006212] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.006864] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tester.py:40:17: Q000 Double quotes found but single quotes preferred\n'}
[15.007435] (stem_pkg) StdoutLine: {'line': b'            c = "down"\n'}
[15.008024] (stem_pkg) StdoutLine: {'line': b'                ^\n'}
[15.008595] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.009510] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tester.py:41:19: Q000 Double quotes found but single quotes preferred\n'}
[15.010174] (stem_pkg) StdoutLine: {'line': b'        elif k == "a" :\n'}
[15.010800] (stem_pkg) StdoutLine: {'line': b'                  ^\n'}
[15.011479] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.012050] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tester.py:41:22: E203 whitespace before ':'\n"}
[15.012572] (stem_pkg) StdoutLine: {'line': b'        elif k == "a" :\n'}
[15.013268] (stem_pkg) StdoutLine: {'line': b'                     ^\n'}
[15.013879] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.014434] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tester.py:42:17: Q000 Double quotes found but single quotes preferred\n'}
[15.015080] (stem_pkg) StdoutLine: {'line': b'            c = "left"\n'}
[15.015814] (stem_pkg) StdoutLine: {'line': b'                ^\n'}
[15.016406] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.017046] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tester.py:43:19: Q000 Double quotes found but single quotes preferred\n'}
[15.017676] (stem_pkg) StdoutLine: {'line': b'        elif k == "d" :\n'}
[15.018234] (stem_pkg) StdoutLine: {'line': b'                  ^\n'}
[15.018840] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.019409] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tester.py:43:22: E203 whitespace before ':'\n"}
[15.020028] (stem_pkg) StdoutLine: {'line': b'        elif k == "d" :\n'}
[15.020557] (-) TimerEvent: {}
[15.021121] (stem_pkg) StdoutLine: {'line': b'                     ^\n'}
[15.021891] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.022575] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tester.py:44:17: Q000 Double quotes found but single quotes preferred\n'}
[15.023154] (stem_pkg) StdoutLine: {'line': b'            c = "right"\n'}
[15.023774] (stem_pkg) StdoutLine: {'line': b'                ^\n'}
[15.024443] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.025137] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tester.py:45:19: Q000 Double quotes found but single quotes preferred\n'}
[15.025743] (stem_pkg) StdoutLine: {'line': b'        elif k == "," :\n'}
[15.026305] (stem_pkg) StdoutLine: {'line': b'                  ^\n'}
[15.026890] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.027486] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tester.py:45:22: E203 whitespace before ':'\n"}
[15.028063] (stem_pkg) StdoutLine: {'line': b'        elif k == "," :\n'}
[15.028671] (stem_pkg) StdoutLine: {'line': b'                     ^\n'}
[15.029313] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.029943] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tester.py:46:17: Q000 Double quotes found but single quotes preferred\n'}
[15.030519] (stem_pkg) StdoutLine: {'line': b'            c = "turn left"\n'}
[15.031136] (stem_pkg) StdoutLine: {'line': b'                ^\n'}
[15.031644] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.032158] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tester.py:47:19: Q000 Double quotes found but single quotes preferred\n'}
[15.032691] (stem_pkg) StdoutLine: {'line': b'        elif k == "." :\n'}
[15.033439] (stem_pkg) StdoutLine: {'line': b'                  ^\n'}
[15.033976] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.034495] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tester.py:47:22: E203 whitespace before ':'\n"}
[15.035123] (stem_pkg) StdoutLine: {'line': b'        elif k == "." :\n'}
[15.035696] (stem_pkg) StdoutLine: {'line': b'                     ^\n'}
[15.036243] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.036808] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tester.py:48:17: Q000 Double quotes found but single quotes preferred\n'}
[15.037446] (stem_pkg) StdoutLine: {'line': b'            c = "turn right"\n'}
[15.038071] (stem_pkg) StdoutLine: {'line': b'                ^\n'}
[15.038641] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.039206] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tester.py:49:13: E203 whitespace before ':'\n"}
[15.039881] (stem_pkg) StdoutLine: {'line': b'        else :\n'}
[15.040469] (stem_pkg) StdoutLine: {'line': b'            ^\n'}
[15.040849] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.041286] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tester.py:57:1: E302 expected 2 blank lines, found 1\n'}
[15.041657] (stem_pkg) StdoutLine: {'line': b'def main(args=None) :\n'}
[15.042130] (stem_pkg) StdoutLine: {'line': b'^\n'}
[15.042693] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.043171] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tester.py:57:20: E203 whitespace before ':'\n"}
[15.043507] (stem_pkg) StdoutLine: {'line': b'def main(args=None) :\n'}
[15.043862] (stem_pkg) StdoutLine: {'line': b'                   ^\n'}
[15.044239] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.044794] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tester.py:68:1: E305 expected 2 blank lines after class or function definition, found 1\n'}
[15.045513] (stem_pkg) StdoutLine: {'line': b"if __name__ == '__main__' :\n"}
[15.046218] (stem_pkg) StdoutLine: {'line': b'^\n'}
[15.046661] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.047123] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tester.py:68:26: E203 whitespace before ':'\n"}
[15.047620] (stem_pkg) StdoutLine: {'line': b"if __name__ == '__main__' :\n"}
[15.048043] (stem_pkg) StdoutLine: {'line': b'                         ^\n'}
[15.048454] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.048861] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tester.py:69:11: W292 no newline at end of file\n'}
[15.049392] (stem_pkg) StdoutLine: {'line': b'    main()          ^\n'}
[15.049809] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.050202] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tensor_publisher.py:5:1: I100 Import statements are in the wrong order. 'import cv2' should be before 'from std_msgs.msg import String'\n"}
[15.050637] (stem_pkg) StdoutLine: {'line': b'import cv2\n'}
[15.051170] (stem_pkg) StdoutLine: {'line': b'^\n'}
[15.051764] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.052338] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tensor_publisher.py:7:1: I100 Import statements are in the wrong order. 'import numpy' should be before 'import tensorflow'\n"}
[15.052887] (stem_pkg) StdoutLine: {'line': b'import numpy as np\n'}
[15.053504] (stem_pkg) StdoutLine: {'line': b'^\n'}
[15.054089] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.054675] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tensor_publisher.py:8:1: I100 Import statements are in the wrong order. 'import time' should be before 'import numpy' and in a different group.\n"}
[15.055157] (stem_pkg) StdoutLine: {'line': b'import time\n'}
[15.055711] (stem_pkg) StdoutLine: {'line': b'^\n'}
[15.056270] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.056808] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tensor_publisher.py:8:1: I201 Missing newline between import groups. 'import time' is identified as Stdlib and 'import numpy' is identified as Third Party.\n"}
[15.057471] (stem_pkg) StdoutLine: {'line': b'import time\n'}
[15.057967] (stem_pkg) StdoutLine: {'line': b'^\n'}
[15.058372] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.058767] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tensor_publisher.py:9:1: I201 Missing newline between import groups. 'import I2C_LCD_driver' is identified as Third Party and 'import time' is identified as Stdlib.\n"}
[15.059237] (stem_pkg) StdoutLine: {'line': b'import I2C_LCD_driver\n'}
[15.059736] (stem_pkg) StdoutLine: {'line': b'^\n'}
[15.060261] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.060801] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tensor_publisher.py:12:1: E302 expected 2 blank lines, found 1\n'}
[15.061361] (stem_pkg) StdoutLine: {'line': b'class TensorPublisher(Node) :\n'}
[15.061844] (stem_pkg) StdoutLine: {'line': b'^\n'}
[15.062305] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.062843] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tensor_publisher.py:12:28: E203 whitespace before ':'\n"}
[15.063395] (stem_pkg) StdoutLine: {'line': b'class TensorPublisher(Node) :\n'}
[15.063834] (stem_pkg) StdoutLine: {'line': b'                           ^\n'}
[15.064280] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.064980] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tensor_publisher.py:13:1: CNL100 Class definition does not have a new line.\n'}
[15.066268] (stem_pkg) StdoutLine: {'line': b'    def __init__(self, interpreter, cap, mylcd):\n'}
[15.067434] (stem_pkg) StdoutLine: {'line': b'^\n'}
[15.068526] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.069521] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tensor_publisher.py:17:34: Q000 Double quotes found but single quotes preferred\n'}
[15.070109] (stem_pkg) StdoutLine: {'line': b'        mylcd.lcd_display_string("",2)\n'}
[15.070636] (stem_pkg) StdoutLine: {'line': b'                                 ^\n'}
[15.071133] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.071550] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tensor_publisher.py:17:36: E231 missing whitespace after ','\n"}
[15.071970] (stem_pkg) StdoutLine: {'line': b'        mylcd.lcd_display_string("",2)\n'}
[15.072418] (stem_pkg) StdoutLine: {'line': b'                                   ^\n'}
[15.072882] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.073401] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tensor_publisher.py:23:16: Q000 Double quotes found but single quotes preferred\n'}
[15.073997] (stem_pkg) StdoutLine: {'line': b'        data = "!"+ \'{0:0^3}\'.format(f\'{small}\') + \'{0:0^3}\'.format(f\'{big}\') +"!"\n'}
[15.074829] (stem_pkg) StdoutLine: {'line': b'               ^\n'}
[15.075403] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.075923] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tensor_publisher.py:23:19: E225 missing whitespace around operator\n'}
[15.076450] (stem_pkg) StdoutLine: {'line': b'        data = "!"+ \'{0:0^3}\'.format(f\'{small}\') + \'{0:0^3}\'.format(f\'{big}\') +"!"\n'}
[15.077061] (stem_pkg) StdoutLine: {'line': b'                  ^\n'}
[15.077612] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.078069] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tensor_publisher.py:23:80: E225 missing whitespace around operator\n'}
[15.078423] (stem_pkg) StdoutLine: {'line': b'        data = "!"+ \'{0:0^3}\'.format(f\'{small}\') + \'{0:0^3}\'.format(f\'{big}\') +"!"\n'}
[15.078794] (stem_pkg) StdoutLine: {'line': b'                                                                               ^\n'}
[15.079164] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.079553] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tensor_publisher.py:23:80: Q000 Double quotes found but single quotes preferred\n'}
[15.080034] (stem_pkg) StdoutLine: {'line': b'        data = "!"+ \'{0:0^3}\'.format(f\'{small}\') + \'{0:0^3}\'.format(f\'{big}\') +"!"\n'}
[15.080593] (stem_pkg) StderrLine: {'line': b'\x1b[33m=============================== warnings summary ===============================\x1b[0m\n'}
[15.081353] (stem_pkg) StderrLine: {'line': b'../../../.local/lib/python3.8/site-packages/_pytest/nodes.py:633\n'}
[15.081878] (stem_pkg) StderrLine: {'line': b'  Warning: The (fspath: py.path.local) argument to Package is deprecated. Please use the (path: pathlib.Path) argument instead.\n'}
[15.082411] (stem_pkg) StderrLine: {'line': b'  See https://docs.pytest.org/en/latest/deprecations.html#fspath-argument-for-node-constructors-replaced-with-pathlib-path\n'}
[15.082914] (stem_pkg) StderrLine: {'line': b'\n'}
[15.083444] (stem_pkg) StderrLine: {'line': b'../../../../../opt/ros/foxy/lib/python3.8/site-packages/launch_testing/pytest/hooks.py:179\n'}
[15.084008] (stem_pkg) StderrLine: {'line': b'../../../../../opt/ros/foxy/lib/python3.8/site-packages/launch_testing/pytest/hooks.py:179\n'}
[15.084517] (stem_pkg) StderrLine: {'line': b'../../../../../opt/ros/foxy/lib/python3.8/site-packages/launch_testing/pytest/hooks.py:179\n'}
[15.085180] (stem_pkg) StderrLine: {'line': b'  Warning: The (fspath: py.path.local) argument to Module is deprecated. Please use the (path: pathlib.Path) argument instead.\n'}
[15.086042] (stem_pkg) StderrLine: {'line': b'  See https://docs.pytest.org/en/latest/deprecations.html#fspath-argument-for-node-constructors-replaced-with-pathlib-path\n'}
[15.086645] (stem_pkg) StderrLine: {'line': b'\n'}
[15.087256] (stem_pkg) StderrLine: {'line': b'../../../../../usr/lib/python3/dist-packages/pydocstyle/config.py:6\n'}
[15.093975] (stem_pkg) StderrLine: {'line': b"  Warning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3, and in 3.10 it will stop working\n"}
[15.094463] (stem_pkg) StderrLine: {'line': b'\n'}
[15.094901] (stem_pkg) StderrLine: {'line': b'-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n'}
[15.095319] (stem_pkg) StdoutLine: {'line': b'                                                                               ^\n'}
[15.095739] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.096146] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tensor_publisher.py:25:34: Q000 Double quotes found but single quotes preferred\n'}
[15.096547] (stem_pkg) StdoutLine: {'line': b'        mylcd.lcd_display_string("",2)\n'}
[15.097017] (stem_pkg) StdoutLine: {'line': b'                                 ^\n'}
[15.097603] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.098264] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tensor_publisher.py:25:36: E231 missing whitespace after ','\n"}
[15.098904] (stem_pkg) StdoutLine: {'line': b'        mylcd.lcd_display_string("",2)\n'}
[15.099514] (stem_pkg) StdoutLine: {'line': b'                                   ^\n'}
[15.099973] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.100442] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tensor_publisher.py:26:34: Q000 Double quotes found but single quotes preferred\n'}
[15.100984] (stem_pkg) StdoutLine: {'line': b'        mylcd.lcd_display_string("Started",2)\n'}
[15.101547] (stem_pkg) StdoutLine: {'line': b'                                 ^\n'}
[15.102093] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.102614] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tensor_publisher.py:26:43: E231 missing whitespace after ','\n"}
[15.103308] (stem_pkg) StdoutLine: {'line': b'        mylcd.lcd_display_string("Started",2)\n'}
[15.104067] (stem_pkg) StdoutLine: {'line': b'                                          ^\n'}
[15.104647] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.105294] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tensor_publisher.py:31:50: E203 whitespace before ':'\n"}
[15.105801] (stem_pkg) StdoutLine: {'line': b'    def max_tensor(self, interpreter, cap, mylcd) :\n'}
[15.106318] (stem_pkg) StdoutLine: {'line': b'                                                 ^\n'}
[15.106863] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.107416] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tensor_publisher.py:35:16: F821 undefined name 'now'\n"}
[15.108068] (stem_pkg) StdoutLine: {'line': b'        while (now <= 5) and cap.isOpened() :\n'}
[15.108708] (stem_pkg) StdoutLine: {'line': b'               ^\n'}
[15.109508] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.110186] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tensor_publisher.py:35:44: E203 whitespace before ':'\n"}
[15.110873] (stem_pkg) StdoutLine: {'line': b'        while (now <= 5) and cap.isOpened() :\n'}
[15.111614] (stem_pkg) StdoutLine: {'line': b'                                           ^\n'}
[15.112210] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.112860] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tensor_publisher.py:38:38: Q000 Double quotes found but single quotes preferred\n'}
[15.113673] (stem_pkg) StdoutLine: {'line': b'            mylcd.lcd_display_string("",2)\n'}
[15.114173] (stem_pkg) StdoutLine: {'line': b'                                     ^\n'}
[15.114589] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.115168] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tensor_publisher.py:38:40: E231 missing whitespace after ','\n"}
[15.115741] (stem_pkg) StdoutLine: {'line': b'            mylcd.lcd_display_string("",2)\n'}
[15.116331] (stem_pkg) StdoutLine: {'line': b'                                       ^\n'}
[15.117145] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.117890] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tensor_publisher.py:39:61: E231 missing whitespace after ','\n"}
[15.118398] (stem_pkg) StdoutLine: {'line': b"            mylcd.lcd_display_string(f'Started in {now} sec',2)\n"}
[15.118968] (stem_pkg) StdoutLine: {'line': b'                                                            ^\n'}
[15.119586] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.120111] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tensor_publisher.py:56:20: C408 Unnecessary list call - rewrite as a literal.\n'}
[15.120797] (-) TimerEvent: {}
[15.121423] (stem_pkg) StdoutLine: {'line': b'            data = list()\n'}
[15.122146] (stem_pkg) StdoutLine: {'line': b'                   ^\n'}
[15.122890] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.123425] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tensor_publisher.py:58:32: E203 whitespace before ':'\n"}
[15.124304] (stem_pkg) StdoutLine: {'line': b'            for shape in shaped :\n'}
[15.125009] (stem_pkg) StdoutLine: {'line': b'                               ^\n'}
[15.125620] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.126156] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tensor_publisher.py:60:44: C417 Unnecessary use of map - use a generator expression instead.\n'}
[15.126666] (stem_pkg) StdoutLine: {'line': b'            l_x, l_y, l_c, r_x, r_y, r_c = map(lambda x : x, data)\n'}
[15.127150] (stem_pkg) StdoutLine: {'line': b'                                           ^\n'}
[15.127799] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.128376] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tensor_publisher.py:60:56: E203 whitespace before ':'\n"}
[15.128982] (stem_pkg) StdoutLine: {'line': b'            l_x, l_y, l_c, r_x, r_y, r_c = map(lambda x : x, data)\n'}
[15.129764] (stem_pkg) StdoutLine: {'line': b'                                                       ^\n'}
[15.130322] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.130802] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tensor_publisher.py:62:13: E115 expected an indented block (comment)\n'}
[15.131198] (stem_pkg) StdoutLine: {'line': b'            # length\xeb\xa5\xbc float\xec\x9c\xbc\xeb\xa1\x9c \xeb\xb3\xb4\xeb\x82\xb4\xeb\x8f\x84 \xeb\x90\x98\xec\xa5\xac?\n'}
[15.131699] (stem_pkg) StdoutLine: {'line': b'            ^\n'}
[15.132262] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.132814] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tensor_publisher.py:66:13: E203 whitespace before ':'\n"}
[15.133413] (stem_pkg) StdoutLine: {'line': b'        else :\n'}
[15.133913] (stem_pkg) StdoutLine: {'line': b'            ^\n'}
[15.134437] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.134943] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tensor_publisher.py:69:46: E203 whitespace before ':'\n"}
[15.135456] (stem_pkg) StdoutLine: {'line': b'    def tensor_result(self, interpreter, cap) :\n'}
[15.136026] (stem_pkg) StdoutLine: {'line': b'                                             ^\n'}
[15.136747] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.137426] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tensor_publisher.py:90:16: C408 Unnecessary list call - rewrite as a literal.\n'}
[15.137995] (stem_pkg) StdoutLine: {'line': b'        data = list()\n'}
[15.138529] (stem_pkg) StdoutLine: {'line': b'               ^\n'}
[15.139086] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.139607] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tensor_publisher.py:92:28: E203 whitespace before ':'\n"}
[15.140128] (stem_pkg) StdoutLine: {'line': b'        for shape in shaped :\n'}
[15.140717] (stem_pkg) StdoutLine: {'line': b'                           ^\n'}
[15.141336] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.141944] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tensor_publisher.py:95:20: Q000 Double quotes found but single quotes preferred\n'}
[15.142596] (stem_pkg) StdoutLine: {'line': b'        datastr = ["^"] + datastr\n'}
[15.143155] (stem_pkg) StdoutLine: {'line': b'                   ^\n'}
[15.143747] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.144333] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tensor_publisher.py:96:20: Q000 Double quotes found but single quotes preferred\n'}
[15.144863] (stem_pkg) StdoutLine: {'line': b'        msg.data = "*".join(datastr)\n'}
[15.145445] (stem_pkg) StdoutLine: {'line': b'                   ^\n'}
[15.145961] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.146464] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tensor_publisher.py:100:1: E302 expected 2 blank lines, found 1\n'}
[15.147055] (stem_pkg) StdoutLine: {'line': b'def main(args=None) :\n'}
[15.147671] (stem_pkg) StdoutLine: {'line': b'^\n'}
[15.148187] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.148704] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tensor_publisher.py:100:20: E203 whitespace before ':'\n"}
[15.149287] (stem_pkg) StdoutLine: {'line': b'def main(args=None) :\n'}
[15.149831] (stem_pkg) StdoutLine: {'line': b'                   ^\n'}
[15.150426] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.150863] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tensor_publisher.py:102:50: Q000 Double quotes found but single quotes preferred\n'}
[15.151280] (stem_pkg) StdoutLine: {'line': b'    interpreter = tf.lite.Interpreter(model_path="lite-model_movenet_singlepose_lightning_3.tflite")\n'}
[15.151670] (stem_pkg) StdoutLine: {'line': b'                                                 ^\n'}
[15.152123] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.152700] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tensor_publisher.py:102:100: E501 line too long (100 > 99 characters)\n'}
[15.153223] (stem_pkg) StdoutLine: {'line': b'    interpreter = tf.lite.Interpreter(model_path="lite-model_movenet_singlepose_lightning_3.tflite")\n'}
[15.153659] (stem_pkg) StdoutLine: {'line': b'                                                                                                   ^\n'}
[15.154066] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.154478] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tensor_publisher.py:116:1: E305 expected 2 blank lines after class or function definition, found 1\n'}
[15.154860] (stem_pkg) StdoutLine: {'line': b"if __name__ == '__main__' :\n"}
[15.155235] (stem_pkg) StdoutLine: {'line': b'^\n'}
[15.155605] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.155978] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tensor_publisher.py:116:26: E203 whitespace before ':'\n"}
[15.156391] (stem_pkg) StdoutLine: {'line': b"if __name__ == '__main__' :\n"}
[15.157057] (stem_pkg) StdoutLine: {'line': b'                         ^\n'}
[15.157704] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.158163] (stem_pkg) StdoutLine: {'line': b"./stem_pkg/tensor_publisher.py:119:1: E265 block comment should start with '# '\n"}
[15.158647] (stem_pkg) StdoutLine: {'line': b'#\xec\xbd\x94, \xec\x99\xbc\xeb\x88\x88, \xec\x98\xa4\xeb\x88\x88, \xec\x99\xbc\xea\xb7\x80, \xec\x98\xa4\xea\xb7\x80, \xec\x99\xbc\xec\x96\xb4\xea\xb9\xa8, \xec\x98\xa4\xec\x96\xb4\xea\xb9\xa8^\n'}
[15.159167] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.159647] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tensor_publisher.py:119:29: W292 no newline at end of file\n'}
[15.160189] (stem_pkg) StdoutLine: {'line': b'#\xec\xbd\x94, \xec\x99\xbc\xeb\x88\x88, \xec\x98\xa4\xeb\x88\x88, \xec\x99\xbc\xea\xb7\x80, \xec\x98\xa4\xea\xb7\x80, \xec\x99\xbc\xec\x96\xb4\xea\xb9\xa8, \xec\x98\xa4\xec\x96\xb4\xea\xb9\xa8                            ^\n'}
[15.160759] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.161465] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tensor_publisher.py:119:29: W292 no newline at end of file\n'}
[15.162090] (stem_pkg) StdoutLine: {'line': b'#\xec\xbd\x94, \xec\x99\xbc\xeb\x88\x88, \xec\x98\xa4\xeb\x88\x88, \xec\x99\xbc\xea\xb7\x80, \xec\x98\xa4\xea\xb7\x80, \xec\x99\xbc\xec\x96\xb4\xea\xb9\xa8, \xec\x98\xa4\xec\x96\xb4\xea\xb9\xa8                            ^\n'}
[15.162633] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.163177] (stem_pkg) StdoutLine: {'line': b'./stem_pkg/tensor_publisher.py:119:29: W292 no newline at end of file\n'}
[15.163678] (stem_pkg) StdoutLine: {'line': b'#\xec\xbd\x94, \xec\x99\xbc\xeb\x88\x88, \xec\x98\xa4\xeb\x88\x88, \xec\x99\xbc\xea\xb7\x80, \xec\x98\xa4\xea\xb7\x80, \xec\x99\xbc\xec\x96\xb4\xea\xb9\xa8, \xec\x98\xa4\xec\x96\xb4\xea\xb9\xa8                            ^\n'}
[15.164228] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.164826] (stem_pkg) StdoutLine: {'line': b'1     B901 blind except: statement\n'}
[15.165622] (stem_pkg) StdoutLine: {'line': b'3     C408 Unnecessary list call - rewrite as a literal.\n'}
[15.166191] (stem_pkg) StdoutLine: {'line': b'5     C417 Unnecessary use of map - use a generator expression instead.\n'}
[15.166795] (stem_pkg) StdoutLine: {'line': b'6     CNL100 Class definition does not have a new line.\n'}
[15.167302] (stem_pkg) StdoutLine: {'line': b'61    E111 indentation is not a multiple of four\n'}
[15.167842] (stem_pkg) StdoutLine: {'line': b'9     E114 indentation is not a multiple of four (comment)\n'}
[15.168380] (stem_pkg) StdoutLine: {'line': b'1     E115 expected an indented block (comment)\n'}
[15.168809] (stem_pkg) StdoutLine: {'line': b"2     E202 whitespace before ')'\n"}
[15.169337] (stem_pkg) StdoutLine: {'line': b"51    E203 whitespace before ':'\n"}
[15.169898] (stem_pkg) StdoutLine: {'line': b'2     E225 missing whitespace around operator\n'}
[15.170436] (stem_pkg) StdoutLine: {'line': b"5     E231 missing whitespace after ','\n"}
[15.171071] (stem_pkg) StdoutLine: {'line': b'20    E251 unexpected spaces around keyword / parameter equals\n'}
[15.171654] (stem_pkg) StdoutLine: {'line': b'11    E261 at least two spaces before inline comment\n'}
[15.172237] (stem_pkg) StdoutLine: {'line': b"7     E262 inline comment should start with '# '\n"}
[15.172830] (stem_pkg) StdoutLine: {'line': b"11    E265 block comment should start with '# '\n"}
[15.173386] (stem_pkg) StdoutLine: {'line': b'16    E301 expected 1 blank line, found 0\n'}
[15.173791] (stem_pkg) StdoutLine: {'line': b'13    E302 expected 2 blank lines, found 1\n'}
[15.174264] (stem_pkg) StdoutLine: {'line': b'1     E303 too many blank lines (3)\n'}
[15.174841] (stem_pkg) StdoutLine: {'line': b'9     E305 expected 2 blank lines after class or function definition, found 0\n'}
[15.175329] (stem_pkg) StdoutLine: {'line': b'2     E402 module level import not at top of file\n'}
[15.175812] (stem_pkg) StdoutLine: {'line': b'3     E501 line too long (102 > 99 characters)\n'}
[15.176286] (stem_pkg) StdoutLine: {'line': b'1     E703 statement ends with a semicolon\n'}
[15.176713] (stem_pkg) StdoutLine: {'line': b"1     E722 do not use bare 'except'\n"}
[15.177241] (stem_pkg) StdoutLine: {'line': b"1     F401 'socket.NI_NUMERICHOST' imported but unused\n"}
[15.177757] (stem_pkg) StdoutLine: {'line': b"1     F821 undefined name 'now'\n"}
[15.178231] (stem_pkg) StdoutLine: {'line': b"1     F841 local variable 'data' is assigned to but never used\n"}
[15.178680] (stem_pkg) StdoutLine: {'line': b"13    I100 Import statements are in the wrong order. 'import os' should be before 'from setuptools import setup' and in a different group.\n"}
[15.179229] (stem_pkg) StdoutLine: {'line': b"8     I201 Missing newline between import groups. 'import os' is identified as Stdlib and 'from setuptools import setup' is identified as Third Party.\n"}
[15.179742] (stem_pkg) StdoutLine: {'line': b'39    Q000 Double quotes found but single quotes preferred\n'}
[15.180246] (stem_pkg) StdoutLine: {'line': b'1     W291 trailing whitespace\n'}
[15.180748] (stem_pkg) StdoutLine: {'line': b'15    W292 no newline at end of file\n'}
[15.181293] (stem_pkg) StdoutLine: {'line': b'3     W293 blank line contains whitespace\n'}
[15.182021] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.182769] (stem_pkg) StdoutLine: {'line': b'15 files checked\n'}
[15.183307] (stem_pkg) StdoutLine: {'line': b'323 errors\n'}
[15.183824] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.184415] (stem_pkg) StdoutLine: {'line': b"'B'-type errors: 1\n"}
[15.185007] (stem_pkg) StdoutLine: {'line': b"'C'-type errors: 14\n"}
[15.185576] (stem_pkg) StdoutLine: {'line': b"'E'-type errors: 226\n"}
[15.186092] (stem_pkg) StdoutLine: {'line': b"'F'-type errors: 3\n"}
[15.186627] (stem_pkg) StdoutLine: {'line': b"'I'-type errors: 21\n"}
[15.187260] (stem_pkg) StdoutLine: {'line': b"'Q'-type errors: 39\n"}
[15.188170] (stem_pkg) StdoutLine: {'line': b"'W'-type errors: 19\n"}
[15.189500] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.190886] (stem_pkg) StdoutLine: {'line': b'Checked files:\n'}
[15.191925] (stem_pkg) StdoutLine: {'line': b'\n'}
[15.192597] (stem_pkg) StdoutLine: {'line': b'* ./setup.py\n'}
[15.193284] (stem_pkg) StdoutLine: {'line': b'* ./launch/stem.launch.py\n'}
[15.193951] (stem_pkg) StdoutLine: {'line': b'* ./stem_pkg/serial_talker.py\n'}
[15.194590] (stem_pkg) StdoutLine: {'line': b'* ./stem_pkg/__init__.py\n'}
[15.195193] (stem_pkg) StdoutLine: {'line': b'* ./stem_pkg/I2C_LCD_driver.py\n'}
[15.195821] (stem_pkg) StdoutLine: {'line': b'* ./stem_pkg/controller.py\n'}
[15.196474] (stem_pkg) StdoutLine: {'line': b'* ./stem_pkg/async_serial_talker.py\n'}
[15.197147] (stem_pkg) StdoutLine: {'line': b'* ./stem_pkg/cmd_selector.py\n'}
[15.197752] (stem_pkg) StdoutLine: {'line': b'* ./stem_pkg/calculator.py\n'}
[15.198337] (stem_pkg) StdoutLine: {'line': b'* ./stem_pkg/tensor.py\n'}
[15.199038] (stem_pkg) StdoutLine: {'line': b'* ./stem_pkg/tester.py\n'}
[15.199661] (stem_pkg) StdoutLine: {'line': b'* ./stem_pkg/tensor_publisher.py\n'}
[15.200256] (stem_pkg) StdoutLine: {'line': b'* ./test/test_flake8.py\n'}
[15.200895] (stem_pkg) StdoutLine: {'line': b'* ./test/test_copyright.py\n'}
[15.201617] (stem_pkg) StdoutLine: {'line': b'* ./test/test_pep257.py\n'}
[15.202213] (stem_pkg) StdoutLine: {'line': b'------- generated xml file: /home/pi/sunflower/build/stem_pkg/pytest.xml -------\n'}
[15.202822] (stem_pkg) StdoutLine: {'line': b'=========================== short test summary info ============================\n'}
[15.203500] (stem_pkg) StdoutLine: {'line': b'FAILED test/test_copyright.py::test_copyright - AssertionError: Found errors\n'}
[15.204095] (stem_pkg) StdoutLine: {'line': b'FAILED test/test_flake8.py::test_flake8 - AssertionError: Found 323 code styl...\n'}
[15.204752] (stem_pkg) StdoutLine: {'line': b'\x1b[31m=================== \x1b[31m\x1b[1m2 failed\x1b[0m, \x1b[32m1 passed\x1b[0m, \x1b[33m5 warnings\x1b[0m\x1b[31m in 3.77s\x1b[0m\x1b[31m ====================\x1b[0m\n'}
[15.205542] (test_pkg) StdoutLine: {'line': b'test/test_copyright.py \x1b[32m.\x1b[0m\x1b[33m                                                 [ 33%]\x1b[0m\n'}
[15.206327] (stem_pkg) CommandEnded: {'returncode': 1}
[15.208158] (stem_pkg) TestFailure: {'identifier': 'stem_pkg'}
[15.208402] (stem_pkg) JobEnded: {'identifier': 'stem_pkg', 'rc': 0}
[15.210797] (test_pkg) StdoutLine: {'line': b'test/test_flake8.py \x1b[32m.\x1b[0m\x1b[33m                                                    [ 66%]\x1b[0m\n'}
[15.211726] (test_pkg) StdoutLine: {'line': b'test/test_pep257.py \x1b[32m.\x1b[0m\x1b[33m                                                    [100%]\x1b[0m\n'}
[15.212419] (test_pkg) StderrLine: {'line': b'\n'}
[15.213743] (test_pkg) StderrLine: {'line': b'\x1b[33m=============================== warnings summary ===============================\x1b[0m\n'}
[15.214407] (test_pkg) StderrLine: {'line': b'../../../../../opt/ros/foxy/lib/python3.8/site-packages/launch_testing/pytest/hooks.py:179\n'}
[15.215099] (test_pkg) StderrLine: {'line': b'../../../../../opt/ros/foxy/lib/python3.8/site-packages/launch_testing/pytest/hooks.py:179\n'}
[15.215751] (test_pkg) StderrLine: {'line': b'../../../../../opt/ros/foxy/lib/python3.8/site-packages/launch_testing/pytest/hooks.py:179\n'}
[15.216535] (test_pkg) StderrLine: {'line': b'  Warning: The (fspath: py.path.local) argument to Module is deprecated. Please use the (path: pathlib.Path) argument instead.\n'}
[15.217513] (test_pkg) StderrLine: {'line': b'  See https://docs.pytest.org/en/latest/deprecations.html#fspath-argument-for-node-constructors-replaced-with-pathlib-path\n'}
[15.218270] (test_pkg) StderrLine: {'line': b'\n'}
[15.219132] (test_pkg) StderrLine: {'line': b'../../../../../usr/lib/python3/dist-packages/pydocstyle/config.py:6\n'}
[15.219888] (test_pkg) StderrLine: {'line': b"  Warning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3, and in 3.10 it will stop working\n"}
[15.220689] (test_pkg) StderrLine: {'line': b'\n'}
[15.221466] (-) TimerEvent: {}
[15.222076] (test_pkg) StderrLine: {'line': b'../../../.local/lib/python3.8/site-packages/_pytest/nodes.py:633\n'}
[15.222827] (test_pkg) StderrLine: {'line': b'  Warning: The (fspath: py.path.local) argument to Package is deprecated. Please use the (path: pathlib.Path) argument instead.\n'}
[15.223577] (test_pkg) StderrLine: {'line': b'  See https://docs.pytest.org/en/latest/deprecations.html#fspath-argument-for-node-constructors-replaced-with-pathlib-path\n'}
[15.224305] (test_pkg) StderrLine: {'line': b'\n'}
[15.225274] (test_pkg) StderrLine: {'line': b'-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n'}
[15.226132] (test_pkg) StdoutLine: {'line': b'------- generated xml file: /home/pi/sunflower/build/test_pkg/pytest.xml -------\n'}
[15.226962] (test_pkg) StdoutLine: {'line': b'\x1b[33m======================== \x1b[32m3 passed\x1b[0m, \x1b[33m\x1b[1m5 warnings\x1b[0m\x1b[33m in 1.86s\x1b[0m\x1b[33m =========================\x1b[0m\n'}
[15.227765] (test_pkg) CommandEnded: {'returncode': 0}
[15.229820] (test_pkg) JobEnded: {'identifier': 'test_pkg', 'rc': 0}
[15.232522] (tflite_pkg) StdoutLine: {'line': b'\x1b[1m============================= test session starts ==============================\x1b[0m\n'}
[15.235562] (tflite_pkg) StdoutLine: {'line': b'platform linux -- Python 3.8.10, pytest-7.1.2, pluggy-0.13.0\n'}
[15.236194] (tflite_pkg) StdoutLine: {'line': b'cachedir: /home/pi/sunflower/build/tflite_pkg/.pytest_cache\n'}
[15.237026] (tflite_pkg) StdoutLine: {'line': b'rootdir: /home/pi/sunflower/src/tflite_pkg\n'}
[15.237933] (tflite_pkg) StdoutLine: {'line': b'plugins: ament-flake8-0.9.6, ament-copyright-0.9.6, launch-testing-ros-0.11.6, ament-xmllint-0.9.6, ament-pep257-0.9.6, ament-lint-0.9.6, launch-testing-0.10.8, rerunfailures-10.2, repeat-0.9.1, colcon-core-0.8.3, cov-2.8.1\n'}
[15.313657] (tflite_pkg) StdoutLine: {'line': b'\x1b[1mcollecting ... \x1b[0m\x1b[1m\n'}
[15.314479] (tflite_pkg) StdoutLine: {'line': b'collected 3 items                                                              \x1b[0m\n'}
[15.316145] (tflite_pkg) StdoutLine: {'line': b'\n'}
[15.322067] (-) TimerEvent: {}
[15.424593] (-) TimerEvent: {}
[15.451004] (tflite_pkg) StdoutLine: {'line': b'test/test_copyright.py \x1b[32m.\x1b[0m\x1b[33m                                                 [ 33%]\x1b[0m\n'}
[15.527539] (-) TimerEvent: {}
[15.628336] (-) TimerEvent: {}
[15.729179] (-) TimerEvent: {}
[15.830030] (-) TimerEvent: {}
[15.930781] (-) TimerEvent: {}
[16.031587] (-) TimerEvent: {}
[16.108828] (tflite_pkg) StdoutLine: {'line': b'test/test_flake8.py \x1b[32m.\x1b[0m\x1b[33m                                                    [ 66%]\x1b[0m\n'}
[16.131757] (-) TimerEvent: {}
[16.183675] (tflite_pkg) StdoutLine: {'line': b'test/test_pep257.py \x1b[32m.\x1b[0m\x1b[33m                                                    [100%]\x1b[0m\n'}
[16.184571] (tflite_pkg) StderrLine: {'line': b'\n'}
[16.185586] (tflite_pkg) StderrLine: {'line': b'\x1b[33m=============================== warnings summary ===============================\x1b[0m\n'}
[16.187228] (tflite_pkg) StderrLine: {'line': b'../../../../../opt/ros/foxy/lib/python3.8/site-packages/launch_testing/pytest/hooks.py:179\n'}
[16.188084] (tflite_pkg) StderrLine: {'line': b'../../../../../opt/ros/foxy/lib/python3.8/site-packages/launch_testing/pytest/hooks.py:179\n'}
[16.188928] (tflite_pkg) StderrLine: {'line': b'../../../../../opt/ros/foxy/lib/python3.8/site-packages/launch_testing/pytest/hooks.py:179\n'}
[16.190945] (tflite_pkg) StderrLine: {'line': b'  Warning: The (fspath: py.path.local) argument to Module is deprecated. Please use the (path: pathlib.Path) argument instead.\n'}
[16.193018] (tflite_pkg) StderrLine: {'line': b'  See https://docs.pytest.org/en/latest/deprecations.html#fspath-argument-for-node-constructors-replaced-with-pathlib-path\n'}
[16.195110] (tflite_pkg) StderrLine: {'line': b'\n'}
[16.196724] (tflite_pkg) StderrLine: {'line': b'../../../../../usr/lib/python3/dist-packages/pydocstyle/config.py:6\n'}
[16.198642] (tflite_pkg) StderrLine: {'line': b"  Warning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3, and in 3.10 it will stop working\n"}
[16.201244] (tflite_pkg) StderrLine: {'line': b'\n'}
[16.204411] (tflite_pkg) StderrLine: {'line': b'../../../.local/lib/python3.8/site-packages/_pytest/nodes.py:633\n'}
[16.208283] (tflite_pkg) StderrLine: {'line': b'  Warning: The (fspath: py.path.local) argument to Package is deprecated. Please use the (path: pathlib.Path) argument instead.\n'}
[16.211471] (tflite_pkg) StderrLine: {'line': b'  See https://docs.pytest.org/en/latest/deprecations.html#fspath-argument-for-node-constructors-replaced-with-pathlib-path\n'}
[16.214346] (tflite_pkg) StderrLine: {'line': b'\n'}
[16.217307] (tflite_pkg) StderrLine: {'line': b'-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n'}
[16.220458] (tflite_pkg) StdoutLine: {'line': b'------ generated xml file: /home/pi/sunflower/build/tflite_pkg/pytest.xml ------\n'}
[16.224199] (tflite_pkg) StdoutLine: {'line': b'\x1b[33m======================== \x1b[32m3 passed\x1b[0m, \x1b[33m\x1b[1m5 warnings\x1b[0m\x1b[33m in 1.18s\x1b[0m\x1b[33m =========================\x1b[0m\n'}
[16.231995] (-) TimerEvent: {}
[16.333222] (-) TimerEvent: {}
[16.434781] (-) TimerEvent: {}
[16.497354] (tflite_pkg) CommandEnded: {'returncode': 0}
[16.499494] (tflite_pkg) JobEnded: {'identifier': 'tflite_pkg', 'rc': 0}
[16.504521] (-) EventReactorShutdown: {}
